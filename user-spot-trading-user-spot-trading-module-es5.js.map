{"version":3,"sources":["webpack:///src/app/user-spot-trading/user-spot-trading.component.ts","webpack:///src/app/user-spot-trading/user-spot-trading.module.ts","webpack:///src/app/user-spot-trading/user-spot-trading-routing.module.ts","webpack:///src/app/user-spot-trading/user-spot-trading.component.html"],"names":["UserSpotTradingComponent","http","ngbModal","changeDetector","route","router","session","toastr","walletsQuery","defaultLimit","limitOpts","apiUrl","user","id","wallets$","filteredBalances$","instrument","parts","split","slice","trade","price","times","quantity","toFixed","updateEvent","next","selector","template","UserSpotTradingModule","declarations","exports","imports","routes","path","component","canActivate","data","permissions","UserSpotTradingRoutingModule","forChild"],"mappings":"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","file":"user-spot-trading-user-spot-trading-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { ChangeDetectorRef, Component } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport BigNumber from 'bignumber.js'\nimport { Observable } from 'rxjs'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { ISpotTrade, SpotTradeInstrument, Trade, Wallet } from '../common/api-interfaces'\nimport { ListV2Component } from '../common/list-v2.component'\nimport { SessionService } from '../common/services/session.service'\nimport { ToastrService } from '../common/services/toastr.service'\n\n@Component({\n    selector: 'user-spot-trading',\n    templateUrl: 'user-spot-trading.component.html',\n})\nexport class UserSpotTradingComponent extends ListV2Component<ISpotTrade> {\n    public wallets$: Observable<(Wallet & { value: string })[]>\n\n    public defaultLimit = this.limitOpts[0]\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        protected toastr: ToastrService,\n        private walletsQuery: WalletsQuery\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session)\n\n        this.apiUrl = `/users/${this.session.user.id}/spot-trades`\n        this.wallets$ = this.walletsQuery.filteredBalances$\n    }\n\n    public buildCurrencyPair(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument.split('.')\n        return `${parts[0].slice(0, 3)} / ${parts[0].slice(3, 6)}`\n    }\n\n    public getBaseCurrency(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument!.split('.')\n        return parts[0].slice(0, 3)\n    }\n\n    public getCounterCurrency(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument!.split('.')\n        return parts[0].slice(3, 6)\n    }\n\n    public getTotal(trade: Trade): string {\n        return new BigNumber(trade.price!).times(trade.quantity).toFixed(2, 1)\n    }\n\n    public onExecuteTrade(): void {\n        this.updateEvent.next()\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { SpotTradingModule } from '../common/spot-trading/spot-trading.module'\nimport { DashboardModule } from '../dashboard/dashboard.module'\nimport { UserSpotTradingRoutingModule } from './user-spot-trading-routing.module'\nimport { UserSpotTradingComponent } from './user-spot-trading.component'\n\n@NgModule({\n    declarations: [UserSpotTradingComponent],\n    exports: [UserSpotTradingComponent],\n    imports: [CommonModule, UserSpotTradingRoutingModule, DashboardModule, SpotTradingModule],\n})\nexport class UserSpotTradingModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { PermissionGuard } from '../common/guards/permission.guard'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { UserSpotTradingComponent } from './user-spot-trading.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UserSpotTradingComponent,\n        canActivate: [LoggedInAuthGuard, PermissionGuard],\n        data: {\n            permissions: ['spot-trades'],\n        },\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class UserSpotTradingRoutingModule {}\n","export default \"<div class=\\\"container pt-page\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <spot-trading-feed></spot-trading-feed>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-7\\\">\\n            <account-balance class=\\\"card\\\" [compact]=\\\"true\\\" [extended]=\\\"true\\\" filter=\\\"['BTC', 'ETH', 'LTC', 'USDT.erc20', 'USD']\\\"></account-balance>\\n        </div>\\n        <div class=\\\"col-lg-10\\\">\\n            <section class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <h5 class=\\\"mb-0\\\">{{ 'common.spot-trading' | translate | titlecase }}</h5>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <spot-trading-form (onExecuteTrade)=\\\"onExecuteTrade()\\\"></spot-trading-form>\\n                </div>\\n            </section>\\n        </div>\\n        <div class=\\\"col-lg-7\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{ 'common.history' | translate }}</div>\\n                <ul class=\\\"list-group list-group-flush\\\">\\n                    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                        <li class=\\\"list-group-item py-2\\\" *ngFor=\\\"let trade of items\\\">\\n                            <div class=\\\"d-flex justify-content-between\\\">\\n                                <span> {{ buildCurrencyPair(trade.instrument) }}</span>\\n                                <span class=\\\"text-right\\\" [ngClass]=\\\"trade.side === 'buy' ? 'text-primary' : 'text-danger'\\\">\\n                                    {{ trade.side === 'buy' ? '+' : '-' }}{{ trade.quantity | amount: 7 }} {{ getBaseCurrency(trade.instrument) }}\\n                                </span>\\n                            </div>\\n                            <small class=\\\"d-flex justify-content-between\\\">\\n                                <span class=\\\"text-muted\\\">{{ trade.createdAt | date: 'short' }}</span>\\n                                <span class=\\\"text-muted text-right\\\">\\n                                    {{ getTotal(trade) | amount: 2 }} {{ getCounterCurrency(trade.instrument) }}\\n                                </span>\\n                            </small>\\n                        </li>\\n                        <li class=\\\"list-group-item py-3 text-center text-muted\\\" *ngIf=\\\"items.length === 0\\\">\\n                            <i>{{ 'common.no-trades-found' | translate }}</i>\\n                        </li>\\n                    </ng-container>\\n                </ul>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center mb-3\\\">\\n                <ngb-pagination\\n                    [(page)]=\\\"page\\\"\\n                    [collectionSize]=\\\"count\\\"\\n                    (pageChange)=\\\"select()\\\"\\n                    [pageSize]=\\\"limit\\\"\\n                    [maxSize]=\\\"5\\\"\\n                    [ellipses]=\\\"false\\\"\\n                    [rotate]=\\\"true\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                >\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";"]}