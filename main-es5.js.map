{"version":3,"sources":["webpack:///src/app/common/copy-btn/copy-btn.component.ts","webpack:///src/app/app/not-found/not-found.component.html","webpack:///src/app/common/currency-select-tab/currency-select-tab.component.scss","webpack:///src/app/common/validators/custom-validator.directive.ts","webpack:///src/app/common/models/accounting/currency.model.ts","webpack:///src/app/common/welcome/welcome.component.ts","webpack:///src/app/common/services/alert.service.ts","webpack:///src/app/app/status-message/status-message.module.ts","webpack:///src/app/common/validators/name-validator.directive.ts","webpack:///src/app/app/core/header/header.component.ts","webpack:///src/app/app/core/menu/menu-profile/menu-profile.component.ts","webpack:///src/app/common/capitalize.pipe.ts","webpack:///src/app/common/services/logout.service.ts","webpack:///src/app/common/beneficiary-form/beneficiary-form.component.ts","webpack:///src/app/common/validators/color-validator.directive.ts","webpack:///src/app/common/match-password.directive.ts","webpack:///src/app/app/core/logout-timer/logout-timer-modal.component.html","webpack:///src/app/common/profile-documents/user-file-form/user-file-form.component.ts","webpack:///src/app/common/services/core/statistics.service.ts","webpack:///src/app/common/circle-spinner/circle-spinner.component.scss","webpack:///src/app/common/amount.pipe.ts","webpack:///src/app/common/password-strength-bar/password-strength-bar.component.ts","webpack:///src/app/common/masked.pipe.ts","webpack:///src/app/store/currencies/currencies.query.ts","webpack:///src/app/common/user-details-form/user-details-form.component.ts","webpack:///src/app/common/services/google-analytics.service.ts","webpack:///src/app/common/access-error/access-errors.component.ts","webpack:///src/app/common/copy-icon/copy-icon.component.ts","webpack:///src/app/common/profile-documents/profile-documents.component.html","webpack:///src/app/common/services/session.service.ts","webpack:///src/app/common/alert-outlet/alert-outlet.component.ts","webpack:///src/app/common/start-case.pipe.ts","webpack:///src/app/common/confirmation-modal/confirmation-modal.component.ts","webpack:///src/app/app/core/header/header-notifications/header-notifications.component.html","webpack:///src/app/common/no-access-modal/no-access-modal.component.html","webpack:///src/app/common/services/core/contact.service.ts","webpack:///src/app/common/notification/notification.component.ts","webpack:///src/app/common/contact-book/contact-book.component.html","webpack:///src/app/common/user-info-table/user-info-table.component.ts","webpack:///src/app/common/welcome/welcome.component.html","webpack:///src/app/common/alert-outlet/alert-outlet.component.html","webpack:///src/app/common/validators/ip-address-validator.directive.ts","webpack:///src/app/common/services/notifications.service.ts","webpack:///src/app/common/contact-book/contact-book.component.ts","webpack:///src/app/common/services/core/user.service.ts","webpack:///src/app/common/circle-spinner/circle-spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/common/fee-preview/fee-preview.component.ts","webpack:///src/app/common/file.ts","webpack:///src/app/app/core/header/online-users-count/online-users-count.component.ts","webpack:///src/app/common/errorhandler.interceptor.ts","webpack:///src/app/app/status-message/status-message.component.ts","webpack:///src/app/common/numeric.directive.ts","webpack:///src/app/app/error-handler.service.ts","webpack:///src/app/common/beneficiary-form/beneficiary-form.component.html","webpack:///src/app/common/validate.directive.ts","webpack:///src/app/common/fee-preview/fee-preview.component.html","webpack:///src/app/common/format-date.pipe.ts","webpack:///src/app/common/copy-wrap/copy-wrap.component.html","webpack:///src/app/common/permission-select/permission-select.component.html","webpack:///src/app/common/profile-documents/user-file-form/user-file-form.component.html","webpack:///src/app/common/countries.ts","webpack:///src/app/common/is-before.pipe.ts","webpack:///src/app/common/security-check/confirm-password.modal.html","webpack:///src/app/Timestamp.ts","webpack:///src/app/common/transactions.mixins.ts","webpack:///src/app/common/services/storage.service.ts","webpack:///src/app/common/copy-icon/copy-icon.component.html","webpack:///src/app/common/validators/max-validator.directive.ts","webpack:///src/app/common/copy-btn/copy-btn.component.html","webpack:///src/app/common/deposit-instruction-table/deposit-instruction-table.component.html","webpack:///src/app/common/services/token.service.ts","webpack:///src/app/common/account-number/account-number.component.html","webpack:///src/app/common/services/mail-notifications.service.ts","webpack:///src/app/common/services/toastr.service.ts","webpack:///src/app/common/validators/birthday-validator.directive.ts","webpack:///src/app/app/not-found/not-found.component.ts","webpack:///src/app/app/status-message/status-message-outlet.component.ts","webpack:///src/app/store/wallets/wallets.query.ts","webpack:///src/app/common/format-distance-to-now.pipe.ts","webpack:///src/app/app/core/header/header-mailbox/header-mailbox.component.ts","webpack:///src/app/app/core/header/header-mailbox/header-mailbox.component.html","webpack:///src/app/store/currencies/currencies.service.ts","webpack:///src/app/app/status-message/status-message.component.html","webpack:///src/app/app/core/menu/menu.component.html","webpack:///src/app/common/password-strength.directive.ts","webpack:///src/app/common/postal-address/postal-address.component.ts","webpack:///src/app/common/services/copier.service.ts","webpack:///src/app/common/circle-spinner/circle-spinner.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/common/user-avatar/user-avatar.component.html","webpack:///src/app/common/deposit-instruction/deposit-instruction.component.ts","webpack:///src/app/common/user/user.component.html","webpack:///src/app/store/wallets/wallets.store.ts","webpack:///src/app/store/currencies/currencies.mixin.ts","webpack:///src/app/app.component.html","webpack:///src/app/common/user-avatar/user-avatar.component.ts","webpack:///src/app/common/deposit-instruction/deposit-instruction.component.html","webpack:///src/app/common/safe-resource-url.pipe.ts","webpack:///src/app/common/focus.directive.ts","webpack:///src/app/common/user-details-form/user-details-form.component.html","webpack:///src/app/common/dropzone/dropzone.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common/permission-select/permission-select.component.ts","webpack:///src/app/common/common.module.ts","webpack:///src/app/common/list.component.ts","webpack:///src/app/common/validators/integer-validator.directive.ts","webpack:///src/app/common/uuid/uuid.component.ts","webpack:///src/app/common/card-fee-schedule/card-fee-schedule.component.html","webpack:///src/app/common/validators/recipient-validator.directive.ts","webpack:///src/app/organization/organization.auth-guard.ts","webpack:///src/app/common/safe-html.pipe.ts","webpack:///src/app/common/services/confirmation.service.ts","webpack:///src/app/common/access-error/access-errors.component.html","webpack:///src/app/common/pluralize.pipe.ts","webpack:///src/app/common/emptytonull.directive.ts","webpack:///src/app/common/no-access-modal/no-access-modal.component.ts","webpack:///src/app/app/core/header/online-users-count/online-users-count.component.html","webpack:///src/app/app/core/core.module.ts","webpack:///src/app/common/address-form/address-form.component.ts","webpack:///src/app/common/validators/index.ts","webpack:///src/app/common/validators/number-validator.directive.ts","webpack:///src/app/store/wallets/wallets.service.ts","webpack:///src/app/app/core/menu/menu-profile/menu-profile.component.html","webpack:///src/app/common/profile-documents/file-item.component.ts","webpack:///src/app/common/confirmation-modal/confirmation-modal.component.html","webpack:///src/app/common/security-check/confirm-password.modal.ts","webpack:///src/app/app/core/header/header.component.html","webpack:///src/app/common/sentence-case.pipe.ts","webpack:///src/app/common/postal-address/postal-address.component.html","webpack:///src/app/common/services/viewport.service.ts","webpack:///src/app/common/currency-select/currency-select.component.html","webpack:///src/app/app/core/menu/menu.service.ts","webpack:///src/app/common/beneficiary-form/beneficiary-details-form/beneficiary-details-form.component.html","webpack:///src/app/app/core/footer/footer.component.html","webpack:///src/app/app/core/footer/footer.component.ts","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/common/user/user.component.ts","webpack:///src/app/app/core/logout-timer/logout-timer.service.ts","webpack:///src/app/common/beneficiary-form/beneficiary-details-form/beneficiary-details-form.component.ts","webpack:///src/app/common/currency-select-tab/currency-select-tab.component.ts","webpack:///src/app/common/currency-select-tab/currency-select-tab.component.html","webpack:///src/app/common/video-player/video-player.component.html","webpack:///src/app/common/profile-documents/file-item.component.html","webpack:///src/app/common/notification/notification.module.ts","webpack:///src/app/common/user-info-table/user-info-table.component.html","webpack:///src/app/common/password-strength-bar/password-strength-bar.component.html","webpack:///src/app/common/validators/min-validator.directive.ts","webpack:///src/app/common/confirm-mail-reminder/confirm-mail-reminder.component.html","webpack:///src/app/app/status-message/status-message.service.ts","webpack:///src/app/common/validators/decimal-validator.directive.ts","webpack:///src/app/app/core/toastr/toastr.component.html","webpack:///src/app/common/video-player/video-player.component.ts","webpack:///src/app/common/address-form/address-form.component.html","webpack:///src/app/common/services/intercom.service.ts","webpack:///src/app/common/profile-documents/profile-documents.component.ts","webpack:///src/app/app/core/header/header-notifications/header-notifications.component.ts","webpack:///src/app/common/common.mixin.ts","webpack:///src/app/app/core/menu/menu.component.ts","webpack:///src/app/common/uuid/uuid.component.html","webpack:///src/app/common/deposit-instruction-table/deposit-instruction-table.component.ts","webpack:///src/app/common/dropzone/dropzone.component.html","webpack:///src/app/common/account-number.pipe.ts","webpack:///src/app/common/services/avatar.service.ts","webpack:///src/app/common/confirm-mail-reminder/confirm-mail-reminder.component.ts","webpack:///src/app/common/currency-select/currency-select.component.ts","webpack:///src/app/app/not-found/not-found.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/common/models/core/user.model.ts","webpack:///src/app/app/core/toastr/toastr.component.ts","webpack:///src/app/common/notification/notification.component.html","webpack:///src/app/common/safe-url.pipe.ts","webpack:///src/app/common/card-fee-schedule/card-fee-schedule.component.ts","webpack:///src/app/store/currencies/currencies.store.ts","webpack:///src/app/common/auth.interceptor.ts","webpack:///src/app/common/truncate.pipe.ts","webpack:///src/app/common/account-number/acount-number.component.ts","webpack:///src/app/app/core/logout-timer/logout-timer-modal.component.ts","webpack:///src/app/common/copy-wrap/copy-wrap.component.ts","webpack:///src/app/common/models/core/contact.model.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CopyButtonComponent","copier","changeDetector","translate","selector","template","changeDetection","OnPush","CustomValidatorDirective","control","customValidator","value","customError","providers","provide","useExisting","multi","style","getComputedStyle","document","body","color","getPropertyValue","trim","Currency","data","Object","assign","factor","lighten","hex","amount","baseCurrency","counterCurrency","spreadFee","spreadUp","exchangeRate","calculateExchangeRate","code","relative","times","plus","minus","toFixed","div","WelcomeComponent","session","activeModal","displayName","user","close","dismiss","AlertTag","AlertService","alerts","alert","icon","push","dispose","remove","target","index","indexOf","splice","tag","findIndex","providedIn","StatusMessageModule","declarations","imports","exports","NameValidatorDirective","match","nameError","HeaderComponent","logoutService","toastr","router","menuService","logoutTimerService","faAngleDown","faBars","faSearch","faUserCircle","faClock","countriesSortedByName","languages","sessionTimeLeft$","leftInMinutes$","pipe","minutes","hh","Math","floor","mm","subscriptions","add","events","event","subscribe","mobileNav","HIDDEN","unsubscribe","logout","success","instant","VISIBLE","sidebar","DEFAULT","TOGGLED","language","use","localStorage","setItem","lang","alpha2","find","country","emoji","MenuProfileComponent","userService","tokenService","walletsQuery","isOpen","appName","user$","userStream","wallets$","filteredBalances$","currentBalance$","selectAll","wallets","wallet","currency","preferredCurrency","availableBalance","changePreferredCurrency","id","refresh","animations","height","CapitalizePipe","name","LogoutService","http","ngbModal","logoutRequest","hasValidToken","refreshToken","headers","undefined","getExpiryTimeInSeconds","navigateByUrl","parseUrl","url","navigate","dismissAll","BeneficiaryFormComponent","confirmation","compact","fixateType","hideFields","onSave","onDelete","onDiscard","copy","isSaving","isDeleting","isUpdatingVerification","beneficiaryTypes","beneficiaryMethods","currencies","owner","ownerAutocomplete","legalEntitiesSteam","search","get","params","set","fetchEvent","fetchCurrenciesEvent","item","beneficiary","next","method","response","c","show","type","text","confirmText","confirmClass","result","CONFIRMED","emit","beneficiaryDetailsForm","submit","beneficiaryForm","invalid","isValid","Error","put","post","ColorValidatorDirective","colorError","MatchPasswordDirective","el","nativeElement","matchPassword","UserFileFormComponent","toStartCase","types","file","userFile","userFileForm","error","StatisticsService","head","observe","has","AmountPipe","locale","decimalPlaces","allowNull","DEFAULT_DECIMAL_PLACES","roundingMode","toString","PasswordStrengthBarComponent","progress","strength","requiredStrength","MaskedPipe","fill","substr","padEnd","CurrenciesQuery","store","preferredCurrency$","formatMaskedDate","unformattedDate","slice","UserDetailsFormComponent","requireAll","disabled","submitted","business","searchCountryCode","faPhone","faInfoCircle","genders","currentTab","countries","documentTypes","businessTypes","birthday","dateOfIncorporation","documentIssuingDate","documentExpiryDate","proofOfAddressDate","changes","details","phoneCountryCode","businessPhoneCountryCode","formatPhoneCountryCode","form","valid","unformattedPhoneCountryCode","GoogleAnalyticsService","location","initialized","window","GOOGLE_ANALYTICS_CODE","loadScript","path","gtag","page_path","userEvent","event_category","script","createElement","src","async","append","dataLayer","arguments","domains","Date","AccessErrorsComponent","resendTriggered","errors","length","whiteListedErrors","filter","accessErrors","includes","resendActivationMail","CopyIconComponent","faCopy","subscription","currentValue","markForCheck","copyText","detectChanges","tooltip","open","UserEventType","User","permission","permissions","role","approvedAt","SessionService","storage","tokenChangeEvent","userChangeEvent","asObservable","storageChange","key","syncWithStorage","getValue","token","update","LOGIN","payload","parseToken","userID","JSON","stringify","LOGOUT","removeItem","gracePeriod","exp","now","scope","getTokenScopes","scopes","expiryTime","round","getTime","expiresAt","queryParams","encoder","TextEncoder","crypto","subtle","digest","encode","signature","Array","from","Uint8Array","map","b","padStart","join","signatureInHex","hasItem","parse","getItem","_value","isAuthenticated","decode","split","AlertOutletComponent","alertService","layout","faTimes","clear","StartCasePipe","ConfirmationModalComponent","title","cancelText","cancelClass","showCancel","faExclamationTriangle","faCheckCircle","inputValidator","_","input","ContactService","contact","resonse","NotificationComponent","contactService","allowUserCopy","isLoading","notification","transaction","conversion","invoice","cardOrder","create","baseUser","counterUser","accountNumber","UserInfoTableComponent","fields","businessFields","businessDetails","field","property","fatca","nationality","phoneNumber","documentType","gender","IpAddressValidatorDirective","ipAddressError","NotificationsService","unreadNotificationsStream","notifyEvent","count","ContactBookComponent","route","modal","onSelect","onUpdate","searchText","deletingContacts","Set","defaultLimit","faTrash","faUserAltSlash","apiUrl","replace","contacts","email","allowSpaces","updateEvent","searchEvent","width","openContactBook","contactBookModal","windowClass","contactBook","componentInstance","UserService","password","segment","referrerId","associationId","externalId","status","riskRating","twoFactor","billingCurrency","sendEmailNotifications","flags","cardProgramId","operations","patch","random","jsonrpc","environment","accountOpeningFeeEnabled","cryptoDepositAddresses","BTC","BSV","ETH","LTC","FeePreviewComponent","faCircleNotch","currencySymbolMap","prefix","fixedFeeChange","relativeFeeChange","beneficiaryChange","currencyChange","fxSpread","feeStream","fxSpreadResponse","fixed","limit","fee","found","precision","relativeFeeAmount","calculateFixedFee","base","counter","convert","FileView","navigator","msSaveOrOpenBlob","tab","blob","URL","createObjectURL","buildFileUrl","bucket","OnlineUsersCountComponent","statistics","faUsers","userCount$","getOnlineUsersCount","ErrorHandlerInterceptor","req","shouldLogOut","ignoreErrorHandling","suppressToast","handle","clone","attempts","attempt","retryAttempt","MAX_RETRY_ATTEMPTS","console","log","err","message","statusText","errorText","severity","caughtByInterceptor","setTimeout","reload","StatusMessageComponent","statusMessage","NumericDirective","decimals","run","String","RegExp","regExpString","oldValue","check","AppErrorHandler","platformId","injector","SENTRY_DSN","sentryHub","dsn","debug","release","integrations","configureScope","setUser","username","chunkFailedMessage","test","captureException","originalError","ValidateDirective","useValidator","validateObject","date","validateDate","FormatDatePipe","format","countryMap","blockedCountries","all","countryCallingCodes","toLowerCase","IsBeforePipe","Timestamp","stamp","calculateFee","fetchAmountAndPrecision","relativeFee","settledAmount","fixedAmount","fixedFee","calculateCreditableAmount","total","isGreaterThan","calculateDeductableAmount","requestedAmount","buildWalletOwnerAccountNumber","fallback","isReceiver","counterWallet","isTransactionProcessable","automated","faulty","StorageService","inMemoryLocalStorage","Map","useLocalStorage","isLocalStorageAvailable","addEventListener","StorageEvent","href","newValue","x","DOMException","MaxValidatorDirective","max","onChanges","required","v","actualValue","requiredValue","fn","TokenService","tokenRequest","options","potentialEmail","potentialRefreshToken","hasValidRefreshToken","twoFactorCode","fetch","MailNotificationsService","unreadMessagesStream","onRead","ToastrService","toastSource","lastToastId","iconClasses","warning","info","toastPushed","BirthdayValidatorDirective","invalidDate","dateLongAgo","dateInFuture","NotFoundComponent","StatusMessageOutletComponent","viewContainerRef","initializeListener","WalletsQuery","currenciesQuery","balances$","transformed","usdValue","currencyCode","balance","strippable","hasZeroBlance","isEqualTo","totalBalance$","reduce","netWorth","FormatDistanceToNowPipe","includeSeconds","addSuffix","HeaderMailboxComponent","mailNotifications","striptags","faEnvelope","mails","meta","CurrenciesService","fetchAsObservable","stringEntropy","PasswordStrengthDirective","onEntropyChange","entropy","passwordStrength","weakPassword","PostalAddressComponent","CopierService","createFake","execCommand","removeFake","fakeElem","fontSize","border","padding","margin","position","left","yPosition","pageYOffset","documentElement","scrollTop","top","setAttribute","appendChild","select","setSelectionRange","removeChild","CircleSpinnerComponent","AppComponent","intercom","analytics","logoutTimer","viewport","currenciesService","walletsService","addLangs","setDefaultLang","browserLang","getBrowserLang","lastLanguageUsed","init","boot","hasOpenModals","polling","closed","isActive","getCurrentNavigation","some","state","DepositInstructionComponent","faPhoneLaptop","faPaperPlane","faReceipt","faUniversity","faArrowRight","fetchBeneficiaryEvent","WalletsStore","getCurrencyColor","convertCurrency","UserAvatarComponent","avatarService","online","elementClass","appInitials","toUpperCase","_primaryColor","_successColor","timestamp","size","SafeResourceUrlPipe","sanitizer","bypassSecurityTrustResourceUrl","FocusDirective","ngZone","focus","onStable","DropzoneComponent","files","filesChange","showTable","canCreate","canDelete","faCloudUpload","allowVideo","isArray","existingFiles","translateHttpLoaderFactory","httpBackend","AppModule","forRoot","mode","loader","useFactory","deps","register","enabled","registrationStrategy","useClass","bootstrap","PermissionSelectComponent","permissionsChange","paymentPermissions","featurePermissions","checked","paymentMethod","feature","DECLARATIONS","MODULES","CommonModule","useValue","fullLibraryLoader","Scope","ListComponent","limitOpts","offset","paginationEvent","isFetching","isFilterOptionsCollapsed","doCollapseFilterOptionsIfParamsSet","formatDate","faPlus","faChevronUp","faChevronDown","faDownload","faCaretDown","defaultOrder","defaultQuery","order","apiQuery","itemsStream","mergeFindEvents","page","routeParams","perPage","keys","param","encodeQueryParam","changeState","mapItem","queryParamMap","decodeURIComponent","getAll","decodeQueryParam","generateListParams","override","encoded","formComponent","backdrop","ignoreCount","generateList","Accept","responseType","link","contentDisposition","download","substring","click","revokeObjectURL","toggle","orderElement","query","model","scroll","scrollY","relativeTo","queryParamsHandling","scrollTo","decoded","q","op","IntegerValidatorDirective","Number","isInteger","invalidInteger","UuidComponent","ngClass","RecipientValidatorDirective","invalidRecipient","OrganizationAuthGuard","SafeHtmlPipe","bypassSecurityTrustHtml","ConfirmationResult","ConfirmationService","modalInstance","initValue","optValue","mapResult","inputValue","confirmed","CANCELLED","DISMISSED","PluralizePipe","otherValue","endsWith","EmptyToNullDirective","renderer","element","_onChange","normalizedValue","setProperty","lastValue","isDisabled","NoAccessModalComponent","faExclamationCircle","openNoAccessModal","CoreModule","AddressFormComponent","addressChange","isLarge","showToggleButton","placesAutocomplete","placesStream","address","transformAddress","place","structured_formatting","main_text","addressLine1","place_id","getType","address_components","component","city","long_name","zipCode","short_name","NumberValidatorDirective","number","WalletsService","FileItemComponent","canView","faSpinner","faTimesCircle","ConfirmPasswordModalComponent","showTwoFactorForm","faUnlockAlt","passwordForm","grantTokenScope","resetForm","SentenceCasePipe","ViewportService","metaEl","getTag","outerWidth","MINIMUM_WIDTH","originalViewport","content","MobileNavLayout","SidebarLayout","MenuService","FooterComponent","year","getFullYear","helpCenterUrl","HELP_CENTER_URL","webpackAsyncContext","__webpack_require__","o","Promise","resolve","then","e","ids","webpackAsyncContextKeys","module","UserComponent","displayAccountNumber","displayBadges","disableLink","maxCharacters","userId","preventDefault","LogoutTimerService","secondsLeft","ceil","handler","BeneficiaryDetailsFormComponent","isIntermediateBankCollapsed","intermediateBankAddress","accountHolderAddressForm","bankAddressForm","intermediateBankAddressForm","intermediateBankName","intermediateBankSwiftCode","reset","getCurrencyCode","CurrencySelectTabComponent","useShortCurrencyNames","moreButtonOptions","hasCaret","setCurrencies","unsetCurrencies","selectEntity","usd","filterBy","entity","items","subscribeCurrencyQuery","refreshTabs","NotificationModule","MinValidatorDirective","min","StatusMessageService","componentFactoryResolver","statusMessageComponent","insertedViewRef","setting","wasEmpty","componentFactory","resolveComponentFactory","parentInjector","insert","hostView","destroy","DecimalValidatorDirective","isRequired","validator","decimal","invalidDecimal","VideoPlayerComponent","playVideo","videoPlayer","IntercomService","isEnabled","intercomSettings","avatarUrl","getAvatarUrl","user_id","user_hash","intercomHash","created_at","createdAt","avatar","image_url","shutdown","INTERCOM_APP_ID","Intercom","w","ic","d","i","args","l","s","getElementsByTagName","parentNode","insertBefore","attachEvent","app_id","prePopulatedMessage","ProfileDocumentsComponent","buttonAlign","showButton","canEdit","onUpload","isUploading","getFileUrl","faEdit","upload","results","encodeURIComponent","purpose","successfulUploads","fileForm","fileFormComponent","dropzone","HeaderNotificationsComponent","notificationsService","faBell","faEye","__","notifications","unreadNotifications","read","markAllAsRead","convertToISODate","convertPercentage","percentage","toPrecision","toCountryCallingCode","nanToNull","isNaN","emptyToNull","isZero","formatAccountNumber","deepOmitEmptyProperties","object","prop","term","toLocaleLowerCase","dataUrlToBlob","dataUrl","byteString","atob","ia","charCodeAt","Blob","permissionMap","redeem","cards","conversions","invoices","marketplaces","trades","determineAccountBillStatus","accountBill","eq","readFileAsDataURL","reject","reader","FileReader","onload","onerror","readAsDataURL","isEmail","isAccountNumber","option","parseInt","findCountry","formatAddressToUSFormat","addressLine2","countryName","MenuComponent","faArrowAltToBottom","faDesktop","faBook","faCreditCardFront","faToolbox","faInbox","faCog","faUser","faCity","faWallet","faCaretRight","faSync","faBalanceScale","faCompass","faChartNetwork","faLink","faShieldAlt","faFileInvoice","faUserFriends","faChartBar","faMinus","faExchange","faBox","faSitemap","faChartLine","activeMenu","strict","menu","_activeMenu","startsWith","routeParts","DepositInstructionTableComponent","showWarning","showMethod","showCurrency","borderless","AccountNumberPipe","AvatarService","AVATAR_CACHE_KEY","_timestamp","ConfirmMailReminderComponent","CurrencySelectComponent","placeholder","currencyTypes","salesProceeds","useFullName","hideZeroBalance","criteria","depositable","holdable","transferable","balances","topupAmount","a","viewProviders","ngForm","NotFoundModule","routes","loadChildren","mod","AdminModule","AccountModule","DashboardModule","MailboxModule","TransactionsModule","ServicesModule","KycWizardModule","UserCardsModule","DiscoverModule","DepositModule","TransferModule","WithdrawModule","UserSpotTradingModule","UserRedemptionModule","UserTradesModule","FeesModule","LoginModule","RegistrationModule","PrivacyModule","TermsModule","NotificationsModule","UserActivitiesModule","canLoad","OrganizationModule","EmbeddedModule","pathMatch","redirectTo","AppRoutingModule","preloadingStrategy","scrollPositionRestoration","ToastrComponent","toasts","toastSubscription","toast","unshift","startTimer","t","timeout","clearTimeout","stopTimer","hide","transform","opacity","SafeUrlPipe","bypassSecurityTrustUrl","NiumCardProgram","CardFeeScheduleComponent","cardFees","topupFee","atmFee","atmDeclineFee","fx","declineTransaction","replacementFee","ecomFee","posFee","annualLoadingLimit","monthlySpendingLimit","dailyPosEcomLimit","dailyAtmLimit","unloadFundsFee","fees","userCardProgram","cardFee","getCardFeeSchedule","cardProgram","niumClientId","AERAPASS_P1","maxCardBalance","AERAPASS_P2","AERAPASS_P3","AERAPASS_P4","AERAPASS_P5","QNET","SGPMX_GOLD","SGPMX_SILVER","isZeroFee","CurrenciesStore","idKey","TokenRequestInterceptor","unauthorizedRoutes","TruncatePipe","wordwise","tail","lastSpace","lastIndexOf","AccountNumberComponent","LogoutTimerModalComponent","CopyWrapComponent","Contact","logSelfXssMessage","hire","config","EXPONENTIAL_AT","DEBUG","bootstrapModule","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { CopyIconComponent } from '../copy-icon/copy-icon.component'\nimport { CopierService } from '../services/copier.service'\n\n@Component({\n    selector: 'copy-btn',\n    templateUrl: 'copy-btn.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyButtonComponent extends CopyIconComponent {\n    @Input()\n    public disabled: boolean\n\n    constructor(copier: CopierService, changeDetector: ChangeDetectorRef, public translate: TranslateService) {\n        super(copier, changeDetector)\n    }\n}\n","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"mt-5 row justify-content-center\\\">\\n        <div class=\\\"col-md-12 col-24\\\">\\n            <h1>🧐 404!</h1>\\n            <h4 class=\\\"pt-3\\\">{{ 'common.you-lost' | translate }}</h4>\\n            <p>\\n                {{ 'common.the-page' | translate }}\\n            </p>\\n            <a class=\\\"btn btn-outline-secondary\\\" [routerLink]=\\\"['/dashboard']\\\">{{ 'common.back' | translate }}</a>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \".dropdown-toggle::after {\\n  content: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2N1cnJlbmN5LXNlbGVjdC10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0FBQ0YiLCJmaWxlIjoiY3VycmVuY3ktc2VsZWN0LXRhYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi10b2dnbGU6OmFmdGVyIHtcbiAgY29udGVudDogbm9uZTtcbn1cbiJdfQ== */\";","import { Directive, Input } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[customValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true }],\n})\nexport class CustomValidatorDirective implements Validator {\n    @Input()\n    public customValidator: (value: string) => string | null\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (this.customValidator(control.value)) {\n            return { customError: true }\n        }\n        return null\n    }\n}\n","import BigNumber from 'bignumber.js'\nimport * as Color from 'color'\nimport { CurrencyType, ICurrency, IFee } from '../../api-interfaces'\n\nconst style = getComputedStyle(document.body)\nconst color = Color(style.getPropertyValue('--primary').trim())\n\nexport class Currency implements ICurrency {\n    public code: string\n    public type: CurrencyType\n    public name: string\n    public exchangeRate: string\n    public hasCardProgram: boolean\n    public decimalPlaces: number\n    public depositable: boolean\n    public holdable: boolean\n    public transferable: boolean\n    public withdrawable: boolean\n    public createdAt: string\n    public updatedAt: string\n    public color: string\n\n    constructor(data: ICurrency) {\n        Object.assign(this, data)\n    }\n\n    public static convert(\n        amount: string | number,\n        baseCurrency: ICurrency,\n        counterCurrency: ICurrency,\n        spreadFee?: IFee,\n        spreadUp = true\n    ): string {\n        let exchangeRate = Currency.calculateExchangeRate(baseCurrency, counterCurrency)\n        if (baseCurrency.code !== counterCurrency.code && spreadFee && spreadFee.relative) {\n            if (spreadUp) {\n                exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).plus(spreadFee.relative))\n            } else {\n                exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).minus(spreadFee.relative))\n            }\n        }\n        return new BigNumber(amount).times(exchangeRate).toFixed(8, 1)\n    }\n\n    public static calculateExchangeRate(baseCurrency: ICurrency, counterCurrency: ICurrency): BigNumber {\n        return new BigNumber(counterCurrency.exchangeRate).div(baseCurrency.exchangeRate)\n    }\n\n    public getColor(factor = 0): string {\n        return this.color || color.lighten((factor % 7) * 0.08).hex()\n    }\n}\n","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { environment } from 'src/environments/environment'\nimport { SessionService, User } from '../services/session.service'\n\n@Component({\n    selector: 'welcome',\n    templateUrl: 'welcome.component.html',\n})\nexport class WelcomeComponent {\n    public get user(): User {\n        return this.session.user\n    }\n    public displayName = environment.displayName\n\n    constructor(private session: SessionService, private activeModal: NgbActiveModal) {}\n\n    public close(): void {\n        this.activeModal.close()\n    }\n    public dismiss(): void {\n        this.activeModal.dismiss()\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { faBell } from '@fortawesome/pro-light-svg-icons'\nimport { IconDefinition } from '@fortawesome/pro-solid-svg-icons'\nimport { Disposable } from '../disposable'\n\nexport enum AlertTag {\n    VERIFICATION = 'verification',\n}\n\nexport interface Alert {\n    severity: string\n    message: string\n    icon?: IconDefinition\n    tag?: AlertTag\n    callToAction?: {\n        label: string\n        route: string\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AlertService {\n    public alerts: Alert[] = []\n\n    public add(alert: Alert): Disposable {\n        if (!alert.icon) {\n            alert.icon = faBell\n        }\n        this.alerts.push(alert)\n        return {\n            dispose: () => {\n                this.remove(alert)\n            },\n        }\n    }\n\n    public remove(target: Alert): void {\n        const index = this.alerts.indexOf(target)\n        if (index !== -1) {\n            this.alerts.splice(index, 1)\n        }\n    }\n\n    public clearByTag(tag: AlertTag): void {\n        let index: number\n        do {\n            index = this.alerts.findIndex(alert => alert.tag === tag)\n            if (index !== -1) {\n                this.alerts.splice(index, 1)\n            }\n        } while (index !== -1)\n    }\n\n    public clear(): void {\n        this.alerts = []\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../../common/common.module'\nimport { StatusMessageOutletComponent } from './status-message-outlet.component'\nimport { StatusMessageComponent } from './status-message.component'\nimport { StatusMessageService } from './status-message.service'\n\n@NgModule({\n    declarations: [StatusMessageComponent, StatusMessageOutletComponent],\n    providers: [StatusMessageService],\n    imports: [CommonModule],\n    exports: [StatusMessageComponent, StatusMessageOutletComponent],\n})\nexport class StatusMessageModule {}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[nameValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: NameValidatorDirective, multi: true }],\n})\nexport class NameValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (!!control.value?.match(/[0-9!$%^&*()_+|~=`{}[:;<>?@#\\]]/g)) {\n            return { nameError: true }\n        }\n        return null\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { NavigationStart, Router } from '@angular/router'\nimport { faAngleDown, faBars, faClock, faSearch, faUserCircle } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { filter, map } from 'rxjs/operators'\nimport { countriesSortedByName } from 'src/app/common/countries'\nimport { LogoutService } from '../../../common/services/logout.service'\nimport { SessionService } from '../../../common/services/session.service'\nimport { ToastrService } from '../../../common/services/toastr.service'\nimport { LogoutTimerService } from '../logout-timer/logout-timer.service'\nimport { MenuService, MobileNavLayout, SidebarLayout } from '../menu/menu.service'\n\n@Component({\n    selector: 'app-header',\n    templateUrl: 'header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n    public faAngleDown = faAngleDown\n    public faBars = faBars\n    public faSearch = faSearch\n    public faUserCircle = faUserCircle\n    public faClock = faClock\n\n    public countriesSortedByName = countriesSortedByName\n\n    public languages = ['en', 'kr']\n\n    public sessionTimeLeft$ = this.logoutTimerService.leftInMinutes$.pipe(\n        map(minutes => {\n            if (minutes > 60) {\n                const hh = Math.floor(minutes / 60)\n                const mm = minutes % 60\n                return (hh ? hh + 'h' : '') + (hh && mm ? ' ' : '') + (mm ? mm + 'min' + (mm === 1 ? '' : 's') : '')\n            }\n            return minutes + 'min' + (minutes === 1 ? '' : 's')\n        })\n    )\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private logoutService: LogoutService,\n        private toastr: ToastrService,\n        public session: SessionService,\n        public router: Router,\n        private menuService: MenuService,\n        public logoutTimerService: LogoutTimerService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(() => {\n                this.menuService.mobileNav = MobileNavLayout.HIDDEN\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public logout(): void {\n        this.subscriptions.add(\n            this.logoutService.logout().subscribe(() => {\n                this.toastr.success(this.translate.instant('common.you-have-been-logged-out'))\n            })\n        )\n    }\n\n    public openMobileNav(): void {\n        this.menuService.mobileNav = MobileNavLayout.VISIBLE\n        this.menuService.sidebar = SidebarLayout.DEFAULT\n    }\n\n    public toggleSidebar(): void {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.menuService.sidebar === SidebarLayout.TOGGLED\n            ? (this.menuService.sidebar = SidebarLayout.DEFAULT)\n            : (this.menuService.sidebar = SidebarLayout.TOGGLED)\n    }\n\n    public changeLanguage(language: string): void {\n        this.translate.use(language)\n        localStorage.setItem('lang', language)\n    }\n\n    public getCountryEmoji(lang: string): string {\n        let alpha2: string\n\n        switch (lang) {\n            case 'en':\n                alpha2 = 'US'\n                break\n            case 'kr':\n                alpha2 = 'KR'\n                break\n            default:\n                break\n        }\n        return this.countriesSortedByName.find(country => country.alpha2 === alpha2)?.emoji || ''\n    }\n\n    public mapCountryName(lang: string): string {\n        switch (lang) {\n            case 'en':\n                return 'English'\n            case 'kr':\n                return 'Korean'\n            default:\n                return ''\n        }\n    }\n}\n","import {\n    animate,\n    state as animationState,\n    style,\n    transition as animationTransition,\n    trigger,\n} from '@angular/animations'\nimport { Component, OnDestroy } from '@angular/core'\nimport { NavigationStart, Router } from '@angular/router'\nimport { faAngleDown } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { combineLatest, Observable, Subscription } from 'rxjs'\nimport { filter, flatMap, map, switchMap, take } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICurrency, Wallet } from '../../../../common/api-interfaces'\nimport { UserService } from '../../../../common/services/core/user.service'\nimport { SessionService, User } from '../../../../common/services/session.service'\nimport { ToastrService } from '../../../../common/services/toastr.service'\nimport { TokenService } from '../../../../common/services/token.service'\nimport { WalletsQuery } from '../../../../store/wallets/wallets.query'\n\n@Component({\n    selector: 'menu-profile',\n    templateUrl: 'menu-profile.component.html',\n    animations: [\n        trigger('toggleBalances', [\n            animationState('false', style({ height: '0px' })),\n            animationState('true', style({ height: '*' })),\n            animationTransition('1 => 0', animate('280ms ease-in')),\n            animationTransition('0 => 1', animate('280ms ease-out')),\n        ]),\n    ],\n})\nexport class MenuProfileComponent implements OnDestroy {\n    public faAngleDown = faAngleDown\n    public isOpen = false\n\n    public user$: Observable<User>\n    public currentBalance$: Observable<string>\n    public wallets$: Observable<(Wallet & { value: string })[]>\n\n    private subscriptions = new Subscription()\n    private appName = environment.appName\n\n    constructor(\n        private session: SessionService,\n        private toastr: ToastrService,\n        private userService: UserService,\n        private tokenService: TokenService,\n        private router: Router,\n        private walletsQuery: WalletsQuery,\n        public translate: TranslateService\n    ) {\n        this.user$ = this.session.userStream\n        this.wallets$ = this.walletsQuery.filteredBalances$\n        this.currentBalance$ = combineLatest(this.walletsQuery.selectAll(), this.session.userStream).pipe(\n            map(\n                ([wallets, user]) =>\n                    wallets.find(wallet => wallet.currency.code === user.preferredCurrency.code)?.availableBalance ||\n                    '0.00'\n            )\n        )\n        this.subscriptions.add(\n            this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(() => {\n                this.isOpen = false\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public changePreferredCurrency(currency: ICurrency): void {\n        if (this.appName === 'sgpmx') {\n            return\n        }\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    take(1),\n                    filter(user => user.preferredCurrency.code !== currency.code),\n                    switchMap(user => this.userService.changePreferredCurrency(user.id, currency)),\n                    flatMap(() => this.tokenService.refresh())\n                )\n                .subscribe(() => {\n                    this.isOpen = false\n                    this.toastr.success(this.translate.instant('common.preferred-currency-changed'))\n                })\n        )\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport { capitalize } from 'lodash'\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n    public transform(value: any): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return capitalize(value)\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable, of } from 'rxjs'\nimport { catchError, finalize, map, tap } from 'rxjs/operators'\nimport { SessionService } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LogoutService {\n    private logoutRequest: Observable<void> | undefined\n    constructor(\n        private http: HttpClient,\n        private session: SessionService,\n        private ngbModal: NgbModal,\n        private router: Router\n    ) {}\n\n    public logout(): Observable<void> {\n        if (!this.logoutRequest) {\n            this.logoutRequest = (\n                this.session.hasValidToken() && !!this.session.refreshToken\n                    ? this.http\n                          .delete<void>(\n                              `/users/${this.session.user.id}/refresh-tokens/${this.session.refreshToken.id}`,\n                              {\n                                  headers: { 'X-No-Logout': 'true' },\n                              }\n                          )\n                          // mute errors of refresh token deletion, logout should happen anyways\n                          .pipe(catchError(() => of(undefined)))\n                    : of(undefined)\n            ).pipe(\n                tap(() => {\n                    if (this.session.getExpiryTimeInSeconds() < 15) {\n                        this.router.navigateByUrl(this.router.parseUrl('/login?redirect=' + this.router.url))\n                    } else {\n                        this.router.navigate(['/login'])\n                    }\n                    this.session.logout()\n                    this.ngbModal.dismissAll()\n                }),\n                map(() => undefined),\n                finalize(() => {\n                    this.logoutRequest = undefined\n                })\n            )\n        }\n        return this.logoutRequest\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { cloneDeep } from 'lodash'\nimport { Subject, Subscription } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, filter, finalize, flatMap, switchMap, tap } from 'rxjs/operators'\nimport { BeneficiaryMethod, BeneficiaryType, IUser, Paginated } from '../../common/api-interfaces'\nimport { Beneficiary } from '../models/accounting/beneficiary.model'\nimport { Currency } from '../models/accounting/currency.model'\nimport { User } from '../models/core/user.model'\nimport { ConfirmationResult, ConfirmationService } from '../services/confirmation.service'\nimport { ToastrService } from '../services/toastr.service'\nimport { BeneficiaryDetailsFormComponent } from './beneficiary-details-form/beneficiary-details-form.component'\n\n@Component({\n    selector: 'beneficiary-form',\n    templateUrl: 'beneficiary-form.component.html',\n})\nexport class BeneficiaryFormComponent implements OnInit, OnDestroy {\n    @Input()\n    public item: Beneficiary\n    @Input()\n    public compact = false\n    @Input()\n    public fixateType = false\n    @Input()\n    public hideFields: ('owner' | 'type' | 'method' | 'currency')[] = []\n    @Output()\n    public readonly onSave = new EventEmitter<void>()\n    @Output()\n    public readonly onDelete = new EventEmitter<void>()\n    @Output()\n    public readonly onDiscard = new EventEmitter<void>()\n\n    public copy: Partial<Beneficiary> = {}\n    @ViewChild('beneficiaryForm')\n    public beneficiaryForm: NgForm\n    @ViewChild('beneficiaryDetailsForm')\n    public beneficiaryDetailsForm: BeneficiaryDetailsFormComponent\n\n    public isSaving = false\n    public isDeleting = false\n    public isUpdatingVerification = false\n\n    public beneficiaryTypes: BeneficiaryType[] = ['template', 'deposit-instruction']\n    @Input()\n    public beneficiaryMethods: BeneficiaryMethod[] = ['swift', 'local', 'crypto']\n\n    public currencies: Currency[] = []\n    public owner?: IUser = undefined\n    public ownerAutocomplete = new EventEmitter<string>()\n    public legalEntitiesSteam = this.ownerAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(search =>\n            this.http.get<IUser[]>('/users', {\n                params: new HttpParams().set('limit', '25').set('search', search),\n            })\n        )\n    )\n\n    private fetchEvent = new Subject<void>()\n    private fetchCurrenciesEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        private toastr: ToastrService,\n        public activeModal: NgbActiveModal,\n        private confirmation: ConfirmationService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.fetchEvent\n                .pipe(switchMap(() => this.http.get<Beneficiary>(`/beneficiaries/${this.item.id}`)))\n                .subscribe(beneficiary => {\n                    this.item = beneficiary\n                    this.copy = cloneDeep(this.item)\n                    if (this.item.user) {\n                        this.owner = new User(this.item.user)\n                    }\n                    this.fetchCurrenciesEvent.next()\n                })\n        )\n        this.subscriptions.add(\n            this.fetchCurrenciesEvent\n                .pipe(\n                    switchMap(() =>\n                        this.http.get<Paginated<Currency>>('/currencies?limit=100', {\n                            params: {\n                                'filter.type': this.copy.method === 'crypto' ? 'crypto' : 'fiat',\n                            },\n                        })\n                    )\n                )\n                .subscribe(response => {\n                    this.currencies = response.data\n                    if (this.copy && this.copy.currency) {\n                        // don't break reference\n                        this.copy.currency = this.currencies.find(c => c.code === this.copy.currency!.code)! || null\n                    }\n                })\n        )\n\n        if (this.item && this.item.id) {\n            this.fetchEvent.next()\n        } else {\n            this.copy = cloneDeep(this.item)\n            if (this.item.user) {\n                this.owner = new User(this.item.user)\n            }\n            this.fetchCurrenciesEvent.next()\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public delete(): void {\n        this.subscriptions.add(\n            this.confirmation\n                .show({\n                    type: 'danger',\n                    text: `${this.translate.instant(\n                        'common.are-you-sure-want-to-delete-beneficiary'\n                    )}<br>${this.translate.instant('common.you-cant-undo-action')}`,\n                    confirmText: this.translate.instant('common.delete'),\n                    confirmClass: 'danger',\n                })\n                .pipe(\n                    filter(result => result === ConfirmationResult.CONFIRMED),\n                    flatMap(() => {\n                        this.isDeleting = true\n                        return this.http.delete<void>(`/beneficiaries/${this.item.id}`)\n                    }),\n                    finalize(() => {\n                        this.isDeleting = false\n                    })\n                )\n                .subscribe(() => {\n                    this.onDelete.emit()\n                    this.toastr.success(this.translate.instant('common.beneficiary-deleted'))\n                })\n        )\n    }\n\n    public submit(): void {\n        this.beneficiaryDetailsForm.submit()\n        if (this.beneficiaryForm.invalid || !this.beneficiaryDetailsForm.isValid()) {\n            throw new Error(this.translate.instant('common.form-invalid'))\n        }\n        const body = {\n            ...this.copy,\n            user: this.owner ? { id: this.owner?.id } : null,\n            currency: {\n                code: this.copy.currency?.code ?? null,\n            },\n        }\n        this.isSaving = true\n        this.subscriptions.add(\n            (this.item.id\n                ? this.http.put<Beneficiary>(`/beneficiaries/${this.item.id}`, body)\n                : this.http.post<Beneficiary>('/beneficiaries', body)\n            )\n                .pipe(\n                    tap(beneficiary => (this.item = beneficiary)),\n                    finalize(() => {\n                        this.isSaving = false\n                    })\n                )\n                .subscribe(() => {\n                    this.toastr.success(\n                        `${\n                            this.copy.id\n                                ? this.translate.instant('common.beneficiary-updated')\n                                : this.translate.instant('common.beneficiary-created')\n                        }`\n                    )\n                    this.fetchEvent.next()\n                    this.onSave.emit()\n                })\n        )\n    }\n\n    public onChangeMethod(method: BeneficiaryMethod): void {\n        switch (method) {\n            case 'swift':\n            case 'local':\n                if (this.copy.currency && this.copy.currency.type !== 'fiat') {\n                    this.copy.currency = undefined\n                }\n                break\n            case 'crypto':\n                if (this.copy.currency && this.copy.currency.type !== 'crypto') {\n                    this.copy.currency = undefined\n                }\n                break\n        }\n        this.fetchCurrenciesEvent.next()\n    }\n}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\nimport isHexColor from 'validator/lib/isHexColor'\n\n@Directive({\n    selector: '[colorValidator][formControlName], [colorValidator][formControl], [colorValidator][ngModel]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: ColorValidatorDirective, multi: true }],\n})\nexport class ColorValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const color = control.value\n        if (color && !isHexColor(color)) {\n            return { colorError: true }\n        }\n        return null\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core'\nimport { NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[matchPassword]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: MatchPasswordDirective, multi: true }],\n})\nexport class MatchPasswordDirective implements Validator {\n    @Input()\n    public matchPassword: string\n\n    constructor(private el: ElementRef) {}\n\n    public validate(): ValidationErrors | null {\n        return this.el.nativeElement.value !== this.matchPassword ? { matchPassword: true } : null\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.session-expiration' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body text-center\\\">\\n    <img src=\\\"/img/icons/refresh.svg\\\" class=\\\"img-md my-3\\\" />\\n    <h4 class=\\\"text-primary mb-3\\\">{{ 'common.safety-measure' | translate }}</h4>\\n    <p>\\n        {{ 'common.session-about-to-expire' | translate }}\\n        <a href (click)=\\\"$event.preventDefault(); refresh(); activeModal.dismiss()\\\">{{ 'common.keep-me-logged-in' | translate }}</a>\\n        {{ 'common.to' | translate | lowercase }} {{ 'common.extend-session' | translate }}\\n    </p>\\n</div>\\n<div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n    <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"logout()\\\">{{ 'common.log-out' | translate }}</button>\\n    <button class=\\\"btn btn-primary btn-w-sm ml-1\\\" (click)=\\\"refresh(); activeModal.dismiss()\\\">{{ 'common.keep-me-logged-in' | translate }}</button>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { File, IUser, UserFile, UserFileType } from '../../api-interfaces'\nimport { toStartCase } from '../../common.mixin'\nimport { ToastrService } from '../../services/toastr.service'\n\n@Component({\n    selector: 'user-file-form',\n    templateUrl: 'user-file-form.component.html',\n})\nexport class UserFileFormComponent implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    @Input()\n    public file: File\n    @Output()\n    public readonly onSave = new EventEmitter<void>()\n    @Output()\n    public readonly onDelete = new EventEmitter<void>()\n\n    public toStartCase = toStartCase\n\n    public copy: Partial<UserFile> = {}\n    @ViewChild('userFileForm')\n    public userFileForm: NgForm\n\n    public types: UserFileType[] = ['identity', 'address', 'biometrics', 'selfie', 'registration-letter', 'other']\n    public isSaving = false\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        private toastr: ToastrService,\n        public activeModal: NgbActiveModal,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.copy = Object.assign({}, this.file.userFile!)\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public mapTypes(type: UserFileType): any {\n        switch (type) {\n            case 'identity':\n                return 'proof-of-identity'\n            case 'address':\n                return 'proof-of-address'\n            case 'biometrics':\n                return 'biometric-video'\n            default:\n                return type\n        }\n    }\n\n    public save(): void {\n        if (this.userFileForm.invalid) {\n            this.toastr.error(this.translate.instant('common.form-invalid'))\n            return\n        }\n        this.isSaving = true\n\n        this.http\n            .put(`/users/${this.user.id}/files/${this.file.id}`, this.copy)\n            .pipe(\n                finalize(() => {\n                    this.isSaving = false\n                })\n            )\n            .subscribe(() => {\n                this.toastr.success(this.translate.instant('user-file-form.file-updated'))\n                this.onSave.emit()\n            })\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { OnlineUser } from '../../api-interfaces'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StatisticsService {\n    constructor(private http: HttpClient) {}\n\n    public getOnlineUsersCount(): Observable<number> {\n        return this.http\n            .head('/admin/statistics/online-users', { observe: 'response' })\n            .pipe(\n                map(response =>\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                )\n            )\n    }\n\n    public getOnlineUsers(): Observable<OnlineUser[]> {\n        return this.http.get<OnlineUser[]>('/admin/statistics/online-users')\n    }\n}\n","export default \".spinner-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: calc(100% - 24px);\\n  width: 100%;\\n  min-height: 50px;\\n  min-width: 50px;\\n  background-color: rgba(238, 238, 238, 0.3);\\n}\\n.spinner-wrapper .circle-spinner {\\n  text-align: center;\\n  padding: 1em;\\n  margin: 0 auto 1em;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n.spinner-wrapper .circle-spinner svg path,\\n.spinner-wrapper .circle-spinner svg rect {\\n  fill: #5a6269;\\n}\\n.spinner-wrapper.white {\\n  position: static;\\n  background-color: #fff;\\n  height: 200px;\\n}\\n.no-background {\\n  background-color: transparent !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NpcmNsZS1zcGlubmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EseUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsMENBQUE7QUFDRjtBQUNFO0VBQ0Usa0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFDSTs7RUFFRSxhQUFBO0FBQ047QUFHRTtFQUNFLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0FBREo7QUFLQTtFQUNFLHdDQUFBO0FBRkYiLCJmaWxlIjoiY2lyY2xlLXNwaW5uZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Bpbm5lci13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDI0cHgpO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogNTBweDtcbiAgbWluLXdpZHRoOiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvcjogI2VlZWVlZSwgJGFscGhhOiAwLjMpO1xuXG4gIC5jaXJjbGUtc3Bpbm5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBtYXJnaW46IDAgYXV0byAxZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cbiAgICBzdmcgcGF0aCxcbiAgICBzdmcgcmVjdCB7XG4gICAgICBmaWxsOiAjNWE2MjY5O1xuICAgIH1cbiAgfVxuXG4gICYud2hpdGUge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICB9XG59XG5cbi5uby1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbn1cbiJdfQ== */\";","import { formatNumber } from '@angular/common'\nimport { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core'\nimport BigNumber from 'bignumber.js'\nimport { environment } from 'src/environments/environment'\n\n@Pipe({ name: 'amount' })\nexport class AmountPipe implements PipeTransform {\n    public static readonly DEFAULT_DECIMAL_PLACES = environment.appName === 'sgpmx' ? 8 : 2\n    constructor(@Inject(LOCALE_ID) private locale: string) {}\n    public transform(\n        value: string | number | null | undefined,\n        decimalPlaces: number | null | undefined = 2,\n        // shows null as 0 if set to false\n        allowNull = false\n    ): string | null | undefined {\n        if (typeof decimalPlaces !== 'number' || decimalPlaces < 0 || !decimalPlaces) {\n            decimalPlaces = AmountPipe.DEFAULT_DECIMAL_PLACES\n        }\n        const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n        return (value === null || value === undefined) && allowNull\n            ? null\n            : formatNumber(\n                  new BigNumber(value ? value : 0).decimalPlaces(decimalPlaces, roundingMode).toString() as any,\n                  this.locale,\n                  `1.${\n                      decimalPlaces < AmountPipe.DEFAULT_DECIMAL_PLACES\n                          ? decimalPlaces\n                          : AmountPipe.DEFAULT_DECIMAL_PLACES\n                  }-${decimalPlaces}`\n              )\n    }\n}\n","import { Component, Input, OnChanges } from '@angular/core'\n\n@Component({\n    selector: 'password-strength-bar',\n    templateUrl: 'password-strength-bar.component.html',\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n    @Input()\n    public requiredStrength: number\n    @Input()\n    public strength: number\n    public progress = 0\n    public color: 'danger' | 'warning' | 'success'\n\n    public ngOnChanges(): void {\n        this.progress = (this.strength / this.requiredStrength) * 100\n        if (this.progress >= 100) {\n            this.color = 'success'\n        } else if (this.progress >= 50) {\n            this.color = 'warning'\n        } else if (this.progress >= 1) {\n            this.color = 'danger'\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'masked' })\nexport class MaskedPipe implements PipeTransform {\n    public transform(value: string | null | undefined, show = 3, fill = 6): string {\n        if (!value) {\n            return value ? value : ''\n        }\n        return value.substr(0, show).padEnd(show + fill, '*')\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { QueryEntity } from '@datorama/akita'\nimport { combineLatest } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { SessionService } from '../../common/services/session.service'\nimport { CurrenciesState, CurrenciesStore } from './currencies.store'\n\n@Injectable({ providedIn: 'root' })\nexport class CurrenciesQuery extends QueryEntity<CurrenciesState> {\n    public preferredCurrency$ = combineLatest(this.selectAll(), this.session.userStream).pipe(\n        map(([currencies, user]) => currencies.find(currency => currency.code === user.preferredCurrency.code)!)\n    )\n\n    constructor(protected store: CurrenciesStore, private session: SessionService) {\n        super(store)\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faInfoCircle, faPhone } from '@fortawesome/pro-light-svg-icons'\nimport formatDate from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\nimport { cloneDeep, find } from 'lodash'\nimport { BusinessDetails, BusinessType, UserDetails, UserDocumentType, UserGender, UserType } from '../api-interfaces'\nimport { searchCountryCode, toStartCase } from '../common.mixin'\nimport { countries, countriesSortedByName, Country } from '../countries'\n\n/** Transforms masked date to YYYY-MM-DD */\nexport function formatMaskedDate(unformattedDate: string): string {\n    return `${unformattedDate.slice(4)}-${unformattedDate.slice(2, 4)}-${unformattedDate.slice(0, 2)}`\n}\n\n@Component({\n    selector: 'user-details-form',\n    templateUrl: 'user-details-form.component.html',\n})\nexport class UserDetailsFormComponent implements OnChanges {\n    @Input()\n    public type: UserType = 'personal'\n    @Input()\n    public details: UserDetails\n    @Input()\n    public requireAll = true\n    @Input()\n    public disabled = false\n\n    public submitted = false\n\n    @ViewChild('detailsForm')\n    public form: NgForm\n\n    public business = {} as BusinessDetails\n\n    public searchCountryCode = searchCountryCode\n    public toStartCase = toStartCase\n\n    public faPhone = faPhone\n    public faInfoCircle = faInfoCircle\n\n    public genders: UserGender[] = ['male', 'female']\n    public currentTab: 'manager' | 'business' = 'business'\n    public countries = countries\n    public countriesSortedByName = countriesSortedByName\n    public documentTypes: UserDocumentType[] = ['Passport', 'ID Card']\n\n    public businessTypes: BusinessType[] = [\n        'Agents of Client',\n        'Association',\n        'B2B',\n        'Company',\n        'Government Body',\n        'Partnership',\n        'Registered Cooperative',\n        'Trust',\n    ]\n\n    public birthday: string | null = ''\n    public dateOfIncorporation: string | null = ''\n    public phoneCountryCode: Country | null | undefined\n    public businessPhoneCountryCode: Country | null | undefined\n    public documentIssuingDate: string | null = ''\n    public documentExpiryDate: string | null = ''\n    public proofOfAddressDate: string | null = ''\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.details) {\n            if (this.details.business) {\n                this.business = cloneDeep(this.details.business)\n            }\n            this.phoneCountryCode = find(countries, country => country.alpha2 === this.details.phoneCountryCode)\n            this.birthday = this.details.birthday ? formatDate(parseISO(this.details.birthday), 'ddMMyyyy') : null\n            this.documentIssuingDate = this.details.documentIssuingDate\n                ? formatDate(parseISO(this.details.documentIssuingDate), 'ddMMyyyy')\n                : null\n            this.documentExpiryDate = this.details.documentExpiryDate\n                ? formatDate(parseISO(this.details.documentExpiryDate), 'ddMMyyyy')\n                : null\n            this.proofOfAddressDate = this.details.proofOfAddressDate\n                ? formatDate(parseISO(this.details.proofOfAddressDate), 'ddMMyyyy')\n                : null\n            if (this.type === 'business') {\n                this.businessPhoneCountryCode = find(\n                    countries,\n                    country => country.alpha2 === this.details.business?.phoneCountryCode\n                )\n                this.dateOfIncorporation = this.details.business?.dateOfIncorporation\n                    ? formatDate(parseISO(this.details.business?.dateOfIncorporation), 'ddMMyyyy')\n                    : null\n            }\n        }\n    }\n\n    public submit(): void {\n        this.submitted = true\n        if (this.birthday) {\n            this.details.birthday = formatMaskedDate(this.birthday)\n        }\n        if (this.documentIssuingDate) {\n            this.details.documentIssuingDate = formatMaskedDate(this.documentIssuingDate)\n        }\n        if (this.documentExpiryDate) {\n            this.details.documentExpiryDate = formatMaskedDate(this.documentExpiryDate)\n        }\n        if (this.proofOfAddressDate) {\n            this.details.proofOfAddressDate = formatMaskedDate(this.proofOfAddressDate)\n        }\n        if (this.phoneCountryCode) {\n            this.details.phoneCountryCode = this.formatPhoneCountryCode(this.phoneCountryCode)\n        }\n\n        if (this.type === 'business') {\n            if (this.dateOfIncorporation) {\n                this.business.dateOfIncorporation = formatMaskedDate(this.dateOfIncorporation)\n            }\n            if (this.businessPhoneCountryCode) {\n                this.business.phoneCountryCode = this.formatPhoneCountryCode(this.businessPhoneCountryCode)\n            }\n            Object.assign(this.details.business, this.business)\n        }\n    }\n\n    public isValid(): boolean {\n        return !!this.form.valid\n    }\n\n    public formatPhoneCountryCode(unformattedPhoneCountryCode: Country): string {\n        return unformattedPhoneCountryCode.alpha2\n    }\n}\n","import { Location } from '@angular/common'\nimport { Injectable } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { SessionService } from './session.service'\n\ndeclare let gtag: (...args: any[]) => void\ndeclare let dataLayer: any[]\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    private initialized = false\n    constructor(private router: Router, private location: Location, private session: SessionService) {}\n\n    /**\n     * Initliaze google analytics and register page view and user event tracking\n     */\n    public init(): void {\n        if (this.initialized || !window.GOOGLE_ANALYTICS_CODE) {\n            return\n        }\n        this.initialized = true\n        this.loadScript()\n\n        // send page view on every transition\n        this.router.events\n            .pipe(\n                filter(event => event instanceof NavigationEnd),\n                map(() => this.location.path()),\n                distinctUntilChanged()\n            )\n            .subscribe(url => {\n                // log new page path to google analytics\n                gtag('config', window.GOOGLE_ANALYTICS_CODE, { page_path: url })\n            })\n\n        // log user events\n        this.session.userEvent.subscribe(event => {\n            this.push('event', event, {\n                event_category: 'User Events',\n            })\n        })\n    }\n\n    /**\n     * Push events to google analytics\n     * @param payload Event payload\n     */\n    public push(...args: any[]): void {\n        if (!window.GOOGLE_ANALYTICS_CODE) {\n            return\n        }\n        gtag(...args)\n    }\n\n    /**\n     * Load google analytics script\n     */\n    private loadScript(): void {\n        /* eslint-disable */\n        ;(function (): void {\n            let script = document.createElement('script')\n            script.src = `https://www.googletagmanager.com/gtag/js?id=${window.GOOGLE_ANALYTICS_CODE}`\n            script.async = true\n            document.body.append(script)\n            ;(window as any).dataLayer = (window as any).dataLayer || []\n            ;(window as any).gtag = function gtag() {\n                dataLayer.push(arguments)\n            }\n            if (environment.appName === 'aerapass') {\n                gtag('set', 'linker', { domains: ['aerapass.io', 'app.aerapass.io'] })\n            }\n            gtag('js', new Date())\n            gtag('config', window.GOOGLE_ANALYTICS_CODE)\n        })()\n        /* eslint-enable */\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { NoAccessError } from '../no-access-modal/no-access-modal.component'\nimport { UserService } from '../services/core/user.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'access-errors',\n    templateUrl: 'access-errors.component.html',\n})\nexport class AccessErrorsComponent implements OnInit {\n    public resendTriggered = false\n    @Input()\n    public errors: NoAccessError[] = []\n    public whiteListedErrors: NoAccessError[]\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private router: Router,\n        private userService: UserService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        if (this.errors.length > 0) {\n            this.whiteListedErrors = this.errors.filter(error => this.session.user.accessErrors.includes(error))\n        } else {\n            this.whiteListedErrors = this.session.user.accessErrors\n        }\n    }\n\n    public async goToVerification(): Promise<void> {\n        await this.router.navigate(['/verify'])\n    }\n\n    public async goToRequest(): Promise<void> {\n        await this.router.navigate(['/deposit'])\n    }\n\n    public resend(): void {\n        this.resendTriggered = true\n        this.subscriptions.add(\n            this.userService.resendActivationMail(this.session.user.id).subscribe(\n                () => {\n                    this.toastr.success(this.translate.instant('common.mail-confirmation-sent-again'))\n                },\n                () => {\n                    this.resendTriggered = false\n                }\n            )\n        )\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core'\nimport { faCopy } from '@fortawesome/pro-regular-svg-icons'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { of, Subscription } from 'rxjs'\nimport { delay } from 'rxjs/operators'\nimport { CopierService } from '../services/copier.service'\n\n@Component({\n    selector: 'copy-icon',\n    templateUrl: 'copy-icon.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyIconComponent implements OnChanges, OnDestroy {\n    @Input()\n    public value: string\n    @ViewChild('tooltip')\n    public tooltip: NgbTooltip\n    public faCopy = faCopy\n    private subscription?: Subscription\n    constructor(private copier: CopierService, private changeDetector: ChangeDetectorRef) {}\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe()\n        }\n    }\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value) {\n            this.value = changes.value.currentValue\n            this.changeDetector.markForCheck()\n        }\n    }\n    public copy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe()\n        }\n        this.copier.copyText(this.value)\n        // detect changes first, the ngbTooltip doesn't get updated otherwise and won't show up\n        this.changeDetector.detectChanges()\n        this.tooltip.open()\n        this.subscription = of(undefined)\n            .pipe(delay(1500))\n            .subscribe(() => {\n                this.changeDetector.markForCheck()\n                this.tooltip.close()\n            })\n    }\n}\n","export default \"<div class=\\\"profile-documents\\\">\\n    <dropzone\\n        *ngIf=\\\"canCreate\\\"\\n        [showTable]=\\\"false\\\"\\n        [files]=\\\"files\\\"\\n        [existingFiles]=\\\"existingFiles\\\"\\n        [requiredMessage]=\\\"requiredMessage\\\"\\n        [allowVideo]=\\\"true\\\"\\n        #dropzone\\n    ></dropzone>\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover align-items-center table-borderless mb-0\\\" *ngIf=\\\"files && files.length > 0\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\" colspan=\\\"2\\\">{{ 'common.file-name' | translate }}</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let item of files; let i = index\\\">\\n                    <th scope=\\\"row\\\">\\n                        <div class=\\\"text-primary\\\">{{ item.name }}</div>\\n                        <small class=\\\"text-muted\\\">{{ item.size / 1024 / 1024 | number: '.2' }} MB</small>\\n                    </th>\\n                    <td class=\\\"text-right\\\" nowrap>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"files.splice(i, 1)\\\">\\n                            <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <button\\n        *ngIf=\\\"canCreate && showButton\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"uploadFiles()\\\"\\n        class=\\\"btn btn-primary btn-w-sm mt-3 e2e-upload-documents-btn\\\"\\n        [ngClass]=\\\"{ loading: isUploading, 'float-right': buttonAlign === 'right' }\\\"\\n        [disabled]=\\\"isUploading\\\"\\n    >\\n        {{ 'common.upload' | translate }}\\n    </button>\\n    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n        <div class=\\\"table-responsive mt-3\\\" *ngIf=\\\"items.length\\\">\\n            <table class=\\\"table table-hover align-items-center table-borderless mb-0\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\" colspan=\\\"2\\\">{{ 'common.existing-files' | translate }}</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let existingFile of items\\\">\\n                        <th scope=\\\"row\\\">\\n                            <file-item [file]=\\\"existingFile\\\" [canView]=\\\"canView\\\"></file-item>\\n                        </th>\\n                        <td class=\\\"text-right\\\" nowrap>\\n                            <button\\n                                type=\\\"button\\\"\\n                                class=\\\"btn btn-primary btn-sm mr-1 e2e-edit-file-btn\\\"\\n                                (click)=\\\"showFileModal(existingFile)\\\"\\n                                *ngIf=\\\"canEdit\\\"\\n                            >\\n                                <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                            </button>\\n                            <button\\n                                type=\\\"button\\\"\\n                                class=\\\"btn btn-danger btn-sm e2e-delete-file-btn\\\"\\n                                (click)=\\\"deleteFile(existingFile)\\\"\\n                                *ngIf=\\\"canDelete\\\"\\n                            >\\n                                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n        <div class=\\\"d-flex align-items-center mt-3 float-right\\\" *ngIf=\\\"items.length\\\">\\n            <ng-select\\n                class=\\\"mr-2\\\"\\n                [(ngModel)]=\\\"limit\\\"\\n                dropdownPosition=\\\"auto\\\"\\n                (change)=\\\"select(1)\\\"\\n                [items]=\\\"limitOpts\\\"\\n                [placeholder]=\\\"'common.show-entries-per-page' | translate\\\"\\n                [clearable]=\\\"false\\\"\\n                [searchable]=\\\"false\\\"\\n                required\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">{{ 'common.show-entries' | translate: { value: item } }}</ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item }} {{ 'common.entries' | translate }}</ng-template>\\n            </ng-select>\\n            <ngb-pagination\\n                [(page)]=\\\"page\\\"\\n                [collectionSize]=\\\"count\\\"\\n                (pageChange)=\\\"select()\\\"\\n                [pageSize]=\\\"limit\\\"\\n                [maxSize]=\\\"5\\\"\\n                [ellipses]=\\\"false\\\"\\n                [rotate]=\\\"true\\\"\\n                [boundaryLinks]=\\\"true\\\"\\n            >\\n            </ngb-pagination>\\n        </div>\\n    </ng-container>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport addSeconds from 'date-fns/addSeconds'\nimport getUnixTime from 'date-fns/getUnixTime'\nimport isBefore from 'date-fns/isBefore'\nimport parseISO from 'date-fns/parseISO'\nimport { Base64 } from 'js-base64'\nimport { BehaviorSubject, from, Observable, ReplaySubject, Subject } from 'rxjs'\nimport { debounceTime, filter, flatMap, map, take, tap } from 'rxjs/operators'\nimport { ICurrency, IUser, Permission, RefreshToken, UserRole, UserStatus, UserType } from '../api-interfaces'\nimport { NoAccessError } from '../no-access-modal/no-access-modal.component'\nimport { StorageService } from './storage.service'\n\nexport enum UserEventType {\n    LOGIN = 'login',\n    LOGOUT = 'logout',\n}\n\nexport interface UserEvent {\n    type: UserEventType\n    user: User\n}\n\nexport class User implements Partial<IUser> {\n    public id: string\n    public type: UserType\n    public accountNumber: string\n    public email: string\n    public permissions: Permission[]\n    public role: UserRole\n    public status: UserStatus\n    public name: string\n    public preferredCurrency: ICurrency\n    public twoFactor: boolean\n    public lastLogin: string\n    public loginCount: number\n    public intercomHash: string\n    public approvedAt: Date | null\n    public billingCurrency: ICurrency\n    public sendEmailNotifications: boolean\n    public association: { id: string; name: string }\n    public createdAt: string\n    public updatedAt: string\n\n    public hasPermission(permission: Permission): boolean {\n        return this.permissions.includes(permission)\n    }\n\n    public get accessErrors(): NoAccessError[] {\n        const errors: NoAccessError[] = []\n        if (this.role === 'admin') {\n            return errors\n        }\n        if (!this.approvedAt) {\n            errors.push('VerificationRequiredError')\n        }\n        return errors\n    }\n}\n\nexport interface TokenPayload {\n    iat: number\n    iss: number\n    exp: number\n    userID: string\n    scopes: TokenScope[]\n}\n\nexport type TokenScope = 'securitySettings' | 'banking'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SessionService {\n    // TODO: Remove when using observable everywhere\n    public get user(): User {\n        return this.userChangeEvent.getValue()!\n    }\n\n    public refreshToken?: RefreshToken\n    public token?: string\n    public tokenChangeEvent = new Subject<void>()\n    /* Emits when the status of the user changes */\n    public userEvent = new ReplaySubject<UserEvent>(1)\n    public userStream: Observable<User>\n    private userChangeEvent = new BehaviorSubject<User | null>(null)\n    private payload?: TokenPayload\n\n    constructor(private storage: StorageService, private http: HttpClient) {\n        this.userStream = this.userChangeEvent.asObservable().pipe(filter((user): user is User => !!user))\n        this.storage.storageChange\n            .pipe(\n                filter(event => {\n                    switch (event.key) {\n                        case 'refreshToken':\n                        case 'token':\n                        case 'user':\n                            return true\n                        default:\n                            // not needed\n                            return false\n                    }\n                }),\n                debounceTime(200)\n            )\n            .subscribe(() => {\n                this.syncWithStorage()\n            })\n        // initial sync\n        this.syncWithStorage()\n    }\n\n    public login(refreshToken: RefreshToken, token: string): Observable<User> {\n        return this.update(refreshToken, token).pipe(\n            tap(user => {\n                this.userEvent.next({ type: UserEventType.LOGIN, user })\n            })\n        )\n    }\n\n    public update(refreshToken?: RefreshToken, token?: string): Observable<User> {\n        try {\n            if (refreshToken && token) {\n                this.refreshToken = refreshToken\n                this.token = token\n                this.payload = this.parseToken(token)\n                this.tokenChangeEvent.next()\n            }\n            return this.http.get<IUser>(`/users/${this.payload!.userID}?scope=session`).pipe(\n                map(data => {\n                    const user = Object.assign(new User(), data)\n                    this.userChangeEvent.next(user)\n                    this.storage.setItem('refreshToken', JSON.stringify(this.refreshToken))\n                    this.storage.setItem('token', this.token!)\n                    this.storage.setItem('user', JSON.stringify(data))\n                    return user\n                })\n            )\n        } catch (error) {\n            this.logout()\n            throw error\n        }\n    }\n\n    public logout(): void {\n        this.refreshToken = undefined\n        this.token = undefined\n        this.payload = undefined\n        // notify others of logout\n        this.userEvent.next({ type: UserEventType.LOGOUT, user: this.userChangeEvent.getValue()! })\n        this.userChangeEvent.next(null)\n        // clear storage\n        this.storage.removeItem('refreshToken')\n        this.storage.removeItem('token')\n        this.storage.removeItem('user')\n    }\n\n    /**\n     * Checks if a token is stored and not yet expired\n     * @param gracePeriod in seconds. Returns if the token is at least S seconds from now valid.\n     */\n    public hasValidToken(gracePeriod = 0): boolean {\n        // check if token is set and is not yet expired\n        return !!this.payload && this.payload.exp > (Date.now() + gracePeriod) / 1000\n    }\n\n    public hasTokenScope(scope: TokenScope): boolean {\n        return this.getTokenScopes().includes(scope)\n    }\n\n    public getTokenScopes(): TokenScope[] {\n        return this.hasValidToken() ? this.payload!.scopes : []\n    }\n\n    public getExpiryTimeInSeconds(): number {\n        const expiryTime = this.payload && this.payload.exp\n        return expiryTime ? Math.round(expiryTime - ~~(new Date().getTime() / 1000)) : 0\n    }\n\n    /**\n     * Checks if a refresh token is stored and not yet expired\n     * @param gracePeriod in seconds. Returns if the token is at least S seconds from now valid.\n     */\n    public hasValidRefreshToken(gracePeriod = 0): boolean {\n        return (\n            !!this.refreshToken && !isBefore(parseISO(this.refreshToken.expiresAt), addSeconds(new Date(), gracePeriod))\n        )\n    }\n\n    public isAuthenticated(): boolean {\n        return this.userChangeEvent.getValue() !== null\n    }\n\n    public createSignedUrl(url: string, queryParams?: string): Observable<string> {\n        const now = getUnixTime(new Date())\n        const encoder = new TextEncoder()\n        return this.userStream.pipe(\n            take(1),\n            flatMap(user =>\n                from(\n                    crypto.subtle.digest('SHA-1', encoder.encode(user.id + `/.api${url}` + now + this.refreshToken?.id))\n                )\n            ),\n            map(signature =>\n                Array.from(new Uint8Array(signature))\n                    .map(b => b.toString(16).padStart(2, '0'))\n                    .join('')\n            ),\n            map(\n                signatureInHex =>\n                    `/.api${url}?userId=${this.user.id}&signature=${signatureInHex}&timestamp=${now}${\n                        queryParams ? '&' + queryParams : ''\n                    }`\n            )\n        )\n    }\n\n    private syncWithStorage(): void {\n        try {\n            if (this.storage.hasItem('user')) {\n                const user = JSON.parse(this.storage.getItem('user')!)\n                Object.assign(this.userChangeEvent, { _value: Object.assign(new User(), user) })\n            }\n            const refreshToken =\n                this.storage.hasItem('refreshToken') && JSON.parse(this.storage.getItem('refreshToken')!)\n            const token = this.storage.getItem('token')\n            // if is expired\n            if (refreshToken && isBefore(parseISO(refreshToken.expiresAt), new Date())) {\n                throw new Error('Session expired')\n            }\n            if (refreshToken && token) {\n                this.refreshToken = refreshToken\n                this.token = token\n                this.payload = this.parseToken(token)\n                this.userEvent.next({ type: UserEventType.LOGIN, user: { id: this.payload?.userID } as any })\n            } else if (this.isAuthenticated()) {\n                this.logout()\n            }\n        } catch {\n            this.storage.removeItem('refreshToken')\n            this.storage.removeItem('token')\n            this.storage.removeItem('user')\n            if (this.isAuthenticated()) {\n                this.logout()\n            }\n        }\n    }\n\n    private parseToken(token: string): TokenPayload {\n        return JSON.parse(Base64.decode(token.split('.')[1]))\n    }\n}\n","import { Component, Input, OnDestroy } from '@angular/core'\nimport { faTimes } from '@fortawesome/pro-regular-svg-icons'\nimport { AlertService } from '../services/alert.service'\n\ntype AlertLayout = 'default' | 'full-width'\n\n@Component({\n    selector: 'alert-outlet',\n    templateUrl: 'alert-outlet.component.html',\n})\nexport class AlertOutletComponent implements OnDestroy {\n    @Input()\n    public layout: AlertLayout = 'default'\n    public faTimes = faTimes\n    constructor(public alertService: AlertService) {}\n\n    public ngOnDestroy(): void {\n        this.alertService.clear()\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport { toStartCase } from './common.mixin'\n\n@Pipe({ name: 'startCase' })\nexport class StartCasePipe implements PipeTransform {\n    public transform(value: any): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return toStartCase(value)\n    }\n}\n","import { Component, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faCheckCircle, faExclamationTriangle, faInfoCircle, IconDefinition } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { BootstrapComponentType } from '../common.mixin'\n\n@Component({\n    selector: 'confirmation-modal',\n    templateUrl: 'confirmation-modal.component.html',\n})\nexport class ConfirmationModalComponent {\n    public type: BootstrapComponentType = 'default'\n    public title = 'Confirm'\n    public text?: string\n    public confirmText? = 'Ok'\n    public confirmClass: BootstrapComponentType = 'primary'\n    public cancelText? = 'Cancel'\n    public cancelClass: BootstrapComponentType = 'default'\n    public showCancel? = true\n\n    @ViewChild('inputForm')\n    public form: NgForm\n    public submitted = false\n    public input?: 'text'\n    public inputLabel?: string\n    public inputValue: string\n\n    private faExclamationTriangle = faExclamationTriangle\n    private faInfoCircle = faInfoCircle\n    private faCheckCircle = faCheckCircle\n\n    constructor(public activeModal: NgbActiveModal) {}\n\n    public inputValidator: (value: string) => string | null = (_: string) => null\n\n    public confirm(): void {\n        if (this.input) {\n            this.submitted = true\n            if (this.form.invalid) {\n                return\n            }\n        }\n        this.activeModal.close(true)\n    }\n\n    public get icon(): IconDefinition | null {\n        switch (this.type) {\n            case 'info':\n                return this.faInfoCircle\n            case 'success':\n                return this.faCheckCircle\n            case 'warning':\n                return this.faExclamationTriangle\n            case 'danger':\n                return this.faExclamationTriangle\n            default:\n                return null\n        }\n    }\n}\n","export default \"<div ngbDropdown placement=\\\"bottom-right\\\" (openChange)=\\\"handleDropdownClosed($event)\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1\\\" ngbDropdownToggle>\\n        <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faBell\\\"></fa-icon>\\n        <ng-container *ngIf=\\\"notificationsService.unreadNotificationsStream | async as unreadNotifications\\\">\\n            <span class=\\\"badge badge-primary badge-pill\\\" *ngIf=\\\"unreadNotifications > 0\\\">\\n                {{ unreadNotifications | number: '1.0-0' }}\\n            </span>\\n        </ng-container>\\n    </button>\\n    <div class=\\\"dropdown-menu-w-lg dropdown-menu-right\\\" ngbDropdownMenu>\\n        <div class=\\\"dropdown-header text-center\\\">\\n            {{ 'common.notifications' | translate }}\\n            <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-link text-muted e2e-mark-all-as-read-btn\\\"\\n                (click)=\\\"markAllAsRead(); $event.stopPropagation()\\\"\\n                [ngbTooltip]=\\\"'common.mark-all-as-read' | translate\\\"\\n                placement=\\\"bottom\\\"\\n            >\\n                <fa-icon [icon]=\\\"faEye\\\"></fa-icon>\\n            </button>\\n        </div>\\n        <div class=\\\"dropdown-divider mb-0\\\"></div>\\n        <div class=\\\"scrollable\\\">\\n            <a\\n                href\\n                class=\\\"dropdown-item {{ 'has-' + notification.severity }} e2e-header-notification\\\"\\n                *ngFor=\\\"let notification of notifications\\\"\\n                [ngClass]=\\\"{ active: !notification.read }\\\"\\n                (click)=\\\"goto(notification); $event.preventDefault()\\\"\\n            >\\n                <p class=\\\"mb-0\\\">\\n                    <span class=\\\"badge mr-1\\\" [ngClass]=\\\"'badge-' + notification.severity\\\" *ngIf=\\\"!notification.read\\\">{{\\n                        'common.new' | translate\\n                    }}</span>\\n                    <notification [notification]=\\\"notification\\\" [allowUserCopy]=\\\"false\\\"></notification>\\n                </p>\\n                <small class=\\\"text-muted\\\">{{ notification.createdAt | formatDistanceToNow: true:true }}</small>\\n            </a>\\n        </div>\\n        <div class=\\\"dropdown-divider mt-0\\\"></div>\\n        <a class=\\\"dropdown-item text-center\\\" [routerLink]=\\\"['/notifications']\\\" ngbDropdownItem>{{ 'common.view-all' | translate }}</a>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n        {{ (error === 'VerificationRequiredError' ? 'common.verify-your-identity' : 'common.confirm-your-email-address') | translate }}\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body text-center\\\">\\n    <h3 class=\\\"m-0\\\">{{ 'common.you-dont-have-access-to-this-feature' | translate }}</h3>\\n    <img src=\\\"/img/icons/lock.svg\\\" class=\\\"img-md my-3\\\" />\\n    <p class=\\\"text-body\\\" *ngIf=\\\"error === 'VerificationRequiredError'\\\">\\n        {{ 'common.please-verify-identity' | translate }}\\n        <a href (click)=\\\"$event.preventDefault(); goToVerification()\\\">{{ 'common.start-now' | translate }}</a>\\n    </p>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { IContact } from '../../api-interfaces'\nimport { Contact } from '../../models/core/contact.model'\n\nexport interface ContactCreatePayload {\n    baseUser: {\n        id: string\n    }\n    counterUser: {\n        accountNumber?: string\n        email?: string\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ContactService {\n    constructor(private http: HttpClient) {}\n\n    public create(contact: ContactCreatePayload): Observable<Contact> {\n        return this.http.post<IContact>(`/contacts`, contact).pipe(map(resonse => new Contact(resonse)))\n    }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { pick } from 'lodash'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICardOrder, IContact, IConversion, IInvoice, IUser, Notification, Transaction } from '../api-interfaces'\nimport { ContactService } from '../services/core/contact.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'notification',\n    templateUrl: 'notification.component.html',\n})\nexport class NotificationComponent implements OnInit, OnDestroy {\n    @Input()\n    public notification: Notification\n    @Input()\n    public allowUserCopy = true // Use copy-wrap for user\n\n    public user: IUser | null\n    public transaction: Transaction | null\n    public conversion: IConversion | null\n    public invoice: IInvoice | null\n    public contact: IContact | null\n    public cardOrder: ICardOrder | null\n    public displayName = environment.displayName\n\n    public isLoading = false\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private contactService: ContactService,\n        private toastr: ToastrService\n    ) {}\n\n    public ngOnInit(): void {\n        this.user = this.notification.user\n        this.transaction = this.notification.transaction\n        this.conversion = this.notification.conversion\n        this.invoice = this.notification.invoice\n        this.contact = this.notification.contact\n        this.cardOrder = this.notification.cardOrder\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public addContact(): void {\n        this.isLoading = true\n        this.subscriptions.add(\n            this.contactService\n                .create({\n                    baseUser: pick(this.session.user, ['id']),\n                    counterUser: {\n                        accountNumber: this.notification.contact?.baseUser?.accountNumber ?? '',\n                    },\n                })\n                .pipe(\n                    finalize(() => {\n                        this.isLoading = false\n                    })\n                )\n                .subscribe(() => {\n                    this.toastr.success(\n                        `${\n                            this.notification.contact && this.notification.contact.baseUser!.accountNumber\n                        } added as contact`\n                    )\n                })\n        )\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.contact-book' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'common.add-contacts' | translate }}</div>\\n<div class=\\\"modal-body\\\">\\n    <form class=\\\"form-validation mb-3\\\" #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"addContact(searchText)\\\">\\n        <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                    <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                </span>\\n            </div>\\n            <input\\n                autocomplete=\\\"off\\\"\\n                type=\\\"text\\\"\\n                name=\\\"search\\\"\\n                (ngModelChange)=\\\"searchContacts($event)\\\"\\n                [(ngModel)]=\\\"searchText\\\"\\n                [placeholder]=\\\"'common.search-contacts' | translate\\\"\\n                class=\\\"form-control\\\"\\n                [focus]=\\\"true\\\"\\n            />\\n            <div [@showButton]=\\\"(itemsStream | async)?.length === 0 && searchText.length > 0\\\" class=\\\"input-group-append overflow-hidden\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [ngClass]=\\\"{ loading: isLoading }\\\" [disabled]=\\\"isLoading\\\">\\n                    {{ 'common.add' | translate }}\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n    <ng-container *ngIf=\\\"itemsStream | async as items\\\">\\n        <ng-container *ngIf=\\\"items.length > 0; else noContacts\\\">\\n            <div class=\\\"list-group list-group-flush mb-3\\\">\\n                <a\\n                    href\\n                    class=\\\"list-group-item list-group-item-action d-flex align-items-center justify-content-center p-3\\\"\\n                    *ngFor=\\\"let contact of items\\\"\\n                    (click)=\\\"onSelect.emit(contact); $event.preventDefault()\\\"\\n                >\\n                    <div class=\\\"avatar mr-3\\\">\\n                        <user-avatar [user]=\\\"contact.counterUser\\\"></user-avatar>\\n                    </div>\\n                    <div class=\\\"w-100\\\">\\n                        <div class=\\\"text-primary\\\">{{ contact.counterUser.name }}</div>\\n                        <small\\n                            >{{ contact.counterUser.accountNumber | accountNumber }}\\n                            <span class=\\\"text-muted text-capitalize\\\">/ {{ contact.counterUser.type }}</span></small\\n                        >\\n                    </div>\\n                    <div *ngIf=\\\"contact.id\\\" class=\\\"btn-group\\\">\\n                        <button\\n                            type=\\\"button\\\"\\n                            class=\\\"btn btn-default text-gray\\\"\\n                            (click)=\\\"removeContact(contact); $event.stopPropagation(); $event.preventDefault()\\\"\\n                            [ngClass]=\\\"{ loading: deletingContacts.has(contact.id) }\\\"\\n                            [disabled]=\\\"deletingContacts.has(contact.id)\\\"\\n                        >\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </div>\\n                </a>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col d-flex justify-content-end\\\">\\n                    <ngb-pagination\\n                        class=\\\"mb-0\\\"\\n                        [(page)]=\\\"page\\\"\\n                        [collectionSize]=\\\"count\\\"\\n                        (pageChange)=\\\"select()\\\"\\n                        [pageSize]=\\\"limit\\\"\\n                        [rotate]=\\\"false\\\"\\n                        [boundaryLinks]=\\\"true\\\"\\n                    >\\n                    </ngb-pagination>\\n                </div>\\n            </div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-template #noContacts>\\n        <div *ngIf=\\\"searchText.length === 0; else addContacts\\\" class=\\\"text-center mt-4 mb-3\\\">\\n            <fa-icon class=\\\"text-muted\\\" [icon]=\\\"faUserAltSlash\\\" size=\\\"3x\\\"></fa-icon>\\n            <h3 class=\\\"text-muted mt-2\\\">{{ 'common.no-contacts' | translate }}</h3>\\n            <p class=\\\"text-muted\\\">\\n                {{ 'common.add-people' | translate }}\\n            </p>\\n        </div>\\n    </ng-template>\\n    <ng-template #addContacts>\\n        <div class=\\\"text-center my-5\\\">\\n            <fa-icon class=\\\"text-muted\\\" [icon]=\\\"faUserAltSlash\\\" size=\\\"3x\\\"></fa-icon>\\n            <h3 class=\\\"text-muted mt-2\\\">\\\"{{ searchText }}\\\" {{ 'common.not-found' | translate }}</h3>\\n            <small class=\\\"text-muted\\\">{{ 'common.press-enter-to-add' | translate }} \\\"{{ searchText }}\\\"</small>\\n        </div>\\n    </ng-template>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { capitalize } from 'lodash'\nimport { Subscription } from 'rxjs'\nimport { BusinessDetails, IUser, UserDetails } from '../api-interfaces'\nimport { toCountryCallingCode, toStartCase } from '../common.mixin'\nimport { countryMap } from '../countries'\n\n@Component({\n    selector: 'user-info-table',\n    templateUrl: 'user-info-table.component.html',\n})\nexport class UserInfoTableComponent implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    public details: UserDetails\n    public businessDetails: BusinessDetails\n    public fields: (keyof UserDetails)[] = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'gender',\n        'phoneNumber',\n        'birthday',\n        'nationality',\n        'address',\n        'occupation',\n        'sourceOfIncome',\n        'taxIdentificationNumber',\n        'fatca',\n        'expectedTurnover',\n        'documentType',\n        'documentNumber',\n        'documentIssuingDate',\n        'documentExpiryDate',\n        'proofOfAddressDate',\n        'referredBy',\n    ]\n    public businessFields: (keyof BusinessDetails)[] = [\n        'name',\n        'type',\n        'registrationNumber',\n        'phoneNumber',\n        'countryOfIncorporation',\n        'dateOfIncorporation',\n        'industry',\n        'expectedTurnover',\n        'address',\n        'businessAddress',\n        'regulatoryBody',\n        'licensed',\n        'licenseNumber',\n        'fatca',\n    ]\n    public currentTab: 'business' | 'manager' = 'business'\n\n    private subscriptions = new Subscription()\n\n    public constructor(private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.http.get<UserDetails>(`/admin/users/${this.user.id}/details`).subscribe(details => {\n            this.details = details\n            if (this.user.type === 'business') {\n                this.businessDetails = this.details.business!\n                this.fields = this.fields.filter(field => !['fatca', 'expectedTurnover'].includes(field))\n            }\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public getProperty(property: keyof UserDetails): string {\n        if (property === 'fatca') {\n            return 'FATCA'\n        }\n        return toStartCase(property)\n    }\n\n    public getValue(property: keyof Omit<UserDetails, 'address' | 'business'>): string {\n        if (property === 'fatca') {\n            return this.details.fatca === undefined ? '' : this.details.fatca ? 'Yes' : 'No'\n        }\n        if (property === 'nationality') {\n            return countryMap[this.details.nationality]?.name ?? ''\n        }\n        if (property === 'phoneNumber') {\n            return `${toCountryCallingCode(this.details.phoneCountryCode) ?? ''} ${this.details.phoneNumber ?? ''}`\n        }\n        if (property === 'documentType') {\n            return capitalize(this.details.documentType)\n        }\n        if (property === 'gender') {\n            return capitalize(this.details.gender)\n        }\n        return this.details[property] ?? ''\n    }\n\n    public getBusinessValue(property: keyof Omit<BusinessDetails, 'address' | 'businessAddress' | 'ubos'>): string {\n        if (property === 'fatca' || property === 'licensed') {\n            return this.businessDetails[property] === undefined ? '' : this.businessDetails[property] ? 'Yes' : 'No'\n        }\n        if (property === 'phoneNumber') {\n            return `${toCountryCallingCode(this.businessDetails.phoneCountryCode) ?? ''} ${\n                this.businessDetails.phoneNumber ?? ''\n            }`\n        }\n        return this.businessDetails[property]\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.welcome-to' | translate }} {{ displayName }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'common.lets-complete' | translate }}</div>\\n<div class=\\\"modal-body py-3\\\">\\n    <div class=\\\"row py-2 b-b-1\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <div class=\\\"welcome-step media align-items-center\\\" [ngClass]=\\\"{ completed: user?.status !== 'pending' }\\\">\\n                <img src=\\\"/img/icons/secure-transaction.svg\\\" class=\\\"mr-3 img-sm\\\" />\\n                <div class=\\\"media-body pt-1\\\">\\n                    <confirm-mail-reminder [user]=\\\"user\\\"></confirm-mail-reminder>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row py-2 b-b-1\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <div class=\\\"welcome-step media align-items-center\\\" [ngClass]=\\\"{ completed: user?.approvedAt }\\\">\\n                <img src=\\\"/img/icons/resume.svg\\\" class=\\\"mr-3 img-sm\\\" />\\n                <div class=\\\"media-body pt-1\\\">\\n                    {{ 'common.remember-to' | translate }}\\n                    <a [routerLink]=\\\"!user?.approvedAt ? ['/verify'] : undefined\\\" (click)=\\\"close()\\\">{{\\n                        'common.complete-your-profile' | translate\\n                    }}</a>\\n                    {{ 'common.for-full-access' | translate }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <div class=\\\"welcome-step media align-items-center\\\" [ngClass]=\\\"{ completed: user?.twoFactor }\\\">\\n                <img src=\\\"/img/icons/protection2.svg\\\" class=\\\"mr-3 img-sm\\\" />\\n                <div class=\\\"media-body pt-1\\\">\\n                    {{ 'common.consider' | translate }}\\n                    <a [routerLink]=\\\"!user?.twoFactor ? ['/account/security'] : undefined\\\" (click)=\\\"close()\\\">{{\\n                        'common.enabling-two-factor' | translate\\n                    }}</a>\\n                    {{ 'common.to-make-secure' | translate }}.\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-primary btn-w-sm\\\" (click)=\\\"close()\\\">{{ 'common.proceed-to-dashboard' | translate }}</button>\\n</div>\\n\";","export default \"<div class=\\\"alert-outlet\\\" [ngClass]=\\\"{ 'alert-outlet-full-width': layout === 'full-width' }\\\">\\n    <div\\n        class=\\\"alert\\\"\\n        [ngClass]=\\\"'alert-' + alert.severity + (layout === 'default' ? ' alert-dismissible' : '')\\\"\\n        role=\\\"alert\\\"\\n        *ngFor=\\\"let alert of alertService.alerts\\\"\\n    >\\n        <ng-container *ngIf=\\\"layout === 'default'\\\">\\n            <span [innerHtml]=\\\"alert.message\\\"></span>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"alertService.remove(alert)\\\">&times;</button>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"layout === 'full-width'\\\">\\n            <div class=\\\"container d-flex justify-content-between align-items-center\\\">\\n                <div>\\n                    <fa-icon class=\\\"mx-2\\\" [icon]=\\\"alert.icon\\\" *ngIf=\\\"alert.icon\\\"></fa-icon>\\n                    <span [innerHtml]=\\\"alert.message\\\"></span>\\n                    <ng-container *ngIf=\\\"alert.callToAction\\\">\\n                        <span>&nbsp;</span><a [routerLink]=\\\"[alert.callToAction.route]\\\">{{ alert.callToAction.label }}</a>\\n                    </ng-container>\\n                </div>\\n                <div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"alertService.remove(alert)\\\"><fa-icon [icon]=\\\"faTimes\\\"></fa-icon></button>\\n                </div>\\n            </div>\\n        </ng-container>\\n    </div>\\n</div>\\n\";","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[ipAddressValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: IpAddressValidatorDirective, multi: true }],\n})\nexport class IpAddressValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (\n            !control.value?.match(\n                /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/g\n            )\n        ) {\n            return { ipAddressError: true }\n        }\n        return null\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { merge, ReplaySubject, Subject } from 'rxjs'\nimport { filter, flatMap, map, switchMap } from 'rxjs/operators'\nimport { SessionService, UserEventType } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NotificationsService {\n    public unreadNotificationsStream = new ReplaySubject<number>(1)\n    public notifyEvent = new Subject<void>()\n\n    constructor(public session: SessionService, private http: HttpClient) {\n        merge(this.notifyEvent, this.session.userEvent.pipe(filter(event => event.type === UserEventType.LOGIN)))\n            .pipe(\n                switchMap(() => this.session.userStream),\n                flatMap(user =>\n                    this.http.head(`/users/${user.id}/notifications`, {\n                        observe: 'response',\n                        params: new HttpParams().set('read', 'false'),\n                    })\n                ),\n                map(response =>\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                )\n            )\n            .subscribe(count => {\n                this.unreadNotificationsStream.next(count)\n            })\n    }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faTrash, faUserAltSlash } from '@fortawesome/pro-regular-svg-icons'\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subject } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { IContact, IUser } from '../api-interfaces'\nimport { isAccountNumber, isEmail } from '../common.mixin'\nimport { ListComponent } from '../list.component'\nimport { ConfirmationService } from '../services/confirmation.service'\nimport { ContactService } from '../services/core/contact.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'contact-book',\n    templateUrl: 'contact-book.component.html',\n    animations: [\n        trigger('showButton', [\n            state(\n                'true',\n                style({\n                    width: '55px',\n                })\n            ),\n            state(\n                'false',\n                style({\n                    width: '0',\n                })\n            ),\n            transition('0 <=> 1', animate('200ms')),\n        ]),\n    ],\n})\nexport class ContactBookComponent extends ListComponent<IContact> implements OnInit {\n    @Input()\n    public user: IUser\n    @Output()\n    public readonly onSelect = new EventEmitter<IContact>()\n    @Output()\n    public readonly onUpdate = new EventEmitter<void>()\n    public fetchEvent = new Subject<void>()\n    // This one is only use for display, since we need to manipulate search property before sending it\n    public searchText = ''\n\n    public isLoading = false\n    public deletingContacts = new Set<string>()\n    public defaultLimit = 5\n    public faTrash = faTrash\n    public faUserAltSlash = faUserAltSlash\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        confirmation: ConfirmationService,\n        public modal: NgbActiveModal,\n        private toastr: ToastrService,\n        private contactService: ContactService,\n        public translate: TranslateService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session, confirmation)\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.user!.id}/contacts`\n        super.ngOnInit()\n    }\n\n    public addContact(name: string): void {\n        this.isLoading = true\n        this.http\n            .get<IContact[]>(this.apiUrl, {\n                params: new HttpParams().set('search', name.trim().replace(/\\s/g, '')),\n            })\n            .subscribe(contacts => {\n                const contact = contacts.find(\n                    c => !!c.counterUser && (c.counterUser.accountNumber === name || c.counterUser.email === name)\n                )\n                if (contact) {\n                    this.isLoading = false\n                    this.onSelect.emit(contact)\n                } else {\n                    if (!isAccountNumber(name, { allowSpaces: true }) && !isEmail(name)) {\n                        this.toastr.error(this.translate.instant('contact-book.must-be-an-account-number-or-email'))\n                        this.isLoading = false\n                        return\n                    }\n                    this.contactService\n                        .create({\n                            counterUser: isEmail(name)\n                                ? { email: name.trim().replace(/\\s/g, '') }\n                                : { accountNumber: name.trim().replace(/\\s/g, '') },\n                            baseUser: { id: this.user.id },\n                        })\n                        .pipe(\n                            finalize(() => {\n                                this.isLoading = false\n                            })\n                        )\n                        .subscribe(() => {\n                            this.updateEvent.next()\n                            this.onUpdate.emit()\n                        })\n                }\n            })\n    }\n\n    public removeContact(contact: IContact): void {\n        if (this.deletingContacts.has(contact.id)) {\n            return\n        }\n        this.deletingContacts.add(contact.id)\n        this.http\n            .delete<void>(`/contacts/${contact.id}`)\n            .pipe(\n                finalize(() => {\n                    this.deletingContacts.delete(contact.id)\n                })\n            )\n            .subscribe(() => {\n                this.updateEvent.next()\n                this.onUpdate.emit()\n            })\n    }\n\n    public searchContacts(search: string): void {\n        this.search = search.replace(/ /g, '')\n        this.searchEvent.next()\n    }\n\n    protected async changeState(): Promise<void> {\n        // do nothing\n    }\n}\n\nexport function openContactBook(ngbModal: NgbModal, owner: IUser): NgbModalRef {\n    const contactBookModal = ngbModal.open(ContactBookComponent, {\n        windowClass: 'modal-primary',\n    })\n    const contactBook = contactBookModal.componentInstance as ContactBookComponent\n    contactBook.user = owner\n    return contactBookModal\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Operation } from 'fast-json-patch'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { ICurrency, Risk, RPCResult, UserFlag, UserRole, UserSegment } from '../../api-interfaces'\nimport { User } from '../../models/core/user.model'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    constructor(private http: HttpClient) {}\n\n    public updateDetails(id: string, body: Partial<any>): Observable<User> {\n        return this.http.put<User>(`/users/${id}/details`, body)\n    }\n\n    public changePassword(id: string, password: string, headers?: { [name: string]: string }): Observable<User> {\n        return this.http\n            .post<User>(\n                `/users/${id}/change-password`,\n                { password },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json',\n                        ...headers,\n                    }),\n                }\n            )\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeEmail(id: string, email: string): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-email`, { email }).pipe(map(payload => new User(payload)))\n    }\n\n    public changePermission(id: string, permissions: string[] | null): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-permission`, { permissions })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeSegment(id: string, segment: UserSegment): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-segment`, { segment }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeReferrer(id: string, referrerId: string): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-referrer`, { referrerId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeAssociation(id: string, associationId: string | null): Observable<User> {\n        return this.http\n            .post<User>(`/admin/users/${id}/change-association`, { associationId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeExternalId(id: string, externalId: string | null): Observable<User> {\n        return this.http\n            .post<User>(`/admin/users/${id}/change-external-id`, { externalId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeRole(id: string, role: UserRole | null): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-role`, { role }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeStatus(id: string, status: string): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-status`, { status }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeRiskRating(id: string, riskRating: Risk): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-risk-rating`, { riskRating })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeTwoFactor(id: string, twoFactor: boolean, headers?: { [name: string]: string }): Observable<User> {\n        return this.http\n            .post<User>(\n                `/users/${id}/change-two-factor`,\n                { twoFactor },\n                {\n                    headers: new HttpHeaders({ 'Content-Type': 'application/json', ...headers }),\n                }\n            )\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changePreferredCurrency(id: string, preferredCurrency: ICurrency): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-preferred-currency`, { preferredCurrency })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeBillingCurrency(id: string, billingCurrency: ICurrency): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-billing-currency`, { billingCurrency })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeSendEmailNotifications(id: string, sendEmailNotifications: boolean): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-send-email-notifications`, { sendEmailNotifications })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeFlags(id: string, flags: UserFlag[]): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-flags`, { flags }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeCardProgram(id: string, cardProgramId: string | null): Observable<User> {\n        return this.http\n            .post<User>(`/admin/users/${id}/change-card-program`, { cardProgramId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public patch(id: string, operations: Operation[]): Observable<User> {\n        return this.http\n            .patch<User>(`/users/${id}`, operations, {\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json-patch+json',\n                }),\n            })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public resendActivationMail(id: string): Observable<RPCResult<void>> {\n        return this.http.post<RPCResult<void>>(\n            `/users/${id}`,\n            {\n                id: Math.floor(Math.random() * 10000),\n                jsonrpc: '2.0',\n                method: 'resendActivationMail',\n            },\n            {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json-rpc' }),\n            }\n        )\n    }\n}\n","export default \"<!-- htmllint attr-bans=\\\"[]\\\" -->\\n<div class=\\\"spinner-wrapper\\\" [ngClass]=\\\"theme\\\">\\n    <div class=\\\"circle-spinner\\\" title=\\\"0\\\">\\n        <svg\\n            version=\\\"1.1\\\"\\n            id=\\\"loader-1\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            x=\\\"0px\\\"\\n            y=\\\"0px\\\"\\n            width=\\\"50px\\\"\\n            height=\\\"50px\\\"\\n            viewBox=\\\"0 0 40 40\\\"\\n            enable-background=\\\"new 0 0 40 40\\\"\\n            xml:space=\\\"preserve\\\"\\n        >\\n            <path\\n                opacity=\\\"0.2\\\"\\n                fill=\\\"#000\\\"\\n                d=\\\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\\\"\\n            ></path>\\n            <path fill=\\\"#000\\\" d=\\\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0C22.32,8.481,24.301,9.057,26.013,10.047z\\\">\\n                <animateTransform\\n                    attributeType=\\\"xml\\\"\\n                    attributeName=\\\"transform\\\"\\n                    type=\\\"rotate\\\"\\n                    from=\\\"0 20 20\\\"\\n                    to=\\\"360 20 20\\\"\\n                    dur=\\\"0.5s\\\"\\n                    repeatCount=\\\"indefinite\\\"\\n                ></animateTransform>\\n            </path>\\n        </svg>\\n    </div>\\n</div>\\n<!-- htmllint attr-bans=\\\"$previous\\\" -->\\n\";","export const environment = {\n    appName: 'aerapass',\n    displayName: 'Aerapass',\n    accountOpeningFeeEnabled: false,\n    cryptoDepositAddresses: {\n        BTC: 'bc1q0d4ts4wre7eh96mv6dns09lzpj92knfvznflnx',\n        BSV: '1P4TmVrjT856D2uiF3gZqpnC5TBYzwDtRu',\n        ETH: '0x900A8Df166f5625AA80F821e38f1Acef922e1Fc0',\n        LTC: 'Lh4y3TRQBZDXRL7gs9XChD2TSbsgnmUMHA',\n        'USDC.erc20': '0x900A8Df166f5625AA80F821e38f1Acef922e1Fc0',\n        'USDT.erc20': '0x900A8Df166f5625AA80F821e38f1Acef922e1Fc0',\n        'USDT.trc20': 'TKD5QD9C3mrfZAEG5RGbc6PrjSuH7P3pWY',\n    },\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core'\nimport { faCircleNotch } from '@fortawesome/pro-solid-svg-icons'\nimport BigNumber from 'bignumber.js'\nimport { currencySymbolMap } from 'currency-symbol-map'\nimport { forkJoin, merge, Observable, of, Subject } from 'rxjs'\nimport { debounceTime, finalize, map, switchMap, tap } from 'rxjs/operators'\nimport {\n    IBeneficiary,\n    ICurrency,\n    IFee,\n    Paginated,\n    RPCResult,\n    TransactionMethod,\n    TransactionType,\n} from '../api-interfaces'\nimport { Currency } from '../models/accounting/currency.model'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'fee-preview',\n    templateUrl: 'fee-preview.component.html',\n})\nexport class FeePreviewComponent implements OnInit, OnChanges {\n    public faCircleNotch = faCircleNotch\n    public currencySymbolMap = currencySymbolMap\n    @Input()\n    /* Whether to show a currency symbol prefix. Eg. $1.00 */\n    public prefix = false\n    @Input()\n    public currency: ICurrency | null\n    @Input()\n    public type: TransactionType\n    @Input()\n    public method: TransactionMethod\n    @Input()\n    public amount: string\n    @Input()\n    public spreadUp: boolean | undefined = undefined\n    @Output()\n    public readonly fixedFeeChange = new EventEmitter<string | null>()\n    @Output()\n    public readonly relativeFeeChange = new EventEmitter<string | null>()\n    @Output()\n    public readonly beneficiaryChange = new EventEmitter<IBeneficiary | null>()\n    @Output()\n    public readonly currencyChange = new EventEmitter<Currency | null>()\n    public isLoading = true\n    private fetchEvent = new Subject<void>()\n    private currencies: ICurrency[] = []\n    private fxSpread: IFee | null = null\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    public feeStream: Observable<IFee | null> = merge(of(undefined), this.fetchEvent).pipe(\n        tap(() => {\n            this.isLoading = true\n        }),\n        debounceTime(200),\n        switchMap(() =>\n            !(this.type && this.method && this.currency)\n                ? of(null)\n                : forkJoin([\n                      // fetch the fee itself for the current set of { method, type, currency }\n                      this.http.post<RPCResult<IFee | null>>(\n                          '/fees',\n                          {\n                              id: Math.round(Math.random() * 10000),\n                              jsonrpc: '2.0',\n                              method: 'findByPrimaryAttributes',\n                              params: {\n                                  type: this.type,\n                                  method: this.method,\n                                  user: this.session.user ? { id: this.session.user.id } : null,\n                                  currency: this.currency ? { code: this.currency.code } : null,\n                              },\n                          },\n                          {\n                              headers: new HttpHeaders({\n                                  'Content-Type': 'application/json-rpc',\n                              }),\n                          }\n                      ),\n                      this.spreadUp === undefined\n                          ? of(undefined)\n                          : this.http.post<RPCResult<IFee | null>>(\n                                '/fees',\n                                {\n                                    id: Math.round(Math.random() * 10000),\n                                    jsonrpc: '2.0',\n                                    method: 'findByPrimaryAttributes',\n                                    params: {\n                                        type: 'fx-spread',\n                                        method: 'internal',\n                                        user: this.session.user ? { id: this.session.user.id } : null,\n                                        currency: this.currency ? { code: this.currency.code } : null,\n                                    },\n                                },\n                                {\n                                    headers: new HttpHeaders({\n                                        'Content-Type': 'application/json-rpc',\n                                    }),\n                                }\n                            ),\n                  ]).pipe(\n                      tap(([{ result }, fxSpreadResponse]) => {\n                          this.fixedFeeChange.emit(result && result.fixed)\n                          this.relativeFeeChange.emit(result && result.relative)\n                          this.currencyChange.emit(result && new Currency(result.currency))\n                          if (this.type === 'deposit') {\n                              this.beneficiaryChange.emit(result && result.beneficiary)\n                          }\n                          if (fxSpreadResponse) {\n                              this.fxSpread = fxSpreadResponse.result\n                          }\n                      }),\n                      map(([{ result }]) => (result ? result : ({ relative: '0.0', currency: this.currency } as IFee))),\n                      finalize(() => {\n                          this.isLoading = false\n                      })\n                  )\n        )\n    )\n\n    constructor(private http: HttpClient, private session: SessionService) {}\n\n    public ngOnInit(): void {\n        this.http.get<Paginated<ICurrency>>('/currencies', { params: { limit: 100 + '' } }).subscribe(response => {\n            this.currencies = response.data\n            this.fetchEvent.next()\n        })\n    }\n\n    public ngOnChanges(): void {\n        this.fetchEvent.next()\n    }\n\n    public calculateAmount(fee: IFee): string {\n        if (!this.currency || !this.currencies) {\n            return '0.0'\n        }\n        const found = this.currencies.find(currency => this.currency && currency.code === this.currency.code)\n        const precision = found ? found.decimalPlaces : 2\n        const relativeFeeAmount = new BigNumber(this.amount || 0).times(fee.relative || 0).toFixed(precision || 8, 1)\n        return new BigNumber(this.calculateFixedFee(fee)).plus(relativeFeeAmount).toFixed(precision || 8, 1)\n    }\n\n    private convert(amount: string, baseCurrency: ICurrency, counterCurrency: ICurrency): string {\n        const base = this.currencies.find(currency => currency.code === baseCurrency.code)\n        const counter = this.currencies.find(currency => currency.code === counterCurrency.code)\n        if (!base || !counter) {\n            return '0'\n        }\n        return Currency.convert(\n            amount,\n            base,\n            counter,\n            this.spreadUp !== undefined && this.fxSpread ? this.fxSpread : undefined,\n            this.spreadUp\n        )\n    }\n\n    private calculateFixedFee(fee: IFee): string {\n        return new BigNumber(\n            fee.fixed && this.currency ? this.convert(fee.fixed, fee.currency, this.currency) : 0\n        ).toFixed(8, 1)\n    }\n}\n","import { File } from './api-interfaces'\n\nexport class FileView {\n    private tab: Window\n\n    constructor() {\n        if (!window.navigator || !window.navigator.msSaveOrOpenBlob) {\n            const tab = window.open()\n            if (!tab) {\n                throw new Error('Could not open new window')\n            }\n            this.tab = tab\n        }\n    }\n\n    public show(blob: Blob, name?: string): void {\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(blob, name)\n        } else {\n            this.tab.location.replace(URL.createObjectURL(blob))\n        }\n    }\n\n    public close(): void {\n        if (this.tab) {\n            this.tab.close()\n        }\n    }\n}\n\nexport function buildFileUrl(file: File): string {\n    return `https://s3.amazonaws.com/${file.bucket}/${file.key}`\n}\n","import { Component } from '@angular/core'\nimport { faUsers } from '@fortawesome/pro-solid-svg-icons'\nimport { timer } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { StatisticsService } from '../../../../common/services/core/statistics.service'\n\n@Component({\n    selector: 'online-users-count',\n    templateUrl: 'online-users-count.component.html',\n})\nexport class OnlineUsersCountComponent {\n    public faUsers = faUsers\n    public userCount$ = timer(0, 1000 * 60).pipe(flatMap(() => this.statistics.getOnlineUsersCount()))\n    constructor(private statistics: StatisticsService) {}\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable, of, throwError, timer } from 'rxjs'\nimport { catchError, flatMap, retryWhen } from 'rxjs/operators'\nimport { openNoAccessModal } from './no-access-modal/no-access-modal.component'\nimport { LogoutService } from './services/logout.service'\nimport { SessionService } from './services/session.service'\nimport { ToastrService } from './services/toastr.service'\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n    public static readonly MAX_RETRY_ATTEMPTS = 3\n    constructor(\n        private toastr: ToastrService,\n        private logoutService: LogoutService,\n        private modal: NgbModal,\n        private session: SessionService\n    ) {}\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const shouldLogOut = !(req.headers.get('X-No-Logout') && JSON.parse(req.headers.get('X-No-Logout')!))\n        const ignoreErrorHandling = !!(\n            req.headers.get('X-Ignore-Error-Handling') && JSON.parse(req.headers.get('X-Ignore-Error-Handling')!)\n        )\n        const suppressToast = req.headers.get('X-No-Toast') && JSON.parse(req.headers.get('X-No-Toast')!)\n        return next\n            .handle(\n                req.clone({\n                    headers: req.headers.delete('X-No-Logout').delete('X-Ignore-Error-Handling').delete('X-No-Toast'),\n                })\n            )\n            .pipe(\n                retryWhen(attempts =>\n                    attempts.pipe(\n                        flatMap((error, attempt) => {\n                            // only retry 503 maintenance errored requests\n                            if (error.status !== 503) {\n                                return throwError(error)\n                            }\n                            const retryAttempt = attempt + 1\n                            // if maximum number of retries have been exceeded, throw an error\n                            if (retryAttempt > ErrorHandlerInterceptor.MAX_RETRY_ATTEMPTS) {\n                                return throwError(error)\n                            }\n                            // retry after increasing delay, 1000ms, 2000ms, 3000ms, abort\n                            // eslint-disable-next-line no-console\n                            console.log(`Attempt ${retryAttempt}: retrying in ${retryAttempt * 1000}ms`)\n                            return timer(retryAttempt * 1000)\n                        })\n                    )\n                ),\n                catchError(err => {\n                    if (!ignoreErrorHandling && err instanceof HttpErrorResponse) {\n                        const response = err as HttpErrorResponse\n                        let error: Error & { errors?: string[] }\n                        if (response.status === -1) {\n                            error = new Error('Connection refused')\n                        } else if (response.status === 0) {\n                            error = new Error('Request failed')\n                        } else if (response.error) {\n                            error = response.error\n                        } else if (response.message) {\n                            error = new Error(response.message)\n                        } else {\n                            error = new Error(response.statusText || 'Error ' + response.status)\n                        }\n\n                        if (response.status !== 503) {\n                            // blacklist of error codes to be hidden from toasts\n                            if (\n                                !suppressToast &&\n                                ![\n                                    'VerificationRequiredError',\n                                    'RecipientNotFoundError',\n                                    'Require2FACodeError',\n                                ].includes(error.name)\n                            ) {\n                                if (error.errors?.length) {\n                                    for (const errorText of error.errors) {\n                                        this.toastr.error(errorText)\n                                    }\n                                } else {\n                                    this.toastr.error(error.message)\n                                }\n                            }\n                            return of(undefined).pipe(\n                                flatMap(() => {\n                                    if (\n                                        shouldLogOut &&\n                                        err.status === 401 &&\n                                        this.session.isAuthenticated() &&\n                                        // These errors should not lead to logging out the user\n                                        ![\n                                            'Wrong2FACodeError',\n                                            'Require2FACodeError',\n                                            'WrongCredentialsError',\n                                            'WrongPasswordError',\n                                        ].includes(error.name)\n                                    ) {\n                                        return this.logoutService.logout()\n                                    }\n                                    if (error.name === 'VerificationRequiredError') {\n                                        this.modal.dismissAll()\n                                        openNoAccessModal(this.modal, error.name)\n                                    }\n                                    return of(undefined)\n                                }),\n                                flatMap(() =>\n                                    throwError(\n                                        Object.assign(error, {\n                                            severity: 'danger',\n                                            name: error.name || response.name || 'Server error',\n                                            status: response.status,\n                                            caughtByInterceptor: true,\n                                        })\n                                    )\n                                )\n                            )\n                        } else {\n                            // backend is in maintenance mode, reload to see if the frontend is affected as well\n                            setTimeout(() => window.location.reload(), 1000)\n                        }\n                    }\n                    return throwError(err)\n                })\n            )\n    }\n}\n","import { Component } from '@angular/core'\nimport { StatusMessageService } from './status-message.service'\n\n@Component({\n    selector: 'status-message',\n    templateUrl: 'status-message.component.html',\n})\nexport class StatusMessageComponent {\n    constructor(public statusMessage: StatusMessageService) {}\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core'\n\n@Directive({\n    selector: '[numeric]',\n})\nexport class NumericDirective {\n    @Input() public decimals = 0\n\n    constructor(private el: ElementRef) {}\n\n    @HostListener('keydown')\n    public onKeyDown() {\n        this.run(this.el.nativeElement.value)\n    }\n\n    @HostListener('paste')\n    public onPaste() {\n        this.run(this.el.nativeElement.value)\n    }\n\n    private check(value: string) {\n        if (this.decimals <= 0) {\n            return String(value).match(new RegExp(/^\\d+$/))\n        } else {\n            const regExpString =\n                '^\\\\s*((\\\\d+(\\\\.\\\\d{0,' + this.decimals + '})?)|((\\\\d*(\\\\.\\\\d{1,' + this.decimals + '}))))\\\\s*$'\n            return String(value).match(new RegExp(regExpString))\n        }\n    }\n\n    private run(oldValue: string) {\n        setTimeout(() => {\n            const currentValue: string = this.el.nativeElement.value\n            if (currentValue !== '' && !this.check(currentValue)) {\n                this.el.nativeElement.value = oldValue\n            }\n        })\n    }\n}\n","import { isPlatformBrowser } from '@angular/common'\nimport { ErrorHandler, Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core'\nimport * as Sentry from '@sentry/browser'\nimport * as Integrations from '@sentry/integrations'\nimport { environment } from 'src/environments/environment'\nimport { ConfirmationService } from '../common/services/confirmation.service'\nimport { SessionService, UserEventType } from '../common/services/session.service'\n\n@Injectable()\nexport class AppErrorHandler implements ErrorHandler {\n    private sentryHub: Sentry.Hub\n    constructor(\n        session: SessionService,\n        @Inject(PLATFORM_ID) private platformId: Record<string, any>,\n        private injector: Injector\n    ) {\n        if (isPlatformBrowser(platformId) && window.SENTRY_DSN) {\n            this.sentryHub = new Sentry.Hub(\n                new Sentry.BrowserClient({\n                    dsn: window.SENTRY_DSN,\n                    debug: false,\n                    release: '1.0.0',\n                    environment: environment.appName,\n                    integrations: [new Integrations.Dedupe()],\n                })\n            )\n            session.userEvent.subscribe(event => {\n                this.sentryHub.configureScope(scope => {\n                    if (event.type === UserEventType.LOGIN) {\n                        scope.setUser({\n                            id: event.user.id,\n                            email: event.user.email,\n                            username: event.user.accountNumber,\n                        })\n                    } else if (event.type === UserEventType.LOGOUT) {\n                        scope.setUser(null)\n                    }\n                })\n            })\n        }\n    }\n    public handleError(error: Error): void {\n        if ((error as any).caughtByInterceptor) {\n            // silent\n            return\n        }\n        // eslint-disable-next-line no-console\n        console.error(error)\n        if (!isPlatformBrowser(this.platformId)) {\n            return\n        }\n        // Reload webpage on chunk loading error when browsing with outdated client\n        const chunkFailedMessage = /Loading chunk [\\d]+ failed/\n        if (chunkFailedMessage.test(error.message)) {\n            const confirmation = this.injector.get(ConfirmationService)\n            confirmation\n                .show({\n                    type: 'danger',\n                    text: 'It seems that you are using an outdated version of our website. Please reload to continue browsing our shiny new one.',\n                    title: 'New version detected',\n                    showCancel: false,\n                    confirmText: 'Reload',\n                    confirmClass: 'danger',\n                })\n                .subscribe(() => {\n                    window.location.reload()\n                })\n            return\n        }\n        if (this.sentryHub) {\n            this.sentryHub.captureException((error as any).originalError || error)\n        }\n    }\n}\n","export default \"<form\\n    class=\\\"form-validation e2e-beneficiary-form\\\"\\n    #beneficiaryForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"submit()\\\"\\n    [ngClass]=\\\"{ 'ng-submitted': beneficiaryForm.submitted }\\\"\\n    autocomplete=\\\"false\\\"\\n    novalidate\\n>\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">\\n            {{ (item.id ? 'common.update' : 'common.create') | translate }}\\n            {{ (item.type === 'deposit-instruction' ? 'common.deposit-instruction' : 'common.beneficiary') | translate }}\\n        </h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <ng-container *ngIf=\\\"!compact\\\">\\n            <div *ngIf=\\\"!hideFields.includes('owner')\\\" class=\\\"form-group\\\">\\n                <label for=\\\"owner\\\">{{ 'common.owner' | translate }}</label>\\n                <ng-select\\n                    id=\\\"owner\\\"\\n                    name=\\\"owner\\\"\\n                    [placeholder]=\\\"'common.enter-owner' | translate\\\"\\n                    [(ngModel)]=\\\"owner\\\"\\n                    #ownerInput=\\\"ngModel\\\"\\n                    [items]=\\\"legalEntitiesSteam | async\\\"\\n                    [typeahead]=\\\"ownerAutocomplete\\\"\\n                    [disabled]=\\\"item.id || fixateType\\\"\\n                >\\n                    <ng-template ng-label-tmp let-entry=\\\"item\\\">\\n                        {{ entry?.user.name }}\\n                        <small class=\\\"text-gray\\\">{{ entry?.user.email }}</small>\\n                    </ng-template>\\n                    <ng-template ng-option-tmp let-entry=\\\"item\\\">\\n                        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                            <user-avatar *ngIf=\\\"entry\\\" [user]=\\\"entry?.user\\\" size=\\\"sm\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n                            <div class=\\\"w-100\\\">\\n                                <div>{{ entry?.user.name }}</div>\\n                                <small class=\\\"text-gray\\\">{{ entry?.user.email }}</small>\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"ownerInput.invalid && (beneficiaryForm.submitted || ownerInput.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"ownerInput?.errors?.validateObject\\\">\\n                        {{ 'common.please-choose-owner' | translate }}.\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"!hideFields.includes('type')\\\" class=\\\"form-group\\\">\\n                <label for=\\\"type\\\">{{ 'common.type' | translate }}</label>\\n                <ng-select\\n                    name=\\\"type\\\"\\n                    [items]=\\\"beneficiaryTypes\\\"\\n                    [placeholder]=\\\"'common.select-type' | translate\\\"\\n                    [(ngModel)]=\\\"copy.type\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #type=\\\"ngModel\\\"\\n                    [disabled]=\\\"item.id || fixateType\\\"\\n                    required\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                        {{ item | startCase }}\\n                    </ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                        {{ item | startCase }}\\n                    </ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"type.invalid && (beneficiaryForm.submitted || type.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"type?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </ng-container>\\n        <div *ngIf=\\\"!hideFields.includes('method')\\\" class=\\\"form-group\\\">\\n            <label for=\\\"type\\\">{{ 'common.method' | translate }}</label>\\n            <ng-select\\n                name=\\\"method\\\"\\n                [items]=\\\"beneficiaryMethods\\\"\\n                [placeholder]=\\\"'common.select-method' | translate\\\"\\n                [(ngModel)]=\\\"copy.method\\\"\\n                [clearable]=\\\"false\\\"\\n                (change)=\\\"onChangeMethod($event)\\\"\\n                [disabled]=\\\"item.id || fixateType\\\"\\n                #method=\\\"ngModel\\\"\\n                required\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                    {{ item | uppercase }}\\n                </ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                    {{ item | uppercase }}\\n                </ng-template>\\n            </ng-select>\\n            <div *ngIf=\\\"method.invalid && (beneficiaryForm.submitted || method.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"method?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <ng-container *ngIf=\\\"copy.method\\\">\\n            <div class=\\\"form-group\\\" *ngIf=\\\"!hideFields.includes('currency')\\\">\\n                <label for=\\\"currency\\\">{{ 'common.currency' | translate }}</label>\\n                <ng-select\\n                    [items]=\\\"currencies\\\"\\n                    [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                    name=\\\"currency\\\"\\n                    id=\\\"currency\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [(ngModel)]=\\\"copy.currency\\\"\\n                    #currency=\\\"ngModel\\\"\\n                    required\\n                    [searchable]=\\\"false\\\"\\n                    [disabled]=\\\"item.id || fixateType\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\"> {{ item?.code }} - {{ item?.name }} </ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item?.code }} - {{ item?.name }} </ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"currency.invalid && (beneficiaryForm.submitted || currency.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"currency?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <beneficiary-details-form [beneficiary]=\\\"copy\\\" [requireAll]=\\\"false\\\" #beneficiaryDetailsForm></beneficiary-details-form>\\n        </ng-container>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger btn-w-sm e2e-delete-beneficiary-btn\\\"\\n            (click)=\\\"delete()\\\"\\n            *ngIf=\\\"item.id\\\"\\n            [ngClass]=\\\"{ loading: isDeleting }\\\"\\n            [disabled]=\\\"isSaving || isDeleting\\\"\\n        >\\n            {{ 'common.delete' | translate }}\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-w-sm\\\" [ngClass]=\\\"{ loading: isSaving }\\\" [disabled]=\\\"isSaving || isDeleting\\\">\\n            {{ (item.id ? 'common.update' : 'common.create') | translate }}\\n        </button>\\n    </div>\\n</form>\\n\";","import { Directive, Input } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms'\nimport isValid from 'date-fns/isValid'\n\n@Directive({\n    selector: '[useValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: ValidateDirective, multi: true }],\n})\nexport class ValidateDirective implements Validator {\n    @Input()\n    public useValidator: string\n\n    public validate(control: AbstractControl): { [key: string]: any } | null {\n        const value = control.value\n        if (!value) {\n            return null\n        }\n        switch (this.useValidator) {\n            case 'object':\n                return typeof value !== 'object' ? { validateObject: true } : null\n            case 'date':\n                if (typeof value === 'string') {\n                    const date = value.replace(/_/g, '').replace(/\\//g, '')\n                    if (\n                        date.length === 8 &&\n                        isValid(new Date(`${date.slice(4)}-${date.slice(2, 4)}-${date.slice(0, 2)}`))\n                    ) {\n                        return null\n                    }\n                }\n                return { validateDate: true }\n        }\n        return null\n    }\n}\n","export default \"<ng-container *ngIf=\\\"feeStream | async as fee\\\">\\n    <ng-container *ngIf=\\\"!isLoading; else loadingFee\\\">\\n        <span>\\n            <ng-container *ngIf=\\\"prefix && currency\\\">{{ currencySymbolMap[currency.code] }}</ng-container\\n            >{{ calculateAmount(fee) }} {{ currency?.code }}\\n        </span>\\n    </ng-container>\\n</ng-container>\\n<ng-template #loadingFee>\\n    <fa-icon [icon]=\\\"faCircleNotch\\\" [spin]=\\\"true\\\"></fa-icon>\\n</ng-template>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport formatDate from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\n\n@Pipe({ name: 'formatDate' })\nexport class FormatDatePipe implements PipeTransform {\n    public transform(value: any, format: string): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return formatDate(parseISO(value), format)\n    }\n}\n","export default \"<a\\n    href\\n    class=\\\"text-decoration-none\\\"\\n    (click)=\\\"$event.preventDefault(); $event.stopPropagation(); copy()\\\"\\n    ngbTooltip=\\\"Copied\\\"\\n    [triggers]=\\\"''\\\"\\n    #tooltip=\\\"ngbTooltip\\\"\\n>\\n    <ng-content></ng-content>\\n</a>\\n\";","export default \"<h6>{{ 'permission-select.payment-methods' | translate }}</h6>\\n<div *ngFor=\\\"let permission of paymentPermissions; let i = index\\\" class=\\\"custom-controls-stacked\\\">\\n    <label class=\\\"custom-control custom-switch\\\">\\n        <input\\n            type=\\\"checkbox\\\"\\n            name=\\\"payment-{{ i }}\\\"\\n            class=\\\"custom-control-input\\\"\\n            [value]=\\\"permission\\\"\\n            (change)=\\\"togglePaymentMethod(permission, $event.target.checked)\\\"\\n            [checked]=\\\"permissions.indexOf(permission) !== -1\\\"\\n            [disabled]=\\\"!['admin'].includes(session.user?.role)\\\"\\n        />\\n        <span class=\\\"custom-control-label font-md text-uppercase\\\">\\n            {{ getPermissionLabel(permission) }}\\n        </span>\\n    </label>\\n</div>\\n<h6 class=\\\"mt-3\\\">{{ 'common.features' | translate }}</h6>\\n<div *ngFor=\\\"let permission of featurePermissions; let i = index\\\" class=\\\"custom-controls-stacked\\\">\\n    <label class=\\\"custom-control custom-switch\\\">\\n        <input\\n            type=\\\"checkbox\\\"\\n            name=\\\"features-{{ i }}\\\"\\n            class=\\\"custom-control-input\\\"\\n            [value]=\\\"permission\\\"\\n            (change)=\\\"toggleFeature(permission, $event.target.checked)\\\"\\n            [checked]=\\\"permissions.indexOf(permission) !== -1\\\"\\n            [disabled]=\\\"!['admin'].includes(session.user?.role)\\\"\\n        />\\n        <span class=\\\"custom-control-label font-md\\\">\\n            {{ getPermissionLabel(permission) }}\\n        </span>\\n    </label>\\n</div>\\n\";","export default \"<form\\n    class=\\\"form-validation e2e-file-form\\\"\\n    #userFileForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"save()\\\"\\n    [ngClass]=\\\"{ 'ng-submitted': userFileForm.submitted }\\\"\\n    autocomplete=\\\"false\\\"\\n    novalidate\\n>\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'common.update-file' | translate }}</h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"type\\\">{{ 'common.type' | translate }}</label>\\n            <ng-select\\n                name=\\\"type\\\"\\n                [(ngModel)]=\\\"copy.type\\\"\\n                [items]=\\\"types\\\"\\n                [clearable]=\\\"false\\\"\\n                [searchable]=\\\"false\\\"\\n                [placeholder]=\\\"'common.select-type' | translate\\\"\\n                required\\n                #type=\\\"ngModel\\\"\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">{{ toStartCase(mapTypes(item)) }}</ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">{{ toStartCase(mapTypes(item)) }}</ng-template>\\n            </ng-select>\\n            <div *ngIf=\\\"type.invalid && (userFileForm.submitted || type.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"type?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-w-sm\\\" [ngClass]=\\\"{ loading: isSaving }\\\" [disabled]=\\\"isSaving\\\">\\n            {{ 'common.save' | translate }}\\n        </button>\\n    </div>\\n</form>\\n\";","import { countries as countryData, Country, CountryMap } from '@aerapass/country-data'\nimport { orderBy } from 'lodash'\n\nexport const countryMap: CountryMap = {}\nexport let countries: Country[] = []\n\nconst blockedCountries: string[] = [\n    'CU', // CUBA\n    'IR', // IRAN\n    'SD', // SUDAN\n    'SY', // SYRIA\n    'KP', // NORTH KOREA\n    'LY', // LIBYA\n    'VE', // VENEZUELA\n    'AF', // AFGHANISTAN\n    'YE', // YEMEN\n    'NI', // NICARAGUA\n    'ZW', // ZIMBABWE\n    'MM', // MYANMAR\n    'KH', // CAMBODIA\n    'BA', // BOSNIA-HERZEGOVINA\n    'IQ', // IRAQ\n    'SO', // SOMALIA\n    'SS', // SOUTH SUDAN\n]\n\nfor (const country of countryData.all) {\n    if (country.status === 'assigned' && country.countryCallingCodes.length > 0) {\n        countryMap[country.alpha2] = country\n        countries.push(country)\n    }\n}\n\n// filter blocked sanctions jurisdictions\ncountries = countries.filter(country => !blockedCountries.includes(country.alpha2))\n\nexport const countriesSortedByName = orderBy(countries, [country => country.name.toLowerCase()], ['asc'])\n\nexport { Country }\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { isBefore, parseISO } from 'date-fns'\n\n@Pipe({ name: 'isBefore' })\nexport class IsBeforePipe implements PipeTransform {\n    public transform(value: any): boolean {\n        if (typeof value !== 'string') {\n            return false\n        }\n        return isBefore(parseISO(value), new Date())\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.confirm-to-continue' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<form class=\\\"form-validation e2e-confirm-password\\\" #passwordForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"alert\\\">{{ alert }}</div>\\n        <div class=\\\"control-group\\\" *ngIf=\\\"!showTwoFactorForm; else twoFactorForm\\\">\\n            <label>{{ 'common.password' | translate }}</label>\\n            <input\\n                type=\\\"password\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"password\\\"\\n                [placeholder]=\\\"'common.enter-your-password' | translate\\\"\\n                [(ngModel)]=\\\"password\\\"\\n                [focus]=\\\"true\\\"\\n                required\\n            />\\n        </div>\\n        <ng-template #twoFactorForm>\\n            <div class=\\\"alert alert-info\\\">{{ 'common.two-factor-authentication-is-enabled' | translate }}</div>\\n            <div class=\\\"control-group\\\">\\n                <label>{{ 'common.two-factor-code' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"twoFactorCode\\\"\\n                    [placeholder]=\\\"'common.enter-your-code' | translate\\\"\\n                    number\\n                    [(ngModel)]=\\\"twoFactorCode\\\"\\n                    [focus]=\\\"true\\\"\\n                    required\\n                />\\n            </div>\\n        </ng-template>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-icon\\\" [ngClass]=\\\"{loading: isLoading}\\\" [disabled]=\\\"!canSubmit()\\\">\\n            <fa-icon class=\\\"btn-icon-symbol\\\" [icon]=\\\"faUnlockAlt\\\"></fa-icon>\\n            <span>{{ 'common.confirm' | translate }}</span>\\n        </button>\\n    </div>\\n</form>\\n\";","export class Timestamp { public static readonly stamp = '1657821951697' }","import BigNumber from 'bignumber.js'\nimport { environment } from 'src/environments/environment'\nimport { IUser, Transaction, Wallet } from './api-interfaces'\nimport { formatAccountNumber } from './common.mixin'\n\nexport function calculateFee(transaction: Transaction): string {\n    const { amount, precision } = fetchAmountAndPrecision(transaction)\n    let relativeFeeAmount = new BigNumber(amount).times(transaction.relativeFee)\n    // Only use this for preview\n    if (!transaction.id && transaction.settledAmount) {\n        // Factor fixed fee to relative fee computation\n        const fixedAmount = new BigNumber(amount).plus(transaction.fixedFee)\n        relativeFeeAmount = fixedAmount\n            .div(new BigNumber(1).minus(new BigNumber(transaction.relativeFee)))\n            .minus(fixedAmount)\n    }\n    const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n    return new BigNumber(transaction.fixedFee || 0).plus(relativeFeeAmount).toFixed(precision, roundingMode)\n}\n\n/**\n * Calculates amount which will be credited to the receiver wallet\n */\nexport function calculateCreditableAmount(transaction: Transaction): string {\n    const { amount, precision } = fetchAmountAndPrecision(transaction)\n    if (['card-order', 'account-fee', 'payment'].includes(transaction.type)) {\n        return new BigNumber(0).toFixed(precision, 1)\n    }\n    const total = new BigNumber(amount).minus(\n        !transaction.id && transaction.settledAmount ? 0 : calculateFee(transaction)\n    )\n    const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n    return (total.isGreaterThan(0) ? total : new BigNumber(0)).toFixed(precision, roundingMode)\n}\n\n/**\n * Calculates amount which will be deducted from the sender wallet\n */\nexport function calculateDeductableAmount(transaction: Transaction): string {\n    const { amount, precision } = fetchAmountAndPrecision(transaction)\n    if (['card-order', 'account-fee', 'payment'].includes(transaction.type)) {\n        return new BigNumber(calculateFee(transaction)).toFixed(precision, 1)\n    }\n    const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n    return new BigNumber(amount)\n        .plus(!transaction.id && transaction.settledAmount ? calculateFee(transaction) : 0)\n        .toFixed(precision, roundingMode)\n}\n\nfunction fetchAmountAndPrecision(transaction: Transaction): { amount: string; precision: number } {\n    const amount = transaction.amount || transaction.requestedAmount || '0'\n    let precision\n    if (transaction.precision !== undefined) {\n        precision = transaction.precision\n    } else if (transaction.currency) {\n        precision = transaction.currency.decimalPlaces\n    } else {\n        precision = 8\n    }\n    return { amount, precision }\n}\n\nexport function buildWalletOwnerAccountNumber(wallet: Wallet | null, fallback: string): string {\n    return wallet ? (wallet.user ? formatAccountNumber(wallet.user.accountNumber) : fallback) : 'Mint'\n}\n\nexport function isReceiver(transaction: Transaction, user: IUser | null): boolean {\n    return (\n        !!transaction.counterWallet &&\n        !!transaction.counterWallet.user &&\n        !!user &&\n        transaction.counterWallet.user.id === user.id\n    )\n}\n\nexport function isTransactionProcessable(transaction: Transaction): boolean {\n    return !transaction.automated || transaction.faulty\n}\n","import { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs'\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Local storage abstraction layer that handles browsers without an\n * implementation of localStorage and adds global error handling for storage issues\n */\nexport class StorageService {\n    public storageChange = new Subject<StorageEvent>()\n    /* fallback in memory map to simulate local storage */\n    private inMemoryLocalStorage = new Map<string, string>()\n\n    private useLocalStorage = this.isLocalStorageAvailable()\n\n    constructor() {\n        // add listener for storageEvents\n        window.addEventListener('storage', event => {\n            this.storageChange.next(event)\n        })\n    }\n\n    public getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key)\n        } else {\n            return this.inMemoryLocalStorage.has(key) ? this.inMemoryLocalStorage.get(key)! : null\n        }\n    }\n\n    public hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key) !== null\n        } else {\n            return this.inMemoryLocalStorage.has(key)\n        }\n    }\n\n    public setItem(key: string, value: string): void {\n        if (this.useLocalStorage) {\n            try {\n                localStorage.setItem(key, value)\n            } catch (error) {\n                // hide safari in-private browsing quota exceeded error and don't save to local storage\n                if (error.name !== 'QuotaExceededError') {\n                    throw error\n                }\n            }\n        } else {\n            const oldValue = this.inMemoryLocalStorage.get(key)\n            this.inMemoryLocalStorage.set(key, value)\n            this.storageChange.next(\n                new StorageEvent('change', { url: window.location.href, oldValue, newValue: value, key })\n            )\n        }\n    }\n\n    public removeItem(key: string): void {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(key)\n        } else {\n            const oldValue = this.inMemoryLocalStorage.get(key)\n            this.inMemoryLocalStorage.delete(key)\n            this.storageChange.next(\n                new StorageEvent('change', { url: window.location.href, oldValue, newValue: undefined, key })\n            )\n        }\n    }\n\n    private isLocalStorageAvailable(): boolean {\n        // taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n        const storage = window.localStorage\n        try {\n            const x = '__storage_test__'\n            storage.setItem(x, x)\n            storage.removeItem(x)\n            return true\n        } catch (error) {\n            return (\n                error instanceof DOMException &&\n                // everything except Firefox\n                (error.code === 22 ||\n                    // Firefox\n                    error.code === 1014 ||\n                    // test name field too, because code might not be present\n                    // everything except Firefox\n                    error.name === 'QuotaExceededError' ||\n                    // Firefox\n                    error.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                storage.length !== 0\n            )\n        }\n    }\n}\n","export default \"<a href (click)=\\\"$event.preventDefault(); $event.stopPropagation(); copy()\\\">\\n    <fa-icon [icon]=\\\"faCopy\\\" [ngbTooltip]=\\\"'Copied!'\\\" [triggers]=\\\"''\\\" #tooltip=\\\"ngbTooltip\\\"></fa-icon>\\n</a>\\n\";","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: MaxValidatorDirective,\n            multi: true,\n        },\n    ],\n})\nexport class MaxValidatorDirective implements Validator, OnChanges {\n    @Input()\n    public max: number\n    private onChanges: () => void\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.max) {\n            this.max = changes.max.currentValue\n            if (this.onChanges) {\n                this.onChanges()\n            }\n        }\n    }\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (this.max === undefined || this.max === null) {\n            return null\n        }\n        const required = Validators.required(control)\n        if (required !== null) {\n            return null\n        }\n        const v = +control.value\n        return v <= +this.max ? null : { actualValue: v, requiredValue: +this.max, max: true }\n    }\n\n    public registerOnValidatorChange(fn: () => void): void {\n        this.onChanges = fn\n    }\n}\n","export default \"<button\\n    class=\\\"btn btn-default\\\"\\n    type=\\\"button\\\"\\n    (click)=\\\"$event.stopPropagation(); copy()\\\"\\n    [ngbTooltip]=\\\"'common.copied' | translate\\\"\\n    [triggers]=\\\"''\\\"\\n    #tooltip=\\\"ngbTooltip\\\"\\n    [disabled]=\\\"disabled\\\"\\n>\\n    <fa-icon [icon]=\\\"faCopy\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n</button>\\n\";","export default \"<div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-borderless table-striped mb-0\\\" [ngClass]=\\\"borderless ? 'table-borderless' : 'table-bordered'\\\">\\n        <tbody>\\n            <tr *ngIf=\\\"showMethod\\\">\\n                <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.method' | translate }}</td>\\n                <td class=\\\"text-uppercase\\\">{{ beneficiary?.method }}</td>\\n            </tr>\\n            <tr>\\n                <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.beneficiary' | translate }}</td>\\n                <td>{{ beneficiary?.accountHolder }}</td>\\n            </tr>\\n            <tr>\\n                <td class=\\\"text-muted font-sm\\\">- {{ getAccountNumberLabel() }}</td>\\n                <td>{{ beneficiary?.accountNumber }}</td>\\n            </tr>\\n            <ng-container *ngIf=\\\"beneficiary.method === 'swift' || beneficiary.method === 'local'\\\">\\n                <tr>\\n                    <td class=\\\"text-muted font-sm\\\">- {{ 'common.address' | translate }}</td>\\n                    <td>\\n                        <postal-address [address]=\\\"beneficiary?.accountHolderAddress\\\"></postal-address>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.beneficiary-bank' | translate }}</td>\\n                    <td>{{ beneficiary?.bankName }}</td>\\n                </tr>\\n                <tr *ngIf=\\\"showSwift()\\\">\\n                    <td class=\\\"text-muted font-sm\\\">- {{ getSwiftLabel() }}</td>\\n                    <td>{{ beneficiary?.bankSwiftCode }}</td>\\n                </tr>\\n                <tr *ngIf=\\\"showRoutingNumber()\\\">\\n                    <td class=\\\"text-muted font-sm\\\">- {{ getRoutingNumberLabel() }}</td>\\n                    <td>{{ beneficiary?.routingNumber }}</td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"text-muted font-sm\\\">- {{ 'common.address' | translate }}</td>\\n                    <td>\\n                        <postal-address [address]=\\\"beneficiary?.bankAddress\\\"></postal-address>\\n                    </td>\\n                </tr>\\n                <ng-container *ngIf=\\\"beneficiary?.intermediateBankName\\\">\\n                    <tr>\\n                        <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.intermediate-bank' | translate }}</td>\\n                        <td>{{ beneficiary?.intermediateBankName }}</td>\\n                    </tr>\\n                    <tr>\\n                        <td class=\\\"text-muted font-sm\\\">- {{ 'common.swift-code' | translate }}</td>\\n                        <td>{{ beneficiary?.intermediateBankSwiftCode }}</td>\\n                    </tr>\\n                    <tr>\\n                        <td class=\\\"text-muted font-sm\\\">- {{ 'common.address' | translate }}</td>\\n                        <td>\\n                            <postal-address [address]=\\\"beneficiary?.intermediateBankAddress\\\"></postal-address>\\n                        </td>\\n                    </tr>\\n                </ng-container>\\n            </ng-container>\\n            <tr *ngIf=\\\"showCurrency\\\">\\n                <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.currency' | translate }}</td>\\n                <td class=\\\"text-uppercase\\\">{{ beneficiary?.currency?.code }}</td>\\n            </tr>\\n            <ng-container *ngIf=\\\"transaction\\\">\\n                <tr *ngIf=\\\"transaction.type === 'deposit'\\\">\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.amount' | translate }}</td>\\n                    <td class=\\\"text-primary\\\">\\n                        {{ transaction.amount | amount: transaction.currency?.decimalPlaces }} {{ transaction.currency?.code }}\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"transaction.type === 'withdrawal'\\\">\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.amount' | translate }}</td>\\n                    <td class=\\\"text-primary\\\">\\n                        {{ calculateCreditableAmount(transaction) | amount: transaction.currency?.decimalPlaces }}\\n                        {{ transaction.currency?.code }}\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"transaction.id\\\">\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.reference' | translate }}</td>\\n                    <td>\\n                        {{ transaction.id.substring(0, 7).toUpperCase() }}\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"p-0\\\" colspan=\\\"2\\\">\\n                        <div\\n                            *ngIf=\\\"showWarning && ['pending', 'processing'].includes(transaction.status) && transaction.type === 'deposit'\\\"\\n                            class=\\\"callout callout-danger whitespace-normal mb-0\\\"\\n                        >\\n                            <h6 class=\\\"text-danger mb-0\\\">{{ 'common.important-notice' | translate }}</h6>\\n                            <p>{{ 'common.if-you-specify' | translate }}</p>\\n                            <p *ngIf=\\\"appName === 'sgpmx'\\\">\\n                                {{ 'common.by-clicking-mark-as-paid' | translate }}\\n                            </p>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-container>\\n        </tbody>\\n    </table>\\n</div>\\n\";","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { finalize, flatMap, share } from 'rxjs/operators'\nimport { Authentication } from '../api-interfaces'\nimport { SessionService, TokenScope, User } from './session.service'\n\nexport interface TokenOptions {\n    scopes?: TokenScope[]\n    twoFactorCode?: string\n    email?: string\n    password?: string\n    refreshToken?: string\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TokenService {\n    private tokenRequest: Observable<Authentication> | null = null\n\n    constructor(private session: SessionService, private http: HttpClient) {}\n\n    public fetch(options: TokenOptions = {}): Observable<Authentication> {\n        if (!this.tokenRequest) {\n            const body: { [K: string]: string | string[] } = {}\n            const potentialEmail = options.email || (this.session.user && this.session.user.email)\n            const potentialRefreshToken =\n                options.refreshToken || (this.session.hasValidRefreshToken() && this.session.refreshToken!.id)\n            if (potentialEmail) {\n                body.email = potentialEmail\n            }\n            if (potentialRefreshToken) {\n                body.refreshToken = potentialRefreshToken\n            }\n            if (options.password) {\n                body.password = options.password\n            }\n            if (options.scopes) {\n                body.scopes = options.scopes\n            }\n            this.tokenRequest = this.http\n                .post<Authentication>('/token', body, {\n                    headers: options.twoFactorCode\n                        ? new HttpHeaders({ 'X-2FA-Code': options.twoFactorCode })\n                        : undefined,\n                })\n                .pipe(\n                    share(),\n                    finalize(() => {\n                        this.tokenRequest = null\n                    })\n                )\n        }\n        return this.tokenRequest\n    }\n\n    public refresh(options: TokenOptions = {}): Observable<User> {\n        return this.fetch(options).pipe(flatMap(({ refreshToken, token }) => this.session.update(refreshToken, token)))\n    }\n}\n","export default \"<a [routerLink]=\\\"['/admin/accounts/users', user.id]\\\">\\n    <span class=\\\"text-body\\\" placement=\\\"right\\\" [ngbTooltip]=\\\"user.accountNumber | accountNumber\\\">\\n        {{ user.name }}\\n    </span>\\n</a>\\n\";","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { merge, of, ReplaySubject, Subject } from 'rxjs'\nimport { filter, flatMap, map, switchMap } from 'rxjs/operators'\nimport { SessionService, UserEventType } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MailNotificationsService {\n    public unreadMessagesStream = new ReplaySubject<number>(1)\n    public onRead = new Subject<void>()\n    private notifyEvent = new Subject<void>()\n\n    constructor(private session: SessionService, private http: HttpClient) {\n        merge(this.notifyEvent, this.session.userEvent.pipe(filter(event => event.type === UserEventType.LOGIN)))\n            .pipe(\n                switchMap(() => this.session.userStream),\n                flatMap(user =>\n                    user\n                        ? this.http.head(`/users/${user.id}/mails`, {\n                              observe: 'response',\n                              params: new HttpParams().set('scope', 'unread'),\n                          })\n                        : of(null)\n                ),\n                map(response =>\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                )\n            )\n            .subscribe(count => {\n                this.unreadMessagesStream.next(count)\n            })\n    }\n\n    public notify(): void {\n        this.onRead.next()\n        this.notifyEvent.next()\n    }\n}\n","import { Injectable } from '@angular/core'\nimport {\n    faBan,\n    faCheckCircle,\n    faExclamationCircle,\n    faInfoCircle,\n    IconDefinition,\n} from '@fortawesome/pro-solid-svg-icons'\nimport { Subject } from 'rxjs'\n\nexport type ToastType = 'info' | 'warning' | 'success' | 'error'\n\nexport interface Toast {\n    id: number\n    type: ToastType\n    message: string\n    title?: string\n    icon: IconDefinition\n    timeout?: NodeJS.Timer\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ToastrService {\n    private toastSource = new Subject<Toast>()\n    private lastToastId = 0\n    private iconClasses: { [key in ToastType]: IconDefinition } = {\n        error: faBan,\n        warning: faExclamationCircle,\n        success: faCheckCircle,\n        info: faInfoCircle,\n    }\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    public toastPushed = this.toastSource.asObservable()\n\n    public log(type: ToastType, message: string, title?: string): void {\n        title = title || 'Server Message'\n        this.toastSource.next({\n            id: this.lastToastId++,\n            icon: this.iconClasses[type],\n            type,\n            message,\n            title,\n        })\n    }\n    public info(message: string, title?: string): void {\n        this.log('info', message, title)\n    }\n    public warning(message: string, title?: string): void {\n        this.log('warning', message, title)\n    }\n    public success(message: string, title?: string): void {\n        this.log('success', message, title)\n    }\n    public error(message: string, title?: string): void {\n        this.log('error', message, title)\n    }\n}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\nimport isAfter from 'date-fns/isAfter'\nimport isBefore from 'date-fns/isBefore'\nimport isValid from 'date-fns/isValid'\nimport subYears from 'date-fns/subYears'\nimport { formatMaskedDate } from '../user-details-form/user-details-form.component'\n\n@Directive({\n    selector: '[birthdayValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: BirthdayValidatorDirective, multi: true }],\n})\nexport class BirthdayValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (control.value) {\n            const date = formatMaskedDate(control.value)\n            if (!isValid(new Date(date))) {\n                return { invalidDate: true }\n            }\n            if (isBefore(new Date(date), new Date('1900-01-01'))) {\n                return { dateLongAgo: true }\n            }\n            if (isAfter(new Date(date), subYears(new Date(), 18))) {\n                return { dateInFuture: true }\n            }\n        }\n        return null\n    }\n}\n","import { Component } from '@angular/core'\n\n@Component({\n    selector: 'not-found',\n    templateUrl: 'not-found.component.html',\n})\nexport class NotFoundComponent {}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core'\nimport { StatusMessageComponent } from './status-message.component'\nimport { StatusMessageService } from './status-message.service'\n\n@Component({\n    selector: 'status-message-outlet',\n    template: '',\n})\n/* This component is only an outlet for the status message, so we don't have to add logic to all clients */\nexport class StatusMessageOutletComponent implements OnInit {\n    constructor(private statusMessage: StatusMessageService, private viewContainerRef: ViewContainerRef) {}\n\n    public ngOnInit(): void {\n        this.statusMessage.initializeListener(this.viewContainerRef, StatusMessageComponent)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { QueryEntity } from '@datorama/akita'\nimport BigNumber from 'bignumber.js'\nimport { orderBy } from 'lodash'\nimport { combineLatest, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { Wallet } from '../../common/api-interfaces'\nimport { SessionService } from '../../common/services/session.service'\nimport { convertCurrency } from '../currencies/currencies.mixin'\nimport { CurrenciesQuery } from '../currencies/currencies.query'\nimport { WalletsState, WalletsStore } from './wallets.store'\n\n@Injectable({ providedIn: 'root' })\nexport class WalletsQuery extends QueryEntity<WalletsState> {\n    /** Estimates the value in the user's preferred currency as well */\n    public balances$: Observable<(Wallet & { value: string; usdValue: string })[]> = combineLatest(\n        this.selectAll(),\n        this.currenciesQuery.selectAll(),\n        this.session.userStream\n    ).pipe(\n        map(([wallets, currencies, user]) => {\n            const transformed = wallets.map(wallet => ({\n                ...wallet,\n                value: convertCurrency(\n                    wallet.availableBalance,\n                    currencies.find(currency => currency.code === wallet.currency.code)!,\n                    currencies.find(currency => currency.code === user.preferredCurrency.code)!\n                ),\n                usdValue: new BigNumber(wallet.availableBalance).isGreaterThan(0)\n                    ? new BigNumber(\n                          convertCurrency(\n                              wallet.availableBalance,\n                              currencies.find(currency => currency.code === wallet.currency.code)!,\n                              currencies.find(currency => currency.code === 'USD')!\n                          )\n                      ).toFixed(2)\n                    : '0.00',\n            }))\n\n            // SGPMX only, always display USD, AU and AG\n            if (environment.appName === 'sgpmx') {\n                for (const currencyCode of ['USD', 'AG', 'AU']) {\n                    if (!wallets.find(wallet => wallet.currency.code === currencyCode)) {\n                        transformed.push({\n                            balance: new BigNumber(0).toFixed(8, 1),\n                            value: new BigNumber(0).toFixed(8, 1),\n                            currency: currencies.find(currency => currency.code === currencyCode),\n                        } as any)\n                    }\n                }\n            } else if (!wallets.find(wallet => wallet.currency.code === user.preferredCurrency.code)) {\n                // If no wallet of the preferred currency exists, create placeholder\n                transformed.push({\n                    balance: new BigNumber(0).toFixed(8, 1),\n                    value: new BigNumber(0).toFixed(8, 1),\n                    currency: currencies.find(currency => currency.code === user.preferredCurrency.code),\n                } as any)\n            }\n\n            // Sort alphabetically by currency name\n            return orderBy(transformed, [wallet => wallet.currency?.name.toLowerCase()], ['asc'])\n        })\n    )\n\n    /** If more than 4 wallets strip of 0 balance wallets */\n    public filteredBalances$ = this.balances$.pipe(\n        map(wallets => {\n            if (wallets.length > 4) {\n                let strippable = 0\n                return wallets.filter(wallet => {\n                    const hasZeroBlance = new BigNumber(wallet.balance).isEqualTo(0)\n                    if (hasZeroBlance) {\n                        strippable++\n                    }\n                    return !(hasZeroBlance && wallets.length - strippable >= 4)\n                })\n            }\n            return wallets\n        })\n    )\n\n    public totalBalance$ = this.balances$.pipe(\n        map(wallets => wallets.reduce((netWorth, wallet) => netWorth.plus(wallet.value), new BigNumber(0)).toFixed(2))\n    )\n\n    constructor(\n        protected store: WalletsStore,\n        private currenciesQuery: CurrenciesQuery,\n        private session: SessionService\n    ) {\n        super(store)\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport parseISO from 'date-fns/parseISO'\n\n@Pipe({ name: 'formatDistanceToNow' })\nexport class FormatDistanceToNowPipe implements PipeTransform {\n    public transform(value: any, includeSeconds = false, addSuffix = false): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return formatDistanceToNow(parseISO(value), { includeSeconds, addSuffix })\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faEnvelope } from '@fortawesome/pro-solid-svg-icons'\nimport { combineLatest, Subject, Subscription } from 'rxjs'\nimport { debounceTime, switchMap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport * as striptags from 'striptags'\nimport { Mail, Paginated } from '../../../../common/api-interfaces'\nimport { MailNotificationsService } from '../../../../common/services/mail-notifications.service'\nimport { SessionService } from '../../../../common/services/session.service'\n\n@Component({\n    selector: 'header-mailbox',\n    templateUrl: 'header-mailbox.component.html',\n})\nexport class HeaderMailboxComponent implements OnInit, OnDestroy {\n    public striptags = striptags\n    public faEnvelope = faEnvelope\n    public mails: Mail[] = []\n    public count = 0\n    public displayName = environment.displayName\n    private subscriptions = new Subscription()\n    private fetchEvent = new Subject<void>()\n\n    constructor(\n        public session: SessionService,\n        private http: HttpClient,\n        public router: Router,\n        private mailNotifications: MailNotificationsService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            combineLatest(this.fetchEvent, this.session.userStream)\n                .pipe(\n                    debounceTime(600),\n                    switchMap(([_, user]) =>\n                        this.http.get<Paginated<Mail>>(`/users/${user.id}/mails`, {\n                            params: new HttpParams()\n                                .set('limit', 8 + '')\n                                .set('offset', 0 + '')\n                                .set('filter.read', 'false'),\n                        })\n                    )\n                )\n                .subscribe(({ data, meta }) => {\n                    this.mails = data\n                    this.count = meta.count\n                })\n        )\n        this.subscriptions.add(this.mailNotifications.onRead.subscribe(() => this.fetchEvent.next()))\n        this.fetchEvent.next()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n}\n","export default \"<div ngbDropdown placement=\\\"bottom-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1\\\" ngbDropdownToggle>\\n        <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faEnvelope\\\"></fa-icon>\\n        <span class=\\\"badge badge-primary badge-pill\\\" *ngIf=\\\"count > 0\\\">\\n            {{ count | number: '1.0-0' }}\\n        </span>\\n    </button>\\n    <div class=\\\"dropdown-menu-w-lg dropdown-menu-right\\\" ngbDropdownMenu>\\n        <div class=\\\"dropdown-header text-center\\\">\\n            {{ 'common.you-have' | translate }} <strong class=\\\"text-primary\\\">{{ count }}</strong>\\n            {{ (count !== 1 ? 'common.unread-mails' : 'common.unread-mail') | translate }}\\n        </div>\\n        <div class=\\\"dropdown-divider mb-0\\\"></div>\\n        <div class=\\\"scrollable\\\">\\n            <a [routerLink]=\\\"['/mailbox', mail.id]\\\" class=\\\"dropdown-item media d-flex align-items-center e2e-header-mail\\\" *ngFor=\\\"let mail of mails\\\">\\n                <div class=\\\"mr-3\\\">\\n                    <user-avatar size=\\\"sm\\\" [user]=\\\"null\\\"></user-avatar>\\n                </div>\\n                <div class=\\\"media-body\\\">\\n                    <small class=\\\"text-muted\\\">\\n                        {{ displayName + ' Team' }}\\n                    </small>\\n                    <small class=\\\"text-muted float-right mt-q\\\" *ngIf=\\\"mail.sentAt\\\"\\n                        >{{ mail.sentAt | formatDistanceToNow }} {{ 'common.ago' | translate }}</small\\n                    >\\n                    <div class=\\\"text-truncate font-weight-bold\\\">{{ mail.subject }}</div>\\n                    <div class=\\\"small text-muted\\\" *ngIf=\\\"mail.content\\\">{{ striptags(mail.content) | truncate: true:60 }}</div>\\n                </div>\\n            </a>\\n        </div>\\n        <div class=\\\"dropdown-item text-center bg-white py-3\\\" *ngIf=\\\"mails.length === 0\\\">\\n            <span class=\\\"text-muted\\\">{{ 'header-mailbox.no-unread-mails' | translate }}</span>\\n        </div>\\n        <div class=\\\"dropdown-divider mt-0\\\"></div>\\n        <a class=\\\"dropdown-item text-center\\\" ngbDropdownItem [routerLink]=\\\"['/mailbox']\\\">{{ 'common.view-all' | translate }}</a>\\n    </div>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { ICurrency, Paginated } from '../../common/api-interfaces'\nimport { CurrenciesStore } from './currencies.store'\n\n@Injectable({ providedIn: 'root' })\nexport class CurrenciesService {\n    constructor(protected store: CurrenciesStore, private http: HttpClient) {}\n\n    public fetchAsObservable(): Observable<Paginated<ICurrency>> {\n        return this.http.get<Paginated<ICurrency>>('/currencies', { params: { limit: 100 + '' } }).pipe(\n            tap(response => {\n                this.store.set(response.data)\n            })\n        )\n    }\n\n    public fetch(): void {\n        this.fetchAsObservable().subscribe(() => undefined)\n    }\n}\n","export default \"<div class=\\\"status-message\\\">\\n    <span [innerHTML]=\\\"statusMessage.message || ''\\\"></span>\\n    <a href=\\\"https://status.aerapass.com\\\" class=\\\"btn btn-outline-white btn-sm mx-3\\\" rel=\\\"noopener\\\" target=\\\"_blank\\\">Website Status</a>\\n</div>\\n\";","export default \"<div class=\\\"sidebar\\\">\\n    <nav class=\\\"navbar navbar-light navbar-dashboard\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\"></a>\\n        <ul class=\\\"nav navbar-nav ml-auto d-lg-none\\\">\\n            <li class=\\\"nav-item d-flex align-items-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" (click)=\\\"closeMobileNav()\\\">\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faTimes\\\"></fa-icon>\\n                </button>\\n            </li>\\n        </ul>\\n    </nav>\\n    <nav class=\\\"sidebar-nav\\\">\\n        <ul class=\\\"nav\\\">\\n            <ng-container *ngIf=\\\"!isActive('/admin')\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/dashboard') || isActive('/mailbox') }\\\"\\n                        [routerLink]=\\\"['/dashboard']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.dashboard' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faDesktop\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.dashboard' | translate }}</span>\\n                    </a>\\n                </li>\\n                <ng-container *ngIf=\\\"appName !== 'sgpmx'; else sgpmxTemplate\\\">\\n                    <li class=\\\"nav-heading\\\">{{ 'menu.manage' | translate }}</li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/transactions') }\\\"\\n                            [routerLink]=\\\"['/transactions']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.transactions' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBook\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.transactions' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('cards')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/cards') }\\\"\\n                            [routerLink]=\\\"['/cards']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'menu.cards' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCreditCardFront\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'menu.cards' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('spot-trades')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/spot-trading') }\\\"\\n                            [routerLink]=\\\"['/spot-trading']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.spot-trading' | translate | titlecase\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faChartLine\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'common.spot-trading' | translate | titlecase }}</span>\\n                        </a>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/discover'), open: isOpen('discover') }\\\"\\n                        *ngIf=\\\"session.user.hasPermission('marketplaces')\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('discover'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.discover' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCompass\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.discover' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('discover')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/discover', true) || isActive('/discover/:productSlug') }\\\"\\n                                    [routerLink]=\\\"['/discover']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.overview' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.overview' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/discover/investments') }\\\"\\n                                    [routerLink]=\\\"['/discover/investments']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'menu.investments' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.investments' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/services'), open: isOpen('services') }\\\"\\n                        *ngIf=\\\"session.user.hasPermission('invoices') || session.user.hasPermission('conversions')\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('services'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.services' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faToolbox\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.services' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('services')\\\">\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('conversions')\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/services/conversions') }\\\"\\n                                    [routerLink]=\\\"['/services/conversions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.conversions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.conversions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('invoices')\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/services/invoices') }\\\"\\n                                    [routerLink]=\\\"['/services/invoices']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.invoices' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.invoices' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ng-container>\\n                <ng-template #sgpmxTemplate>\\n                    <li class=\\\"nav-heading\\\">{{ 'common.bullion' | translate }}</li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('trades')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/buy-and-sell', true) }\\\"\\n                            [routerLink]=\\\"['/buy-and-sell']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.buy-and-sell' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBalanceScale\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'common.buy' | translate }} &amp; {{ 'common.sell' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/transfer', true) }\\\"\\n                            [routerLink]=\\\"['/transfer']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.transfer' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faExchange\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'common.transfer' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user?.hasPermission('redeem')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/redeem', true) }\\\"\\n                            [routerLink]=\\\"['/redeem']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.redeem' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBox\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.redeem' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-heading\\\">{{ 'common.cash' | translate }}</li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/deposit') }\\\"\\n                            [routerLink]=\\\"['/deposit']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.deposit' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.deposit' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/withdraw') }\\\"\\n                            [routerLink]=\\\"['/withdraw']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.withdraw' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.withdraw' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('cards')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/cards') }\\\"\\n                            [routerLink]=\\\"['/cards']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.cards' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCreditCardFront\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'menu.cards' | translate }}</span>\\n                        </a>\\n                    </li>\\n                </ng-template>\\n                <li class=\\\"nav-heading\\\">{{ 'menu.personal' | translate }}</li>\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/account/profile') }\\\"\\n                        [routerLink]=\\\"['/account/profile']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.profile' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faUser\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.profile' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.type === 'business'\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/organization') }\\\"\\n                        [routerLink]=\\\"['/organization']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'menu.organization' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faSitemap\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.organization' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/account/security') }\\\"\\n                        [routerLink]=\\\"['/account/security']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.security' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faShieldAlt\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.security' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/account/billing') }\\\"\\n                        [routerLink]=\\\"['/account/billing']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.billing' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faReceipt\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.billing' | translate }}</span>\\n                    </a>\\n                </li>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"isActive('admin')\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/dashboard') }\\\"\\n                        [routerLink]=\\\"['/admin/dashboard']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.dashboard' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faDesktop\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.dashboard' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\" *ngIf=\\\"['admin'].includes(session.user?.role)\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/alerts') }\\\"\\n                        [routerLink]=\\\"['/admin/alerts']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.alerts' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBell\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.alerts' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-heading\\\">{{ 'common.operations' | translate }}</li>\\n                <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/accounts'), open: isOpen('accounts') }\\\">\\n                    <a href class=\\\"nav-link\\\" (click)=\\\"toggleMenu('accounts'); $event.preventDefault()\\\" placement=\\\"right\\\" ngbTooltip=\\\"Accounts\\\">\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faUser\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                        <span>{{ 'common.accounts' | translate }}</span>\\n                        <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                    </a>\\n                    <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('accounts')\\\">\\n                        <li class=\\\"nav-item\\\">\\n                            <a\\n                                class=\\\"nav-link\\\"\\n                                [ngClass]=\\\"{ active: isActive('/admin/accounts/users') }\\\"\\n                                [routerLink]=\\\"['/admin/accounts/users']\\\"\\n                                placement=\\\"right\\\"\\n                                [ngbTooltip]=\\\"'common.users' | translate\\\"\\n                            >\\n                                <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                ><span>{{ 'common.users' | translate }}</span>\\n                            </a>\\n                        </li>\\n                        <li class=\\\"nav-item\\\" *ngIf=\\\"['admin', 'licensee'].includes(session.user?.role)\\\">\\n                            <a\\n                                class=\\\"nav-link\\\"\\n                                [ngClass]=\\\"{ active: isActive('/admin/accounts/funds-under-management') }\\\"\\n                                [routerLink]=\\\"['/admin/accounts/funds-under-management']\\\"\\n                                placement=\\\"right\\\"\\n                                ngbTooltip=\\\"FUM\\\"\\n                            >\\n                                <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>FUM</span>\\n                            </a>\\n                        </li>\\n                    </ul>\\n                </li>\\n                <ng-container *ngIf=\\\"['admin', 'licensee'].includes(session.user?.role)\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/admin/transactions') }\\\"\\n                            [routerLink]=\\\"['/admin/transactions']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.transactions' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBook\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.transactions' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/cards'), open: isOpen('cards') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('cards'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'menu.cards' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCreditCardFront\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.cards' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('cards')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/cards/programs') }\\\"\\n                                    [routerLink]=\\\"['/admin/cards/programs']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.programs' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.programs' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/cards/orders') }\\\"\\n                                    [routerLink]=\\\"['/admin/cards/orders']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.orders' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.orders' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/cards/cards') }\\\"\\n                                    [routerLink]=\\\"['/admin/cards/cards']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'menu.cards' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.cards' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/investments'), open: isOpen('investments') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('investments'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'menu.investments' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faChartNetwork\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.investments' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('investments')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/investments/products') }\\\"\\n                                    [routerLink]=\\\"['/admin/investments/products']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'products.products' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'products.products' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/investments/allocations') }\\\"\\n                                    [routerLink]=\\\"['/admin/investments/allocations']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.allocations' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.allocations' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/services'), open: isOpen('services') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('services'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.services' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faToolbox\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.services' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('services')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/conversions') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/conversions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.conversions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.conversions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/invoices') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/invoices']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.invoices' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.invoices' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/trades') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/trades']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.trades' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.trades' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/spot-trading') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/spot-trading']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.spot-trading' | translate | titlecase\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.spot-trading' | translate | titlecase }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/redemptions') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/redemptions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.redemptions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.redemptions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li class=\\\"nav-heading\\\">{{ 'common.environment' | translate }}</li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('admin.platform'), open: isOpen('platform') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('platform'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.platform' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faUniversity\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'common.platform' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('platform')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/currencies') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/currencies']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.currencies' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.currencies' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"['admin', 'licensee'].includes(session.user?.role)\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/deposit-instructions') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/deposit-instructions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.deposit-instructions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.deposit-instructions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/fee-schedule') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/fee-schedule']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.fee-schedule' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.fee-schedule' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"['admin'].includes(session.user?.role)\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/triggers') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/triggers']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.triggers' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.triggers' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/referrers') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/referrers']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.referrers' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.referrers' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/settings'), open: isOpen('settings') }\\\"\\n                        *ngIf=\\\"['admin'].includes(session.user?.role)\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('settings'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.settings' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCog\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'common.settings' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('settings')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/settings/api-tokens') }\\\"\\n                                    [routerLink]=\\\"['/admin/settings/api-tokens']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.api-tokens' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.api-tokens' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/settings/terms') }\\\"\\n                                    [routerLink]=\\\"['/admin/settings/terms']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.terms' | translate | titlecase\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.terms' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/settings/other') }\\\"\\n                                    [routerLink]=\\\"['/admin/settings/other']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.other' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.other' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/monitoring'), open: isOpen('monitoring') }\\\"\\n                        *ngIf=\\\"['admin'].includes(session.user?.role)\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('monitoring'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.monitoring' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faChartBar\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'common.monitoring' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('monitoring')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/monitoring/tasks') }\\\"\\n                                    [routerLink]=\\\"['/admin/monitoring/tasks']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.tasks' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.tasks' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ng-container>\\n            </ng-container>\\n        </ul>\\n    </nav>\\n    <menu-profile class=\\\"sidebar-profile\\\" *ngIf=\\\"session.isAuthenticated()\\\"></menu-profile>\\n</div>\\n\";","import { Directive, EventEmitter, Input, Output } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms'\nconst stringEntropy = require('fast-password-entropy/es5')\n\n@Directive({\n    selector: '[passwordStrength]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: PasswordStrengthDirective, multi: true }],\n})\nexport class PasswordStrengthDirective implements Validator {\n    /** Required entropy bits of password string */\n    @Input()\n    public passwordStrength: number\n    @Output()\n    public readonly onEntropyChange = new EventEmitter<number>()\n\n    public validate(control: AbstractControl): { weakPassword: boolean } | null {\n        const entropy = stringEntropy(control.value)\n        this.onEntropyChange.emit(entropy)\n        return entropy < this.passwordStrength ? { weakPassword: true } : null\n    }\n}\n","import { Component, Input } from '@angular/core'\nimport { IAddress, IUser } from '../api-interfaces'\nimport { countryMap } from '../countries'\n\n@Component({\n    selector: 'postal-address',\n    templateUrl: 'postal-address.component.html',\n})\nexport class PostalAddressComponent {\n    public countryMap = countryMap\n    @Input()\n    public user?: IUser\n    @Input()\n    public address: IAddress\n    @Input()\n    public theme: 'input'\n}\n","import { Injectable } from '@angular/core'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CopierService {\n    private fakeElem: HTMLTextAreaElement | null\n\n    public copyText(text: string): boolean {\n        try {\n            this.createFake(text)\n            return document.execCommand('copy')\n        } catch {\n            return false\n        } finally {\n            this.removeFake()\n        }\n    }\n\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     */\n    private createFake(text: string): void {\n        // Create a fake element to hold the contents to copy\n        this.fakeElem = document.createElement('textarea')\n        // Prevent zooming on iOS\n        this.fakeElem.style.fontSize = '12pt'\n        // Reset box model\n        this.fakeElem.style.border = '0'\n        this.fakeElem.style.padding = '0'\n        this.fakeElem.style.margin = '0'\n        // Move element out of screen horizontally\n        this.fakeElem.style.position = 'absolute'\n        this.fakeElem.style.left = '-9999px'\n        // Move element to the same position vertically\n        const yPosition = window.pageYOffset || (document.documentElement && document.documentElement.scrollTop) || 0\n        this.fakeElem.style.top = yPosition + 'px'\n        this.fakeElem.setAttribute('readonly', '')\n        this.fakeElem.value = text\n        document.body.appendChild(this.fakeElem)\n        this.fakeElem.select()\n        this.fakeElem.setSelectionRange(0, this.fakeElem.value.length)\n    }\n\n    private removeFake(): void {\n        if (this.fakeElem) {\n            document.body.removeChild(this.fakeElem)\n            this.fakeElem = null\n        }\n    }\n}\n","import { Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'circle-spinner',\n    templateUrl: 'circle-spinner.component.html',\n    styleUrls: ['circle-spinner.component.scss'],\n})\nexport class CircleSpinnerComponent {\n    @Input() public theme: string\n}\n","import { isPlatformBrowser } from '@angular/common'\nimport { Component, HostListener, Inject, OnDestroy, OnInit, PLATFORM_ID } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { forkJoin, interval, merge, Subscription } from 'rxjs'\nimport { filter, startWith, switchMap } from 'rxjs/operators'\nimport { LogoutTimerService } from './app/core/logout-timer/logout-timer.service'\nimport { MenuService } from './app/core/menu/menu.service'\nimport { GoogleAnalyticsService } from './common/services/google-analytics.service'\nimport { IntercomService } from './common/services/intercom.service'\nimport { SessionService, UserEventType } from './common/services/session.service'\nimport { ViewportService } from './common/services/viewport.service'\nimport { CurrenciesService } from './store/currencies/currencies.service'\nimport { WalletsService } from './store/wallets/wallets.service'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    private polling: Subscription\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        public menuService: MenuService,\n        public translate: TranslateService,\n        private intercom: IntercomService,\n        private analytics: GoogleAnalyticsService,\n        private logoutTimer: LogoutTimerService,\n        private viewport: ViewportService,\n        private router: Router,\n        private ngbModal: NgbModal,\n        private currenciesService: CurrenciesService,\n        private walletsService: WalletsService,\n        @Inject(PLATFORM_ID) private platformId: Record<string, any>\n    ) {\n        translate.addLangs(['en', 'kr'])\n        translate.setDefaultLang('en')\n\n        const browserLang = translate.getBrowserLang()\n        translate.use(browserLang.match(/en|kr/) ? browserLang : 'en')\n\n        const lastLanguageUsed = localStorage.getItem('lang')\n        if (lastLanguageUsed) {\n            translate.use(lastLanguageUsed)\n        }\n    }\n\n    public ngOnInit(): void {\n        if (isPlatformBrowser(this.platformId)) {\n            this.logoutTimer.init()\n            this.intercom.boot()\n            this.analytics.init()\n            this.viewport.update()\n        }\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n            if (this.ngbModal.hasOpenModals()) {\n                this.ngbModal.dismissAll()\n            }\n        })\n        this.subscriptions.add(\n            this.session.userEvent.subscribe(event => {\n                if (event.type === UserEventType.LOGIN) {\n                    this.polling = merge(\n                        interval(1000 * 10).pipe(\n                            startWith(0),\n                            switchMap(() => forkJoin([this.walletsService.fetchAsObservable()]))\n                        ),\n                        interval(1000 * 60 * 2).pipe(\n                            startWith(0),\n                            switchMap(() => forkJoin([this.currenciesService.fetchAsObservable()]))\n                        )\n                    ).subscribe(() => undefined)\n                } else if (event.type === UserEventType.LOGOUT) {\n                    if (this.polling && !this.polling.closed) {\n                        this.polling.unsubscribe()\n                    }\n                    if (!this.router.isActive('/login', false) && !this.router.getCurrentNavigation()) {\n                        this.router.navigate(['/login'])\n                    }\n                }\n            })\n        )\n        // TODO: remove when session service has been refactored\n        if (this.session.hasValidRefreshToken()) {\n            this.session.update().subscribe(() => undefined)\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    @HostListener('window:resize')\n    public onResize(): void {\n        this.viewport.update()\n    }\n\n    public showHeader(): boolean {\n        return (\n            this.session.isAuthenticated() &&\n            !['/login', '/register', '/verify'].some(state => this.router.isActive(state, false))\n        )\n    }\n\n    public showSidebar(): boolean {\n        return (\n            this.session.isAuthenticated() &&\n            !['/login', '/register', '/verify'].some(state => this.router.isActive(state, false))\n        )\n    }\n\n    public showFooter(): boolean {\n        return (\n            this.session.isAuthenticated() &&\n            !['/login', '/register', '/admin', '/verify'].some(state => this.router.isActive(state, false))\n        )\n    }\n}\n","export default \"<ng-container *ngIf=\\\"user === undefined; else userTemplate\\\">\\n    <ng-container *ngTemplateOutlet=\\\"mint\\\"></ng-container>\\n</ng-container>\\n<ng-template #userTemplate>\\n    <ng-container *ngIf=\\\"user; else platform\\\">\\n        <div class=\\\"avatar\\\" [ngClass]=\\\"styles\\\">\\n            <img [src]=\\\"avatarUrl | safeResourceUrl\\\" class=\\\"img-avatar\\\" />\\n            <span class=\\\"avatar-status badge-success\\\" *ngIf=\\\"online\\\"></span>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n<ng-template #mint>\\n    <!-- htmllint attr-bans=\\\"[]\\\" -->\\n    <div class=\\\"avatar\\\" [ngClass]=\\\"styles\\\">\\n        <svg\\n            class=\\\"img-avatar\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            xml:space=\\\"preserve\\\"\\n            text-rendering=\\\"optimizeLegibility\\\"\\n            style=\\\"\\n                -webkit-font-smoothing: auto;\\n                shape-rendering: geometricPrecision;\\n                image-rendering: optimizeQuality;\\n                fill-rule: evenodd;\\n                clip-rule: evenodd;\\n            \\\"\\n            viewBox=\\\"0 0 120 120\\\"\\n        >\\n            <g>\\n                <rect [attr.fill]=\\\"successColor\\\" width=\\\"120\\\" height=\\\"120\\\"></rect>\\n                <text font-weight=\\\"300\\\" font-size=\\\"3.125em\\\" font-family=\\\"sans-serif\\\" fill=\\\"#ffffff\\\" x=\\\"50%\\\" y=\\\"50%\\\" text-anchor=\\\"middle\\\" dy=\\\"0.35em\\\">\\n                    MI\\n                </text>\\n            </g>\\n        </svg>\\n    </div>\\n    <!-- htmllint attr-bans=\\\"$previous\\\" -->\\n</ng-template>\\n<ng-template #platform>\\n    <!-- htmllint attr-bans=\\\"[]\\\" -->\\n    <div class=\\\"avatar\\\" [ngClass]=\\\"styles\\\">\\n        <svg\\n            class=\\\"img-avatar\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            xml:space=\\\"preserve\\\"\\n            text-rendering=\\\"optimizeLegibility\\\"\\n            style=\\\"\\n                -webkit-font-smoothing: auto;\\n                shape-rendering: geometricPrecision;\\n                image-rendering: optimizeQuality;\\n                fill-rule: evenodd;\\n                clip-rule: evenodd;\\n            \\\"\\n            viewBox=\\\"0 0 120 120\\\"\\n        >\\n            <g>\\n                <rect [attr.fill]=\\\"primaryColor\\\" width=\\\"120\\\" height=\\\"120\\\"></rect>\\n                <text font-weight=\\\"300\\\" font-size=\\\"3.125em\\\" font-family=\\\"sans-serif\\\" fill=\\\"#ffffff\\\" x=\\\"50%\\\" y=\\\"50%\\\" text-anchor=\\\"middle\\\" dy=\\\"0.35em\\\">\\n                    {{ appInitials }}\\n                </text>\\n            </g>\\n        </svg>\\n    </div>\\n    <!-- htmllint attr-bans=\\\"$previous\\\" -->\\n</ng-template>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { faArrowRight, faPaperPlane, faPhoneLaptop, faReceipt, faUniversity } from '@fortawesome/pro-light-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subject, Subscription } from 'rxjs'\nimport { switchMap } from 'rxjs/operators'\nimport { IBeneficiary, Transaction } from '../api-interfaces'\n\n@Component({\n    selector: 'deposit-instruction',\n    templateUrl: 'deposit-instruction.component.html',\n})\nexport class DepositInstructionComponent implements OnInit, OnDestroy {\n    @Input()\n    public transaction: Transaction\n\n    public isLoading = false\n    public faPhoneLaptop = faPhoneLaptop\n    public faPaperPlane = faPaperPlane\n    public faReceipt = faReceipt\n    public faUniversity = faUniversity\n    public faArrowRight = faArrowRight\n\n    private fetchBeneficiaryEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(private http: HttpClient, public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.fetchBeneficiaryEvent\n                .pipe(\n                    switchMap(() => this.http.get<IBeneficiary>(`/beneficiaries/${this.transaction.beneficiary!.id}`))\n                )\n                .subscribe(beneficiary => {\n                    this.transaction.beneficiary = beneficiary\n                })\n        )\n        this.fetchBeneficiaryEvent.next()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n}\n","export default \"<div class=\\\"d-flex align-items-center\\\">\\n    <ng-container *ngIf=\\\"user === undefined; else userTemplate\\\">\\n        <ng-container *ngTemplateOutlet=\\\"mint\\\"></ng-container>\\n    </ng-container>\\n</div>\\n<ng-template #userTemplate>\\n    <ng-container *ngIf=\\\"user; else platform\\\">\\n        <a href (click)=\\\"handleClick($event, user.id)\\\">\\n            <ng-template #tooltipContent>\\n                <span>{{ user.name }}</span> <br />\\n                <span>{{ user.email }} </span>\\n            </ng-template>\\n            <user-avatar [user]=\\\"user\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\" [ngbTooltip]=\\\"tooltipContent\\\" [container]=\\\"'body'\\\"> </user-avatar>\\n        </a>\\n        <div>\\n            <span>\\n                {{ user.name | truncate: true:maxCharacters:'..' }}\\n                <span\\n                    class=\\\"badge text-capitalize\\\"\\n                    [ngClass]=\\\"{\\n                        'badge-primary': user.role === 'admin',\\n                        'badge-success': user.role === 'licensee',\\n                        'badge-warning': user.role === 'support'\\n                    }\\\"\\n                    *ngIf=\\\"displayBadges && user.role\\\"\\n                >\\n                    {{ user.role }}\\n                </span>\\n                <a\\n                    href\\n                    [routerLink]=\\\"['/admin/accounts/users', user!.association?.id]\\\"\\n                    [ngbTooltip]=\\\"association\\\"\\n                    [disableTooltip]=\\\"!user.isManaged\\\"\\n                    placement=\\\"right\\\"\\n                    *ngIf=\\\"user.isManaged\\\"\\n                >\\n                    <span class=\\\"text-capitalize badge badge-lg badge-success\\\">{{ 'common.managed' | translate }}</span>\\n                </a>\\n            </span>\\n            <div class=\\\"text-muted font-sm\\\" *ngIf=\\\"displayAccountNumber\\\">\\n                {{ user.accountNumber | accountNumber }}\\n            </div>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n<ng-template #mint>\\n    <user-avatar [user]=\\\"user\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\"> </user-avatar>\\n    <div>\\n        <span>{{ 'common.mint' | translate }}</span>\\n        <div class=\\\"text-muted font-sm\\\" *ngIf=\\\"displayAccountNumber\\\">@{{ 'common.mint' | translate | lowercase }}</div>\\n    </div>\\n</ng-template>\\n<ng-template #platform>\\n    <user-avatar [user]=\\\"user\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\"> </user-avatar>\\n    <div>\\n        <span>{{ displayName }}</span>\\n        <div class=\\\"text-muted font-sm\\\" *ngIf=\\\"displayAccountNumber\\\">@{{ appName }}</div>\\n    </div>\\n</ng-template>\\n<ng-template #association>\\n    <div *ngIf=\\\"user.association\\\">\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n            <a [routerLink]=\\\"['/admin/accounts/users', user!.association?.id]\\\">\\n                <user-avatar [user]=\\\"user.association\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\"> </user-avatar>\\n            </a>\\n            <div>\\n                <span>\\n                    {{ user.association?.name }}\\n                </span>\\n                <div class=\\\"text-muted font-sm\\\">\\n                    {{ user.association?.accountNumber | accountNumber }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core'\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita'\nimport { Wallet } from '../../common/api-interfaces'\n\nexport interface WalletsState extends EntityState<Wallet, string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'wallets' })\nexport class WalletsStore extends EntityStore<WalletsState> {\n    constructor() {\n        super()\n    }\n}\n","import BigNumber from 'bignumber.js'\nimport * as Color from 'color'\nimport { ICurrency, IFee } from '../../common/api-interfaces'\n\nconst style = getComputedStyle(document.body)\nconst color = Color(style.getPropertyValue('--primary').trim())\n\nexport function getCurrencyColor(currency: ICurrency, factor = 0): string {\n    return currency.color || color.lighten((factor % 7) * 0.08).hex()\n}\n\nexport function convertCurrency(\n    amount: string | number,\n    baseCurrency: ICurrency,\n    counterCurrency: ICurrency,\n    spreadFee?: IFee,\n    spreadUp = true\n): string {\n    let exchangeRate = calculateExchangeRate(baseCurrency, counterCurrency)\n    if (baseCurrency.code !== counterCurrency.code && spreadFee && spreadFee.relative) {\n        if (spreadUp) {\n            exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).plus(spreadFee.relative))\n        } else {\n            exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).minus(spreadFee.relative))\n        }\n    }\n    return new BigNumber(amount).times(exchangeRate).toFixed(8, 1)\n}\n\nexport function calculateExchangeRate(baseCurrency: ICurrency, counterCurrency: ICurrency): BigNumber {\n    if (!counterCurrency || !baseCurrency) {\n        return new BigNumber(1)\n    }\n    return new BigNumber(counterCurrency.exchangeRate).div(baseCurrency.exchangeRate)\n}\n","export default \"<div class=\\\"app\\\" [ngClass]=\\\"menuService.style\\\">\\n    <app-menu class=\\\"sidebar-wrapper\\\" *ngIf=\\\"showSidebar()\\\"></app-menu>\\n    <div class=\\\"app-body\\\">\\n        <app-header class=\\\"app-header\\\" *ngIf=\\\"showHeader()\\\"></app-header>\\n        <main class=\\\"main\\\">\\n            <status-message-outlet></status-message-outlet>\\n            <toastr></toastr>\\n            <router-outlet></router-outlet>\\n        </main>\\n        <app-footer class=\\\"app-footer\\\" *ngIf=\\\"showFooter()\\\"></app-footer>\\n    </div>\\n</div>\\n\";","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core'\nimport * as Color from 'color'\nimport { environment } from 'src/environments/environment'\nimport { IUser } from '../api-interfaces'\nimport { AvatarService } from '../services/avatar.service'\n\n@Component({\n    selector: 'user-avatar',\n    templateUrl: 'user-avatar.component.html',\n})\nexport class UserAvatarComponent implements OnChanges {\n    @Input()\n    public user?: IUser | null\n    @Input()\n    public size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | undefined\n    @Input()\n    public online = false\n    @Input()\n    public border = false\n    @Input()\n    public elementClass = ''\n\n    public appName = environment.appName\n    public appInitials = environment.appName.slice(0, 2).toUpperCase()\n\n    private _primaryColor: string\n    private _successColor: string\n\n    constructor(private avatarService: AvatarService) {}\n\n    public get primaryColor(): string {\n        if (!this._primaryColor) {\n            this._primaryColor = Color(getComputedStyle(document.body).getPropertyValue('--primary').trim()).hex()\n        }\n        return this._primaryColor\n    }\n    public get successColor(): string {\n        if (!this._successColor) {\n            this._successColor = Color(getComputedStyle(document.body).getPropertyValue('--success').trim()).hex()\n        }\n        return this._successColor\n    }\n\n    public get avatarUrl(): string {\n        return `/.api/users/${this.user?.id}/avatar?v=${this.avatarService.timestamp}`\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.user) {\n            this.user = changes.user.currentValue\n        }\n    }\n\n    public get styles(): string {\n        return (this.border ? 'avatar-border ' : '') + (this.size ? `avatar-${this.size} ` : '') + this.elementClass\n    }\n}\n","export default \"<div class=\\\"mb-3\\\" *ngIf=\\\"['pending', 'processing'].includes(transaction.status) && transaction.type === 'deposit'\\\">\\n    <h4 class=\\\"text-primary mb-2\\\">{{ 'common.make-transfer' | translate }}</h4>\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <div class=\\\"text-center p-2\\\">\\n            <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faPhoneLaptop\\\" size=\\\"3x\\\"></fa-icon>\\n            <div class=\\\"font-sm text-muted mt-3\\\">{{ 'common.open-online-banking' | translate }}</div>\\n        </div>\\n        <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faArrowRight\\\" size=\\\"md\\\"></fa-icon>\\n        <div class=\\\"text-center p-2\\\">\\n            <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faPaperPlane\\\" size=\\\"3x\\\"></fa-icon>\\n            <div class=\\\"font-sm text-muted mt-3\\\">{{ 'common.make-a-transfer' | translate }}</div>\\n        </div>\\n        <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faArrowRight\\\" size=\\\"md\\\"></fa-icon>\\n        <div class=\\\"text-center p-2\\\">\\n            <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faReceipt\\\" size=\\\"3x\\\"></fa-icon>\\n            <div class=\\\"font-sm text-muted mt-3\\\">{{ 'common.save-payment-document' | translate }}</div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"mb-3\\\">\\n    <h4 class=\\\"text-primary mb-2\\\">{{ 'common.bank-details' | translate }}</h4>\\n    <deposit-instruction-table [beneficiary]=\\\"transaction.beneficiary\\\" [transaction]=\\\"transaction\\\" [showWarning]=\\\"true\\\"></deposit-instruction-table>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser'\n\n@Pipe({ name: 'safeResourceUrl' })\nexport class SafeResourceUrlPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    public transform(value: string): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value)\n    }\n}\n","import { Directive, ElementRef, Input, NgZone, OnChanges } from '@angular/core'\nimport { take } from 'rxjs/operators'\n\n@Directive({\n    selector: '[focus]',\n})\nexport class FocusDirective implements OnChanges {\n    @Input()\n    public focus: boolean\n\n    constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n    public ngOnChanges(): void {\n        if (this.focus) {\n            if (this.el.nativeElement) {\n                this.ngZone.onStable\n                    .asObservable()\n                    .pipe(take(1))\n                    .subscribe(() => {\n                        this.el.nativeElement.focus()\n                    })\n            }\n        }\n    }\n}\n","export default \"<form #detailsForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" class=\\\"form-validation\\\" novalidate>\\n    <ul *ngIf=\\\"type === 'business'\\\" class=\\\"nav nav-pills nav-fill mb-2\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'business' }\\\" (click)=\\\"currentTab = 'business'; $event.preventDefault()\\\">\\n                {{ 'common.business' | translate }}\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'manager' }\\\" (click)=\\\"currentTab = 'manager'; $event.preventDefault()\\\">\\n                {{ 'common.manager' | translate }}\\n            </a>\\n        </li>\\n    </ul>\\n    <ng-container *ngIf=\\\"type === 'personal' || (type === 'business' && currentTab === 'manager'); else businessDetails\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"firstName\\\">{{ 'common.first-name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"firstName\\\"\\n                    name=\\\"firstName\\\"\\n                    [(ngModel)]=\\\"details.firstName\\\"\\n                    #firstName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                    emptyToNull\\n                    nameValidator\\n                />\\n                <div *ngIf=\\\"firstName.invalid && (submitted || firstName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstName?.errors?.nameError\\\">\\n                        {{ 'common.only-alphabets-are-allowed' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"lastName\\\">{{ 'common.last-name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"lastName\\\"\\n                    name=\\\"lastName\\\"\\n                    [(ngModel)]=\\\"details.lastName\\\"\\n                    #lastName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                    emptyToNull\\n                    nameValidator\\n                />\\n                <div *ngIf=\\\"lastName.invalid && (submitted || lastName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastName?.errors?.nameError\\\">{{ 'common.only-alphabets-are-allowed' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-14\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"middleName\\\"\\n                    >{{ 'common.middle-name' | translate }} <span class=\\\"text-muted\\\">({{ 'common.optional' | translate }})</span></label\\n                >\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"middleName\\\"\\n                    name=\\\"middleName\\\"\\n                    [(ngModel)]=\\\"details.middleName\\\"\\n                    #middleName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    emptyToNull\\n                    nameValidator\\n                />\\n                <div *ngIf=\\\"middleName.invalid && (submitted || middleName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"middleName?.errors?.nameError\\\">\\n                        {{ 'common.only-alphabets-are-allowed' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-10\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"gender\\\">{{ 'common.gender' | translate }}</label>\\n                <ng-select\\n                    id=\\\"gender\\\"\\n                    name=\\\"gender\\\"\\n                    [(ngModel)]=\\\"details.gender\\\"\\n                    [items]=\\\"genders\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [searchable]=\\\"false\\\"\\n                    #gender=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\"\\n                        ><span class=\\\"text-capitalize\\\">{{ item }}</span></ng-template\\n                    >\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\"\\n                        ><span class=\\\"text-capitalize\\\">{{ item }}</span></ng-template\\n                    >\\n                </ng-select>\\n                <div *ngIf=\\\"gender.invalid && (submitted || gender.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"gender?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-8\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"phoneCountryCode\\\">{{ 'common.country-code' | translate }}</label>\\n                <ng-select\\n                    id=\\\"phoneCountryCode\\\"\\n                    name=\\\"phoneCountryCode\\\"\\n                    [(ngModel)]=\\\"phoneCountryCode\\\"\\n                    bindLabel=\\\"alpha2\\\"\\n                    [items]=\\\"countries\\\"\\n                    [searchFn]=\\\"searchCountryCode\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #phoneCountryCodeField=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"phoneCountryCodeField.invalid && (submitted || phoneCountryCodeField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"phoneCountryCodeField?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-16\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"phoneNumber\\\">{{ 'common.phone-number' | translate }}</label>\\n                <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                            <fa-icon [icon]=\\\"faPhone\\\"></fa-icon>\\n                        </span>\\n                    </span>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"phoneNumber\\\"\\n                        name=\\\"phoneNumber\\\"\\n                        [(ngModel)]=\\\"details.phoneNumber\\\"\\n                        #phoneNumber=\\\"ngModel\\\"\\n                        [required]=\\\"requireAll\\\"\\n                        [disabled]=\\\"disabled\\\"\\n                        emptyToNull\\n                    />\\n                </div>\\n                <div *ngIf=\\\"phoneNumber.invalid && (submitted || phoneNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"phoneNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"birthday\\\">{{ 'common.birthday' | translate }}</label>\\n                <input\\n                    class=\\\"form-control\\\"\\n                    type=\\\"text\\\"\\n                    id=\\\"birthday\\\"\\n                    name=\\\"birthday\\\"\\n                    [(ngModel)]=\\\"birthday\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    #birthdayField=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    birthdayValidator\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"birthdayField.invalid && (submitted || birthdayField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.invalidDate\\\">{{ 'common.invalid-date' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.dateLongAgo\\\">{{ 'common.date-should-be-1900' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.dateInFuture\\\">{{ 'common.you-should-18' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"nationality\\\">{{ 'common.nationality' | translate }}</label>\\n                <ng-select\\n                    id=\\\"nationality\\\"\\n                    name=\\\"nationality\\\"\\n                    [(ngModel)]=\\\"details.nationality\\\"\\n                    bindLabel=\\\"name\\\"\\n                    bindValue=\\\"alpha2\\\"\\n                    [items]=\\\"countriesSortedByName\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #nationality=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                ></ng-select>\\n                <div *ngIf=\\\"nationality.invalid && (submitted || nationality.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"nationality?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <address-form [(address)]=\\\"details.address\\\" [disabled]=\\\"disabled\\\" [requireAll]=\\\"requireAll\\\"></address-form>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"occupation\\\">{{ 'user-details-form.occupation' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"occupation\\\"\\n                name=\\\"occupation\\\"\\n                [(ngModel)]=\\\"details.occupation\\\"\\n                #occupation=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"occupation.invalid && (submitted || occupation.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"occupation?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"sourceOfIncome\\\">{{ 'user-details-form.source-of-income' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"sourceOfIncome\\\"\\n                name=\\\"sourceOfIncome\\\"\\n                [(ngModel)]=\\\"details.sourceOfIncome\\\"\\n                #sourceOfIncome=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"sourceOfIncome.invalid && (submitted || sourceOfIncome.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"sourceOfIncome?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"taxIdentificationNumber\\\">{{ 'user-details-form.tax-identification-number' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"taxIdentificationNumber\\\"\\n                name=\\\"taxIdentificationNumber\\\"\\n                [(ngModel)]=\\\"details.taxIdentificationNumber\\\"\\n                #taxIdentificationNumber=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"taxIdentificationNumber.invalid && (submitted || taxIdentificationNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxIdentificationNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-8\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentType\\\">{{ 'user-details-form.document-type' | translate }}</label>\\n                <ng-select\\n                    id=\\\"documentType\\\"\\n                    name=\\\"documentType\\\"\\n                    [(ngModel)]=\\\"details.documentType\\\"\\n                    bindLabel=\\\"name\\\"\\n                    bindValue=\\\"alpha2\\\"\\n                    [items]=\\\"documentTypes\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #documentType=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item | uppercase }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item | uppercase }}</ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"documentType.invalid && (submitted || documentType.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentType?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-16\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentNumber\\\">{{ 'user-details-form.document-number' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"documentNumber\\\"\\n                    name=\\\"documentNumber\\\"\\n                    [(ngModel)]=\\\"details.documentNumber\\\"\\n                    #documentNumber=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"documentNumber.invalid && (submitted || documentNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentIssuingDate\\\">{{ 'common.document-issuance-date' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"documentIssuingDate\\\"\\n                    name=\\\"documentIssuingDate\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    [(ngModel)]=\\\"documentIssuingDate\\\"\\n                    #documentIssuingDateForm=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    useValidator=\\\"date\\\"\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"documentIssuingDateForm.invalid && (submitted || documentIssuingDateForm.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentIssuingDateForm?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentExpiryDate\\\">{{ 'user-details-form.document-expiry-date' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"documentExpiryDate\\\"\\n                    name=\\\"documentExpiryDate\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    [(ngModel)]=\\\"documentExpiryDate\\\"\\n                    #documentExpiryDateForm=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    useValidator=\\\"date\\\"\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"documentExpiryDateForm.invalid && (submitted || documentExpiryDateForm.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentExpiryDateForm?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"proofOfAddressDate\\\">{{ 'user-details-form.proof-of-address-date' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"proofOfAddressDate\\\"\\n                name=\\\"proofOfAddressDate\\\"\\n                mask=\\\"00/00/0000\\\"\\n                [(ngModel)]=\\\"proofOfAddressDate\\\"\\n                #proofOfAddressDateForm=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                useValidator=\\\"date\\\"\\n            />\\n            <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n            <div *ngIf=\\\"proofOfAddressDateForm.invalid && (submitted || proofOfAddressDateForm.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"proofOfAddressDateForm?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <ng-container *ngIf=\\\"type === 'personal'\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"expectedTurnover\\\">{{ 'user-details-form.expected-turnover' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"expectedTurnover\\\"\\n                    name=\\\"expectedTurnover\\\"\\n                    [(ngModel)]=\\\"details.expectedTurnover\\\"\\n                    #expectedTurnover=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"expectedTurnover.invalid && (submitted || expectedTurnover.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"expectedTurnover?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"fatcaYes\\\"\\n                    >{{ 'common.are-you-us-or-fatca-purposes' | translate }}\\n                    <fa-icon\\n                        class=\\\"text-primary\\\"\\n                        [icon]=\\\"faInfoCircle\\\"\\n                        [ngbPopover]=\\\"fatcaContent\\\"\\n                        [popoverTitle]=\\\"fatcaTitle\\\"\\n                        triggers=\\\"mouseenter:mouseleave\\\"\\n                    ></fa-icon\\n                ></label>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                            <input\\n                                type=\\\"radio\\\"\\n                                [value]=\\\"true\\\"\\n                                [(ngModel)]=\\\"details.fatca\\\"\\n                                id=\\\"fatcaYes\\\"\\n                                name=\\\"fatca\\\"\\n                                class=\\\"custom-control-input\\\"\\n                                [disabled]=\\\"disabled\\\"\\n                                #fatca=\\\"ngModel\\\"\\n                                [required]=\\\"requireAll\\\"\\n                            />\\n                            <label class=\\\"custom-control-label\\\" for=\\\"fatcaYes\\\">{{ 'common.yes' | translate }}</label>\\n                        </div>\\n                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                            <input\\n                                type=\\\"radio\\\"\\n                                [value]=\\\"false\\\"\\n                                [(ngModel)]=\\\"details.fatca\\\"\\n                                id=\\\"fatcaNo\\\"\\n                                name=\\\"fatca\\\"\\n                                class=\\\"custom-control-input\\\"\\n                                [disabled]=\\\"disabled\\\"\\n                                [required]=\\\"requireAll\\\"\\n                            />\\n                            <label class=\\\"custom-control-label\\\" for=\\\"fatcaNo\\\">{{ 'common.no' | translate }}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"fatca.invalid && (submitted || fatca.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"fatca?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-template #businessDetails>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"businessName\\\">{{ 'common.entity-name' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"businessName\\\"\\n                name=\\\"businessName\\\"\\n                [(ngModel)]=\\\"business.name\\\"\\n                #businessName=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"businessName.invalid && (submitted || businessName.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessType\\\">{{ 'common.type' | translate }}</label>\\n                <ng-select\\n                    id=\\\"businessType\\\"\\n                    name=\\\"businessType\\\"\\n                    [(ngModel)]=\\\"business.type\\\"\\n                    [items]=\\\"businessTypes\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [searchable]=\\\"false\\\"\\n                    #businessType=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                ></ng-select>\\n                <div *ngIf=\\\"businessType.invalid && (submitted || businessType.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessType?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"registrationNumber\\\">{{ 'user-details-form.registration-number' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"registrationNumber\\\"\\n                    name=\\\"registrationNumber\\\"\\n                    [(ngModel)]=\\\"business.registrationNumber\\\"\\n                    #registrationNumber=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"registrationNumber.invalid && (submitted || registrationNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"registrationNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-8\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessPhoneCountryCode\\\">{{ 'common.country-code' | translate }}</label>\\n                <ng-select\\n                    id=\\\"businessPhoneCountryCode\\\"\\n                    name=\\\"businessPhoneCountryCode\\\"\\n                    [(ngModel)]=\\\"businessPhoneCountryCode\\\"\\n                    bindLabel=\\\"alpha2\\\"\\n                    [items]=\\\"countries\\\"\\n                    [searchFn]=\\\"searchCountryCode\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #businessPhoneCountryCodeField=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"businessPhoneCountryCodeField.invalid && (submitted || businessPhoneCountryCodeField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessPhoneCountryCodeField?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-16\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessPhoneNumber\\\">{{ 'common.phone-number' | translate }}</label>\\n                <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                            <fa-icon [icon]=\\\"faPhone\\\"></fa-icon>\\n                        </span>\\n                    </span>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"businessPhoneNumber\\\"\\n                        name=\\\"businessPhoneNumber\\\"\\n                        [(ngModel)]=\\\"business.phoneNumber\\\"\\n                        #businessPhoneNumber=\\\"ngModel\\\"\\n                        [required]=\\\"requireAll\\\"\\n                        [disabled]=\\\"disabled\\\"\\n                        emptyToNull\\n                    />\\n                </div>\\n                <div *ngIf=\\\"businessPhoneNumber.invalid && (submitted || businessPhoneNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessPhoneNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"countryOfIncorporation\\\">{{ 'user-details-form.country-of-incorporation' | translate }}</label>\\n                <ng-select\\n                    id=\\\"countryOfIncorporation\\\"\\n                    name=\\\"countryOfIncorporation\\\"\\n                    [(ngModel)]=\\\"business.countryOfIncorporation\\\"\\n                    bindLabel=\\\"name\\\"\\n                    bindValue=\\\"alpha2\\\"\\n                    [items]=\\\"countriesSortedByName\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #countryOfIncorporation=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                ></ng-select>\\n                <div *ngIf=\\\"countryOfIncorporation.invalid && (submitted || countryOfIncorporation.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"countryOfIncorporation?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"dateOfIncorporation\\\">{{ 'user-details-form.date-of-incorporation' | translate }}</label>\\n                <input\\n                    class=\\\"form-control\\\"\\n                    type=\\\"text\\\"\\n                    id=\\\"dateOfIncorporation\\\"\\n                    name=\\\"dateOfIncorporation\\\"\\n                    [(ngModel)]=\\\"dateOfIncorporation\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    #dateOfIncorporationField=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"dateOfIncorporationField.invalid && (submitted || dateOfIncorporationField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"dateOfIncorporationField?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"industry\\\">{{ 'common.industry' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"industry\\\"\\n                    name=\\\"industry\\\"\\n                    [(ngModel)]=\\\"business.industry\\\"\\n                    #industry=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"industry.invalid && (submitted || industry.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"industry?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessExpectedTurnover\\\">{{ 'user-details-form.expected-turnover' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"businessExpectedTurnover\\\"\\n                    name=\\\"businessExpectedTurnover\\\"\\n                    [(ngModel)]=\\\"business.expectedTurnover\\\"\\n                    #businessExpectedTurnover=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"businessExpectedTurnover.invalid && (submitted || businessExpectedTurnover.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessExpectedTurnover?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-muted font-lg\\\">{{ 'user-details-form.office-address' | translate }}</div>\\n        <address-form [(address)]=\\\"business.address\\\" [disabled]=\\\"disabled\\\" [requireAll]=\\\"requireAll\\\"></address-form>\\n        <div class=\\\"text-muted font-lg\\\">{{ 'user-details-form.business-address' | translate }}</div>\\n        <address-form [(address)]=\\\"business.businessAddress\\\" [disabled]=\\\"disabled\\\" [requireAll]=\\\"requireAll\\\"></address-form>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"regulatoryBody\\\">{{ 'user-details-form.regulatory-body' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"regulatoryBody\\\"\\n                name=\\\"regulatoryBody\\\"\\n                [(ngModel)]=\\\"business.regulatoryBody\\\"\\n                #regulatoryBody=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"regulatoryBody.invalid && (submitted || regulatoryBody.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"regulatoryBody?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"custom-controls-stacked mb-2\\\">\\n            <label class=\\\"custom-control custom-checkbox\\\">\\n                <input\\n                    id=\\\"licensed\\\"\\n                    type=\\\"checkbox\\\"\\n                    class=\\\"custom-control-input\\\"\\n                    name=\\\"licensed\\\"\\n                    [(ngModel)]=\\\"business.licensed\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                />\\n                <span class=\\\"custom-control-label\\\"> {{ 'common.licensed' | translate }} </span>\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"business.licensed\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"licenseNumber\\\">{{ 'user-details-form.license-number' | translate }}</label>\\n            <input\\n                id=\\\"licenseNumber\\\"\\n                type=\\\"text\\\"\\n                name=\\\"licenseNumber\\\"\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"business.licenseNumber\\\"\\n                [required]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                #licenseNumber=\\\"ngModel\\\"\\n            />\\n            <div *ngIf=\\\"licenseNumber.invalid && (submitted || licenseNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"licenseNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"businessFatcaYes\\\"\\n                >{{ 'user-details-form.are-you-considered-a-us-entity' | translate }}\\n                <fa-icon\\n                    class=\\\"text-primary\\\"\\n                    [icon]=\\\"faInfoCircle\\\"\\n                    [ngbPopover]=\\\"fatcaContent\\\"\\n                    [popoverTitle]=\\\"fatcaTitle\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\"\\n                ></fa-icon\\n            ></label>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                        <input\\n                            type=\\\"radio\\\"\\n                            [value]=\\\"true\\\"\\n                            [(ngModel)]=\\\"business.fatca\\\"\\n                            id=\\\"businessFatcaYes\\\"\\n                            name=\\\"businessFatcaYes\\\"\\n                            class=\\\"custom-control-input\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            #businessFatca=\\\"ngModel\\\"\\n                            [required]=\\\"requireAll\\\"\\n                        />\\n                        <label class=\\\"custom-control-label\\\" for=\\\"businessFatcaYes\\\">{{ 'common.yes' | translate }}</label>\\n                    </div>\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                        <input\\n                            type=\\\"radio\\\"\\n                            [value]=\\\"false\\\"\\n                            [(ngModel)]=\\\"business.fatca\\\"\\n                            id=\\\"businessFatcaNo\\\"\\n                            name=\\\"businessFatcaNo\\\"\\n                            class=\\\"custom-control-input\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            [required]=\\\"requireAll\\\"\\n                        />\\n                        <label class=\\\"custom-control-label\\\" for=\\\"businessFatcaNo\\\">{{ 'common.no' | translate }}</label>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"businessFatca.invalid && (submitted || businessFatca.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessFatca?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n    </ng-template>\\n</form>\\n\\n<ng-template #fatcaTitle> FATCA </ng-template>\\n<ng-template #fatcaContent>\\n    <p>\\n        {{ 'common.fatca-stands' | translate }}\\n    </p>\\n    <p>\\n        {{ 'common.fatca-desc' | translate }}\\n    </p>\\n</ng-template>\\n\";","import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core'\nimport { faCloudUpload, faTimes } from '@fortawesome/pro-solid-svg-icons'\nimport { File as IFile } from '../api-interfaces'\n\n@Component({\n    selector: 'dropzone',\n    templateUrl: 'dropzone.component.html',\n})\nexport class DropzoneComponent implements AfterViewInit {\n    @Input()\n    public files: File[] = []\n    @Output()\n    public readonly filesChange = new EventEmitter<File[]>()\n    @Input()\n    public existingFiles?: IFile[]\n    @Input()\n    public showTable = true\n    @Input()\n    public canCreate = true\n    @Input()\n    public canDelete = true\n    @Output()\n    public readonly onDelete = new EventEmitter<IFile>()\n    @Input()\n    public requiredMessage: string\n    public isDragValid: boolean\n    public isDragInvalid: boolean\n    public submitted: boolean\n    public faCloudUpload = faCloudUpload\n    public faTimes = faTimes\n    @Input()\n    public allowVideo = false\n\n    public ngAfterViewInit(): void {\n        setTimeout(() => {\n            if (!Array.isArray(this.files)) {\n                this.filesChange.emit([])\n            }\n        })\n    }\n\n    public submit(): void {\n        this.submitted = true\n    }\n\n    public isValid(): boolean {\n        return (!!this.files && this.files.length > 0) || (!!this.existingFiles && this.existingFiles.length > 0)\n    }\n}\n","import { HttpBackend, HttpClient, HttpClientModule } from '@angular/common/http'\nimport { ErrorHandler, NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { ServiceWorkerModule } from '@angular/service-worker'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core'\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader'\nimport { Timestamp } from '../app/Timestamp'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { CoreModule } from './app/core/core.module'\nimport { AppErrorHandler } from './app/error-handler.service'\nimport { StatusMessageModule } from './app/status-message/status-message.module'\nimport { CommonModule } from './common/common.module'\nimport { OrganizationAuthGuard } from './organization/organization.auth-guard'\n\nexport function translateHttpLoaderFactory(httpBackend: HttpBackend): TranslateHttpLoader {\n    return new TranslateHttpLoader(new HttpClient(httpBackend), '/assets/i18n/', '.json?cb=' + Timestamp.stamp)\n}\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        IonicModule.forRoot({\n            mode: 'md',\n        }),\n        HttpClientModule,\n        CommonModule,\n        StatusMessageModule,\n        CoreModule,\n        AppRoutingModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: translateHttpLoaderFactory,\n                deps: [HttpBackend],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: true,\n            // Register the ServiceWorker as soon as the app is stable\n            // or after 30 seconds (whichever comes first).\n            registrationStrategy: 'registerWhenStable:30000',\n        }),\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useClass: AppErrorHandler,\n        },\n        OrganizationAuthGuard,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { Permission } from '../api-interfaces'\nimport { permissionMap } from '../common.mixin'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'permission-select',\n    templateUrl: 'permission-select.component.html',\n})\nexport class PermissionSelectComponent {\n    @Input()\n    public permissions: Permission[] = []\n    @Output()\n    public readonly permissionsChange = new EventEmitter<Permission[]>()\n\n    public paymentPermissions: Permission[] = ['payment-swift', 'payment-local', 'payment-crypto']\n    public featurePermissions: Permission[] = [\n        'cards',\n        'conversions',\n        'invoices',\n        'trades',\n        'spot-trades',\n        'marketplaces',\n        'redeem',\n    ]\n\n    constructor(public session: SessionService) {}\n\n    public togglePaymentMethod(method: Permission, checked: boolean): void {\n        if (checked) {\n            this.permissions.push(method)\n        } else {\n            this.permissions = this.permissions.filter(paymentMethod => paymentMethod !== method)\n        }\n        this.permissionsChange.emit(this.permissions)\n    }\n\n    public toggleFeature(feature: Permission, checked: boolean): void {\n        if (checked) {\n            this.permissions.push(feature)\n        } else {\n            this.permissions = this.permissions.filter(paymentMethod => paymentMethod !== feature)\n        }\n        this.permissionsChange.emit(this.permissions)\n    }\n\n    public getPermissionLabel(permission: Permission): string {\n        return permissionMap[permission]\n    }\n}\n","import { CurrencyMaskModule } from '@aerapass/ngx-currency-mask'\nimport { CommonModule as AngularCommonModule, Location, LocationStrategy, PathLocationStrategy } from '@angular/common'\nimport { HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\nimport {\n    NgbAccordionModule,\n    NgbCollapseModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbPaginationModule,\n    NgbPopoverModule,\n    NgbProgressbarModule,\n    NgbTooltipModule,\n    NgbTypeaheadModule,\n} from '@ng-bootstrap/ng-bootstrap'\nimport { NgOptionHighlightModule } from '@ng-select/ng-option-highlight'\nimport { NgSelectModule } from '@ng-select/ng-select'\nimport { TranslateModule } from '@ngx-translate/core'\nimport { ngfModule } from 'angular-file'\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime'\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs'\nimport { NgxMaskModule } from 'ngx-mask'\nimport { AccessErrorsComponent } from './access-error/access-errors.component'\nimport { AccountNumberPipe } from './account-number.pipe'\nimport { AccountNumberComponent } from './account-number/acount-number.component'\nimport { AddressFormComponent } from './address-form/address-form.component'\nimport { AlertOutletComponent } from './alert-outlet/alert-outlet.component'\nimport { AmountPipe } from './amount.pipe'\nimport { TokenRequestInterceptor } from './auth.interceptor'\nimport { BeneficiaryDetailsFormComponent } from './beneficiary-form/beneficiary-details-form/beneficiary-details-form.component'\nimport { BeneficiaryFormComponent } from './beneficiary-form/beneficiary-form.component'\nimport { CapitalizePipe } from './capitalize.pipe'\nimport { CardFeeScheduleComponent } from './card-fee-schedule/card-fee-schedule.component'\nimport { CircleSpinnerComponent } from './circle-spinner/circle-spinner.component'\nimport { ConfirmMailReminderComponent } from './confirm-mail-reminder/confirm-mail-reminder.component'\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component'\nimport { ContactBookComponent } from './contact-book/contact-book.component'\nimport { CopyButtonComponent } from './copy-btn/copy-btn.component'\nimport { CopyIconComponent } from './copy-icon/copy-icon.component'\nimport { CopyWrapComponent } from './copy-wrap/copy-wrap.component'\nimport { CurrencySelectTabComponent } from './currency-select-tab/currency-select-tab.component'\nimport { CurrencySelectComponent } from './currency-select/currency-select.component'\nimport { DepositInstructionTableComponent } from './deposit-instruction-table/deposit-instruction-table.component'\nimport { DepositInstructionComponent } from './deposit-instruction/deposit-instruction.component'\nimport { DropzoneComponent } from './dropzone/dropzone.component'\nimport { EmptyToNullDirective } from './emptytonull.directive'\nimport { ErrorHandlerInterceptor } from './errorhandler.interceptor'\nimport { FeePreviewComponent } from './fee-preview/fee-preview.component'\nimport { FocusDirective } from './focus.directive'\nimport { FormatDatePipe } from './format-date.pipe'\nimport { FormatDistanceToNowPipe } from './format-distance-to-now.pipe'\nimport { IsBeforePipe } from './is-before.pipe'\nimport { ListComponent } from './list.component'\nimport { MaskedPipe } from './masked.pipe'\nimport { MatchPasswordDirective } from './match-password.directive'\nimport { NoAccessModalComponent } from './no-access-modal/no-access-modal.component'\nimport { NumericDirective } from './numeric.directive'\nimport { PasswordStrengthBarComponent } from './password-strength-bar/password-strength-bar.component'\nimport { PasswordStrengthDirective } from './password-strength.directive'\nimport { PermissionSelectComponent } from './permission-select/permission-select.component'\nimport { PluralizePipe } from './pluralize.pipe'\nimport { PostalAddressComponent } from './postal-address/postal-address.component'\nimport { FileItemComponent } from './profile-documents/file-item.component'\nimport { ProfileDocumentsComponent } from './profile-documents/profile-documents.component'\nimport { UserFileFormComponent } from './profile-documents/user-file-form/user-file-form.component'\nimport { SafeHtmlPipe } from './safe-html.pipe'\nimport { SafeResourceUrlPipe } from './safe-resource-url.pipe'\nimport { SafeUrlPipe } from './safe-url.pipe'\nimport { ConfirmPasswordModalComponent } from './security-check/confirm-password.modal'\nimport { SentenceCasePipe } from './sentence-case.pipe'\nimport { StartCasePipe } from './start-case.pipe'\nimport { TruncatePipe } from './truncate.pipe'\nimport { UserAvatarComponent } from './user-avatar/user-avatar.component'\nimport { UserDetailsFormComponent } from './user-details-form/user-details-form.component'\nimport { UserInfoTableComponent } from './user-info-table/user-info-table.component'\nimport { UserComponent } from './user/user.component'\nimport { UuidComponent } from './uuid/uuid.component'\nimport { ValidateDirective } from './validate.directive'\nimport {\n    BirthdayValidatorDirective,\n    ColorValidatorDirective,\n    CustomValidatorDirective,\n    DecimalValidatorDirective,\n    IntegerValidatorDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    NumberValidatorDirective,\n    RecipientValidatorDirective,\n    NameValidatorDirective,\n    IpAddressValidatorDirective,\n} from './validators'\nimport { VideoPlayerComponent } from './video-player/video-player.component'\nimport { WelcomeComponent } from './welcome/welcome.component'\n\nconst DECLARATIONS = [\n    AccessErrorsComponent,\n    AccountNumberComponent,\n    AccountNumberPipe,\n    AddressFormComponent,\n    AlertOutletComponent,\n    AmountPipe,\n    BeneficiaryDetailsFormComponent,\n    BeneficiaryFormComponent,\n    BirthdayValidatorDirective,\n    RecipientValidatorDirective,\n    CircleSpinnerComponent,\n    ColorValidatorDirective,\n    ConfirmationModalComponent,\n    ConfirmMailReminderComponent,\n    ConfirmPasswordModalComponent,\n    ContactBookComponent,\n    CopyButtonComponent,\n    CopyIconComponent,\n    CopyWrapComponent,\n    CurrencySelectComponent,\n    CurrencySelectTabComponent,\n    CustomValidatorDirective,\n    DecimalValidatorDirective,\n    DropzoneComponent,\n    EmptyToNullDirective,\n    UserAvatarComponent,\n    UserComponent,\n    FeePreviewComponent,\n    FileItemComponent,\n    FocusDirective,\n    FormatDatePipe,\n    FormatDistanceToNowPipe,\n    IntegerValidatorDirective,\n    ListComponent,\n    MatchPasswordDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    NameValidatorDirective,\n    IpAddressValidatorDirective,\n    NoAccessModalComponent,\n    NumberValidatorDirective,\n    NumericDirective,\n    PasswordStrengthBarComponent,\n    PasswordStrengthDirective,\n    PermissionSelectComponent,\n    PostalAddressComponent,\n    ProfileDocumentsComponent,\n    SafeHtmlPipe,\n    SafeResourceUrlPipe,\n    SafeUrlPipe,\n    StartCasePipe,\n    CapitalizePipe,\n    TruncatePipe,\n    UserFileFormComponent,\n    UserDetailsFormComponent,\n    UserInfoTableComponent,\n    UuidComponent,\n    ValidateDirective,\n    VideoPlayerComponent,\n    WelcomeComponent,\n    DepositInstructionComponent,\n    DepositInstructionTableComponent,\n    CardFeeScheduleComponent,\n    MaskedPipe,\n    PluralizePipe,\n    IsBeforePipe,\n    SentenceCasePipe,\n]\n\nconst MODULES = [\n    AngularCommonModule,\n    CurrencyMaskModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    ngfModule,\n    NgbTooltipModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbPaginationModule,\n    NgbProgressbarModule,\n    NgbTypeaheadModule,\n    NgbPopoverModule,\n    NgbAccordionModule,\n    NgbCollapseModule,\n    FontAwesomeModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    NgbDatepickerModule,\n    HighlightModule,\n    TranslateModule,\n]\n\n@NgModule({\n    declarations: [...DECLARATIONS],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ErrorHandlerInterceptor,\n            multi: true,\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenRequestInterceptor,\n            multi: true,\n        },\n        Location,\n        {\n            provide: LocationStrategy,\n            useClass: PathLocationStrategy,\n        },\n        {\n            provide: HIGHLIGHT_OPTIONS,\n            useValue: {\n                fullLibraryLoader: () => import('highlight.js'),\n            },\n        },\n    ],\n    imports: [NgxMaskModule.forRoot(), ...MODULES],\n    exports: [...DECLARATIONS, ...MODULES, NgxMaskModule],\n})\nexport class CommonModule {}\n","import { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http'\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faSearch } from '@fortawesome/pro-regular-svg-icons'\nimport { faCaretDown, faChevronDown, faChevronUp, faDownload, faPlus } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap'\nimport formatDate from 'date-fns/format'\nimport { find, findIndex, isEqual, last, matches } from 'lodash'\nimport { BehaviorSubject, merge, Observable, of, Subject, Subscription, throwError } from 'rxjs'\nimport { catchError, debounceTime, filter, map, switchMap, tap } from 'rxjs/operators'\nimport { ConfirmationResult, ConfirmationService } from './services/confirmation.service'\nimport { SessionService } from './services/session.service'\n\nexport enum Scope {\n    DEFAULT = 'default',\n}\n\nexport interface Query {\n    [param: string]: { [operator: string]: string | string[] }\n}\n\n/**\n * Base class for list controllers.\n */\n@Component({\n    selector: 'undef-list', // this is required by angular but we don't want it to be used accidentally\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: '',\n})\nexport class ListComponent<T extends { id: number | string }> implements OnInit, OnDestroy {\n    public scope: string = Scope.DEFAULT\n    public page: number\n    public order: string[][]\n    public search = ''\n    public itemsStream: Observable<T[]>\n    public limitOpts: number[] = [5, 8, 10, 12, 15, 20, 50]\n    public limit: number\n    public offset = 0\n    public count = 0\n    public fill: undefined[]\n    public queryParams: Query = {}\n    public searchEvent = new Subject<void>()\n    public paginationEvent = new Subject<void>()\n    public updateEvent = new Subject<void>()\n    public isFetching = new BehaviorSubject<boolean>(false)\n    public isFilterOptionsCollapsed = true\n    public doCollapseFilterOptionsIfParamsSet = true\n\n    public formatDate = formatDate\n\n    public faPlus = faPlus\n    public faSearch = faSearch\n    public faChevronUp = faChevronUp\n    public faChevronDown = faChevronDown\n    public faDownload = faDownload\n    public faCaretDown = faCaretDown\n\n    /**\n     * The template to use for the edit/create dialog.\n     * The scope inherits from the current scope and gets passed `item` (the item to edit/create) as a scope variable\n     */\n    protected formComponent?: any\n    protected model?: new (...args: any[]) => T\n    protected apiUrl: string\n    protected apiQuery?: string[]\n    protected defaultLimit = this.limitOpts[2]\n    protected defaultOrder: string[][] = [['createdAt', 'DESC']]\n    protected defaultQuery: Query = {}\n    protected subscriptions = new Subscription()\n\n    constructor(\n        protected http: HttpClient,\n        protected ngbModal: NgbModal,\n        protected changeDetector: ChangeDetectorRef,\n        protected route: ActivatedRoute,\n        public router: Router,\n        public session: SessionService,\n        public confirmation: ConfirmationService\n    ) {}\n\n    public ngOnInit(): void {\n        this.limit = this.defaultLimit\n        this.order = this.defaultOrder\n        if (this.apiQuery) {\n            for (const property of this.apiQuery) {\n                this.queryParams[property] = {}\n                if (this.defaultQuery && this.defaultQuery[property]) {\n                    // eslint-disable-next-line guard-for-in\n                    for (const key in this.defaultQuery[property]) {\n                        this.queryParams[property][key] = this.defaultQuery[property][key]\n                    }\n                }\n            }\n        }\n        this.itemsStream = this.mergeFindEvents().pipe(\n            switchMap(() => this.find()),\n            catchError(err => {\n                this.isFetching.next(false)\n                return throwError(err)\n            }),\n            tap(response => {\n                this.count =\n                    response.headers && response.headers.has('x-total-count')\n                        ? ~~response.headers.get('x-total-count')!\n                        : 0\n                this.page = this.offset / this.limit + 1\n                const routeParams: { [K: string]: string | string[] | undefined } = {\n                    page: this.page !== 1 ? this.page + '' : undefined,\n                    perPage: this.limit !== this.defaultLimit ? this.limit + '' : undefined,\n                    order: !isEqual(this.order, this.defaultOrder) ? this.order.map(item => item.join(':')) : undefined,\n                    search: this.search || undefined,\n                    scope: this.scope !== Scope.DEFAULT ? this.scope : undefined,\n                }\n                for (const param of Object.keys(this.queryParams)) {\n                    if (Object.keys(this.queryParams[param]).length > 0) {\n                        routeParams[param] = !isEqual(this.queryParams[param], this.defaultQuery[param])\n                            ? this.encodeQueryParam(this.queryParams[param])\n                            : undefined\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.changeState(routeParams)\n            }),\n            tap(response => {\n                this.fill = new Array(this.limit - response.body!.length)\n            }),\n            map(response => response.body!.map(item => this.mapItem(item))),\n            tap(() => {\n                this.changeDetector.detectChanges()\n                this.isFetching.next(false)\n            })\n        )\n        this.route.queryParamMap.subscribe(params => {\n            if (params.has('perPage')) {\n                this.limit = ~~params.get('perPage')!\n            }\n            if (params.has('page')) {\n                this.offset = (~~params.get('page')! - 1) * this.limit\n            }\n            if (!this.page) {\n                this.page = 1\n            }\n            if (params.has('search')) {\n                this.search = decodeURIComponent(params.get('search')!)\n            }\n            if (params.has('scope')) {\n                this.scope = decodeURIComponent(params.get('scope')!) as Scope\n            }\n            if (params.has('order')) {\n                this.order = params.getAll('order').map(item => item.split(':'))\n            }\n            for (const key of Object.keys(this.queryParams)) {\n                if (params.has(key)) {\n                    this.queryParams[key] = this.decodeQueryParam(params.getAll(key))\n                    // Expand filter options if custom filter is set\n                    if (this.doCollapseFilterOptionsIfParamsSet) {\n                        this.isFilterOptionsCollapsed = false\n                    }\n                }\n            }\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public find(): Observable<HttpResponse<any[]>> {\n        this.isFetching.next(true)\n        return this.http.get<any[]>(this.apiUrl, {\n            observe: 'response',\n            params: this.generateListParams(),\n        })\n    }\n\n    public generateListParams(override: { limit?: number } = {}): HttpParams {\n        let params = new HttpParams().set('limit', (override.limit || this.limit) + '').set('offset', this.offset + '')\n        if (this.order) {\n            for (const item of this.order) {\n                params = params.append('order', item.join(':'))\n            }\n        }\n        if (this.search) {\n            // the + sign is already encoded for space, should actually be a plus though\n            params = params.set('search', this.search.replace('+', '%2B'))\n        }\n        if (this.scope && this.scope !== Scope.DEFAULT) {\n            params = params.set('scope', this.scope)\n        }\n        for (const param of Object.keys(this.queryParams)) {\n            const encoded = this.encodeQueryParam(this.queryParams[param])\n            for (const value of encoded) {\n                params = params.append(param, value)\n            }\n        }\n        return params\n    }\n\n    /** Modal: Read, update and delete */\n    public showForm(_: MouseEvent, item: Partial<T>, options: NgbModalOptions = {}): void {\n        if (!this.formComponent) {\n            throw new Error('No form-template given in controller.')\n        }\n        const modal = this.ngbModal.open(this.formComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n            ...options,\n        })\n        modal.componentInstance.item = this.mapItem(item)\n        if (modal.componentInstance.onSave) {\n            modal.componentInstance.onSave.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n        if (modal.componentInstance.onDelete) {\n            modal.componentInstance.onDelete.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n    }\n\n    public requestExport(ignoreCount?: boolean): void {\n        if (this.count > 10000 && !ignoreCount) {\n            this.subscriptions.add(\n                this.confirmation\n                    .show({\n                        type: 'warning',\n                        text: 'Export exceeds the maximum of 10,000 records. You can use filters to limit your export query. Do you still want to continue?',\n                        confirmText: 'Yes',\n                        confirmClass: 'warning',\n                        cancelText: 'No',\n                        cancelClass: 'primary',\n                    })\n                    .pipe(filter(result => result === ConfirmationResult.CONFIRMED))\n                    .subscribe(() => {\n                        this.generateList()\n                    })\n            )\n        } else {\n            this.generateList()\n        }\n    }\n\n    public generateList(): void {\n        this.subscriptions.add(\n            this.http\n                .get(this.apiUrl, {\n                    params: this.generateListParams({ limit: 10000 }).delete('offset'),\n                    headers: new HttpHeaders({\n                        Accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    }),\n                    observe: 'response',\n                    responseType: 'blob',\n                })\n                .subscribe(response => {\n                    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(response.body)\n                    } else {\n                        const data = window.URL.createObjectURL(response.body)\n                        const link = document.createElement('a')\n                        link.href = data\n                        const contentDisposition = response.headers.get('Content-Disposition')\n                        link.download = contentDisposition\n                            ? contentDisposition.substring(\n                                  contentDisposition.indexOf('filename=') + 9,\n                                  contentDisposition.length - 1\n                              )\n                            : 'export.xlsx'\n                        link.click()\n                        setTimeout(() => {\n                            // For Firefox it is necessary to delay revoking the ObjectURL\n                            window.URL.revokeObjectURL(data)\n                        }, 100)\n                    }\n                })\n        )\n    }\n\n    /** Select specified page */\n    public select(page?: number): void {\n        if (typeof page !== 'undefined') {\n            this.page = page\n        }\n        this.offset = (this.page - 1) * this.limit\n        this.paginationEvent.next()\n    }\n\n    /**\n     * Change the sorting order\n     * @param order Sequelize Order syntax\n     * @param toggle Whether to toggle the order instead of replacing\n     */\n    public sort(order: string[], toggle = false): void {\n        // TODO: Allow order functions to be additive\n        if (typeof this.order === 'string') {\n            return\n        }\n        // Find out if order for that attribute is active already\n        const index = findIndex(this.order, matches(order))\n        // if is already selected, toggle\n        if (index === -1 || last(this.order[index]) === 'DESC') {\n            order = [...order, 'ASC']\n        } else {\n            order = [...order, 'DESC']\n        }\n\n        if (!toggle) {\n            // Replace whole order\n            this.order = order.length > 0 ? [order] : this.defaultOrder\n        } else {\n            if (index !== -1) {\n                // If sorting for this attribute is active\n                if (order.length === 0) {\n                    // If the same icon is clicked three times, remove it\n                    this.order.splice(index, 1)\n                } else {\n                    // If it was clicked twice, swap the direction\n                    this.order[index] = order\n                }\n            } else {\n                // If not active, add new order criteria\n                this.order.push(order)\n            }\n        }\n        this.select(1)\n    }\n\n    public isActiveSorting(order: string[]): boolean {\n        return !!find(this.order, matches(order))\n    }\n\n    public getSortingDirection(order: string[]): string | null | undefined {\n        const orderElement = find(this.order, matches(order))\n        return last(orderElement)\n    }\n\n    public isActiveQuery(query: Query): boolean {\n        return isEqual(this.queryParams, query)\n    }\n\n    public getDefaultQuery(): Query {\n        return this.defaultQuery\n    }\n\n    protected mergeFindEvents(): Observable<void> {\n        return merge(of(undefined), this.searchEvent.pipe(debounceTime(600)), this.paginationEvent, this.updateEvent)\n    }\n\n    protected mapItem(item: any): T {\n        return this.model ? new this.model(item) : item\n    }\n\n    protected async changeState(queryParams: { [K: string]: string | string[] | undefined }): Promise<void> {\n        const scroll = window.scrollY\n        await this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams,\n            queryParamsHandling: 'merge',\n        })\n        window.scrollTo(0, scroll)\n    }\n\n    private decodeQueryParam(query: string[]): { [operator: string]: string | string[] } {\n        const decoded: { [operator: string]: string | string[] } = {}\n        for (const q of query) {\n            const [op, value] = q.split(':')\n            decoded[op] = value.split(',')\n        }\n        return decoded\n    }\n\n    private encodeQueryParam(query: { [operator: string]: string | string[] }): string[] {\n        const encoded: string[] = []\n        for (const op of Object.keys(query)) {\n            const value = query[op]\n            if (!value || (Array.isArray(value) && value.length === 0)) {\n                continue\n            }\n            encoded.push(`${op}:${Array.isArray(value) ? value.join(',') : value}`)\n        }\n        return encoded\n    }\n}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[integerValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: IntegerValidatorDirective, multi: true }],\n})\nexport class IntegerValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const required = Validators.required(control)\n        if (required !== null) {\n            return null\n        }\n        if (!Number.isInteger(control.value)) {\n            return { invalidInteger: true }\n        }\n        return null\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'uuid',\n    templateUrl: 'uuid.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UuidComponent {\n    @Input() public value: string\n    @Input() public ngClass = 'text-muted'\n}\n","export default \"<table class=\\\"table table-striped table-borderless mb-0\\\">\\n    <tbody>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.topup-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ determineFees('topupFee') }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.atm-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.atmFee\\n                        ? cardFees.atmFee !== '0'\\n                            ? (cardFees.atmFee | amount: 2) + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.atm-decline-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.atmDeclineFee\\n                        ? cardFees.atmDeclineFee !== '0'\\n                            ? (cardFees.atmDeclineFee | amount: 2) + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">FX</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.fx\\n                        ? cardFees.fx !== '0'\\n                            ? (cardFees.fx | amount: 2) + ' %'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.decline-transaction' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.declineTransaction\\n                        ? (cardFees.declineTransaction | amount: 2) !== '0'\\n                            ? cardFees.declineTransaction + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.replacement-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.replacementFee\\n                        ? cardFees.replacementFee !== '0'\\n                            ? (cardFees.replacementFee | amount: 2) + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr *ngIf=\\\"cardFees.ecomFee && cardFees.ecomFee !== '0'\\\">\\n            <th scope=\\\"row\\\">{{ 'common.ecommerce-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.ecomFee | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr *ngIf=\\\"cardFees.posFee && cardFees.posFee !== '0'\\\">\\n            <th scope=\\\"row\\\">{{ 'common.pos-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.posFee | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.unload-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ determineFees('unloadFundsFee') }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.max-balance' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ cardFees.annualLoadingLimit ? (cardFees.annualLoadingLimit | amount: 2) + ' USD' : ('common.unlimited' | translate) }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.monthly-spending-limit' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.monthlySpendingLimit | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.per-transaction-spending-limit' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.dailyPosEcomLimit | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.daily-atm-limit' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.dailyAtmLimit | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\";","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\nimport { isAccountNumber, isEmail } from '../common.mixin'\n\n@Directive({\n    selector: '[recipientValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: RecipientValidatorDirective, multi: true }],\n})\nexport class RecipientValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (!isAccountNumber(control.value || '', { allowSpaces: true }) && !isEmail(control.value || '')) {\n            return { invalidRecipient: true }\n        }\n        return null\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { CanLoad } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { SessionService } from '../common/services/session.service'\n\n@Injectable()\nexport class OrganizationAuthGuard implements CanLoad {\n    constructor(private session: SessionService) {}\n    public canLoad(): boolean | Observable<boolean> | Promise<boolean> {\n        return this.session.isAuthenticated() && this.session.user.type === 'business'\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    public transform(value: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(value)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { assignInWith } from 'lodash'\nimport { from, Observable, of } from 'rxjs'\nimport { catchError, map } from 'rxjs/operators'\nimport { BootstrapComponentType } from '../common.mixin'\nimport { ConfirmationModalComponent } from '../confirmation-modal/confirmation-modal.component'\n\nexport interface ConfirmationOptions {\n    type?: BootstrapComponentType\n    title?: string\n    text: string\n    confirmText?: string\n    confirmClass?: BootstrapComponentType\n    cancelText?: string\n    cancelClass?: BootstrapComponentType\n    showCancel?: boolean\n}\n\nexport interface InputConfirmationOptions extends ConfirmationOptions {\n    input: 'text'\n    inputLabel?: string\n    inputValidator?(value: string): string | null\n}\n\nexport enum ConfirmationResult {\n    CONFIRMED = 'confirmed',\n    CANCELLED = 'cancelled',\n    DISMISSED = 'dismissed',\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConfirmationService {\n    constructor(private modal: NgbModal) {}\n    public show(options: ConfirmationOptions): Observable<ConfirmationResult>\n    public show(options: InputConfirmationOptions): Observable<[ConfirmationResult, string]>\n    public show(options: InputConfirmationOptions): Observable<ConfirmationResult | [ConfirmationResult, string]> {\n        const modal = this.modal.open(ConfirmationModalComponent, {\n            windowClass: options.type ? 'modal-' + options.type : '',\n            size: 'sm',\n        })\n        const modalInstance = modal.componentInstance as ConfirmationModalComponent\n        assignInWith(modalInstance, options, (initValue, optValue) =>\n            ![undefined, null].includes(optValue) ? optValue : initValue\n        )\n        const mapResult = (result: ConfirmationResult): ConfirmationResult | [ConfirmationResult, string] =>\n            options.input ? [result, modalInstance.inputValue] : result\n        return from(modal.result).pipe(\n            map(confirmed => mapResult(confirmed ? ConfirmationResult.CONFIRMED : ConfirmationResult.CANCELLED)),\n            catchError(() => of(mapResult(ConfirmationResult.DISMISSED)))\n        )\n    }\n}\n","export default \"<div class=\\\"e2e-access-errors callout callout-danger\\\" *ngIf=\\\"whiteListedErrors.length > 0\\\">\\n    <p>\\n        Please complete the verification process to gain access to this feature.\\n        <a href (click)=\\\"$event.preventDefault(); goToVerification()\\\">Verify now</a>\\n    </p>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport BigNumber from 'bignumber.js'\n\n@Pipe({ name: 'pluralize' })\nexport class PluralizePipe implements PipeTransform {\n    public transform(text: string, value: string, otherValue: number = 1): string | null | undefined {\n        return new BigNumber(value || 0).isGreaterThan(otherValue) ? text + (text.endsWith('s') ? 'es' : 's') : text\n    }\n}\n","import { Directive, ElementRef, HostListener, OnChanges, Renderer2 } from '@angular/core'\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms'\n\n@Directive({\n    selector: '[emptyToNull]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: EmptyToNullDirective,\n            multi: true,\n        },\n    ],\n})\nexport class EmptyToNullDirective implements ControlValueAccessor, OnChanges {\n    private lastValue: any\n\n    constructor(private renderer: Renderer2, private element: ElementRef) {}\n\n    public ngOnChanges(): void {\n        // nothing to do\n    }\n\n    public writeValue(value: any): void {\n        const normalizedValue = value === null || value === undefined ? '' : value\n        this.renderer.setProperty(this.element.nativeElement, 'value', normalizedValue)\n    }\n\n    @HostListener('input', ['$event.target.value'])\n    public onInput(value: any): void {\n        if (this.lastValue !== value) {\n            this.lastValue = value\n            this.renderer.setProperty(this.element.nativeElement, 'value', value)\n            this._onChange(value === '' ? null : value)\n        }\n    }\n\n    public registerOnChange(fn: (value: any) => any): void {\n        this._onChange = fn\n    }\n\n    public registerOnTouched(): void {\n        // nothing to do here\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled)\n    }\n\n    private _onChange = (_: any) => {\n        // to be initialized\n    }\n}\n","import { Component } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faExclamationCircle } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { UserService } from '../services/core/user.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\nexport type NoAccessError = 'VerificationRequiredError'\n\n@Component({\n    selector: 'no-access-modal',\n    templateUrl: 'no-access-modal.component.html',\n})\nexport class NoAccessModalComponent {\n    public faExclamationCircle = faExclamationCircle\n    public error: NoAccessError\n    public resendTriggered = false\n    private subscriptions = new Subscription()\n\n    constructor(\n        public activeModal: NgbActiveModal,\n        private router: Router,\n        private userService: UserService,\n        private session: SessionService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    public async goToVerification(): Promise<void> {\n        this.activeModal.dismiss()\n        await this.router.navigate(['/verify'])\n    }\n\n    public async goToRequest(): Promise<void> {\n        this.activeModal.close()\n        await this.router.navigate(['/deposit'])\n    }\n\n    public resend(): void {\n        this.resendTriggered = true\n        this.subscriptions.add(\n            this.userService.resendActivationMail(this.session.user.id).subscribe(\n                () => {\n                    this.toastr.success(this.translate.instant('common.mail-confirmation-sent-again'))\n                },\n                () => {\n                    this.resendTriggered = false\n                }\n            )\n        )\n    }\n}\n\nexport function openNoAccessModal(ngbModal: NgbModal, error: NoAccessError): NgbModalRef {\n    const modal = ngbModal.open(NoAccessModalComponent, {\n        windowClass: 'modal-primary',\n    })\n    modal.componentInstance.error = error\n    return modal\n}\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" [routerLink]=\\\"['/admin/realtime']\\\">\\n    <fa-icon class=\\\"mr-1\\\" [fixedWidth]=\\\"true\\\" [icon]=\\\"faUsers\\\"></fa-icon>\\n    <span class=\\\"badge badge-primary badge-pill\\\">\\n        {{ userCount$ | async | number: '1.0-0' }}\\n    </span>\\n</button>\\n\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../../common/common.module'\nimport { NotificationModule } from '../../common/notification/notification.module'\nimport { NotFoundModule } from '../not-found/not-found.module'\nimport { FooterComponent } from './footer/footer.component'\nimport { HeaderMailboxComponent } from './header/header-mailbox/header-mailbox.component'\nimport { HeaderNotificationsComponent } from './header/header-notifications/header-notifications.component'\nimport { HeaderComponent } from './header/header.component'\nimport { OnlineUsersCountComponent } from './header/online-users-count/online-users-count.component'\nimport { LogoutTimerModalComponent } from './logout-timer/logout-timer-modal.component'\nimport { LogoutTimerService } from './logout-timer/logout-timer.service'\nimport { MenuProfileComponent } from './menu/menu-profile/menu-profile.component'\nimport { MenuComponent } from './menu/menu.component'\nimport { MenuService } from './menu/menu.service'\nimport { ToastrComponent } from './toastr/toastr.component'\n\n@NgModule({\n    declarations: [\n        FooterComponent,\n        HeaderComponent,\n        HeaderNotificationsComponent,\n        HeaderMailboxComponent,\n        OnlineUsersCountComponent,\n        MenuComponent,\n        ToastrComponent,\n        MenuProfileComponent,\n        LogoutTimerModalComponent,\n    ],\n    exports: [FooterComponent, HeaderComponent, MenuComponent, ToastrComponent],\n    providers: [LogoutTimerService, MenuService],\n    imports: [CommonModule, NotFoundModule, NotificationModule],\n})\nexport class CoreModule {}\n","import { HttpClient } from '@angular/common/http'\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { Observable, of } from 'rxjs'\nimport { catchError, debounceTime, distinctUntilChanged, finalize, switchMap } from 'rxjs/operators'\nimport { IAddress } from '../api-interfaces'\nimport { transformAddress } from '../common.mixin'\nimport { countriesSortedByName } from '../countries'\n\n@Component({\n    selector: 'address-form',\n    templateUrl: 'address-form.component.html',\n})\nexport class AddressFormComponent implements OnChanges, AfterViewInit {\n    @Input()\n    public address: IAddress\n    @Output()\n    public readonly addressChange = new EventEmitter<IAddress>()\n    @Input()\n    public prefix: string\n    @Input()\n    public isLarge = false\n    /* Removes most required constraints on inputs as the admin route allows many blank fields */\n    @Input()\n    public requireAll = true\n    @Input()\n    public disabled = false\n    @Input()\n    public showToggleButton = true\n    @ViewChild('addressForm')\n    public form: NgForm\n    public countriesSortedByName = countriesSortedByName\n    public submitted = false\n    /** Street from places api. Street is stored here so that it can be assigned to the this.user.addressLine1 on submit. */\n    public addressLine1: { name: string | null } | { formatted_address: string } | null\n    public placesAutocomplete = new EventEmitter<string>()\n    public placesStream: Observable<any[]> = this.placesAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(text =>\n            text && text.length > 2\n                ? this.http.get<any[]>('/places', {\n                      params: {\n                          search: text,\n                      },\n                  })\n                : of([])\n        ),\n        catchError(() => of([]))\n    )\n\n    constructor(private http: HttpClient) {}\n\n    public ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.addressChange.emit(this.address)\n        })\n    }\n\n    public ngOnChanges(): void {\n        if (!this.address) {\n            this.address = {} as any\n        }\n        this.transformAddress()\n    }\n\n    public submit(): void {\n        this.submitted = true\n    }\n\n    public isValid(): boolean {\n        return !!this.form.valid\n    }\n\n    public setAddress(place: any): void {\n        if (place && place.structured_formatting && place.structured_formatting.main_text) {\n            this.addressLine1 = place.structured_formatting.main_text\n        }\n        if (place && place.place_id) {\n            this.disabled = true\n            this.http\n                .get<any>('/places/' + place.place_id)\n                .pipe(\n                    finalize(() => {\n                        this.disabled = false\n                    })\n                )\n                .subscribe(details => {\n                    const getType = (type: string) =>\n                        details.address_components.find((component: any) => component.types.includes(type))\n                    this.address.addressLine1 = details.name || null\n                    this.address.city = (getType('locality') && getType('locality').long_name) || null\n                    this.address.zipCode = (getType('postal_code') && getType('postal_code').long_name) || null\n                    this.address.state =\n                        (getType('administrative_area_level_1') && getType('administrative_area_level_1').long_name) ||\n                        null\n                    this.address.country = (getType('country') && getType('country').short_name) || null\n                    this.transformAddress()\n                    this.addressChange.emit(this.address)\n                })\n        } else if (place && place.name) {\n            this.address.addressLine1 = place.name\n            this.addressChange.emit(this.address)\n        }\n    }\n\n    public transformAddress(): void {\n        this.addressLine1 = transformAddress(this.address)\n    }\n}\n","export { IntegerValidatorDirective } from './integer-validator.directive'\nexport { MinValidatorDirective } from './min-validator.directive'\nexport { MaxValidatorDirective } from './max-validator.directive'\nexport { NumberValidatorDirective } from './number-validator.directive'\nexport { DecimalValidatorDirective } from './decimal-validator.directive'\nexport { BirthdayValidatorDirective } from './birthday-validator.directive'\nexport { CustomValidatorDirective } from './custom-validator.directive'\nexport { ColorValidatorDirective } from './color-validator.directive'\nexport { RecipientValidatorDirective } from './recipient-validator.directive'\nexport { NameValidatorDirective } from './name-validator.directive'\nexport { IpAddressValidatorDirective } from './ip-address-validator.directive'\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: NumberValidatorDirective,\n            multi: true,\n        },\n    ],\n})\nexport class NumberValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const required = Validators.required(control)\n        if (required !== undefined && required !== null) {\n            return null\n        }\n        // eslint-disable-next-line id-blacklist\n        return /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(control.value) ? null : { number: true }\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { switchMap, take, tap } from 'rxjs/operators'\nimport { Wallet } from '../../common/api-interfaces'\nimport { SessionService } from '../../common/services/session.service'\nimport { WalletsStore } from './wallets.store'\n\n@Injectable({ providedIn: 'root' })\nexport class WalletsService {\n    constructor(protected store: WalletsStore, private session: SessionService, private http: HttpClient) {}\n\n    public fetchAsObservable(): Observable<Wallet[]> {\n        return this.session.userStream.pipe(\n            take(1),\n            switchMap(user =>\n                this.http.get<Wallet[]>(`/users/${user.id}/wallets`, {\n                    params: {\n                        limit: '20',\n                    },\n                })\n            ),\n            tap(wallets => {\n                this.store.set(wallets)\n            })\n        )\n    }\n\n    public fetch(): void {\n        this.fetchAsObservable().subscribe(() => undefined)\n    }\n}\n","export default \"<ng-container *ngIf=\\\"user$ | async; let user\\\">\\n    <a\\n        href\\n        class=\\\"profile\\\"\\n        [ngClass]=\\\"{ open: isOpen }\\\"\\n        (click)=\\\"isOpen = !isOpen; $event.preventDefault()\\\"\\n        [ngbTooltip]=\\\"profileTooltip\\\"\\n        placement=\\\"right\\\"\\n    >\\n        <user-avatar [user]=\\\"user\\\" [border]=\\\"true\\\" [online]=\\\"true\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n        <ng-container *ngTemplateOutlet=\\\"profileTooltip\\\"></ng-container>\\n        <ng-template #profileTooltip>\\n            <div>\\n                <div class=\\\"e2e-profile-name\\\">\\n                    {{ user.name }}\\n                </div>\\n                <span class=\\\"text-primary\\\"\\n                    >{{ currentBalance$ | async | amount: user.preferredCurrency.decimalPlaces }} {{ user.preferredCurrency.code }}</span\\n                >\\n            </div>\\n        </ng-template>\\n        <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faAngleDown\\\" [rotate]=\\\"isOpen ? 180 : undefined\\\" class=\\\"ml-auto\\\"></fa-icon>\\n    </a>\\n    <div class=\\\"list-group\\\" [@toggleBalances]=\\\"isOpen\\\">\\n        <a\\n            href\\n            class=\\\"list-group-item list-group-item-action\\\"\\n            *ngFor=\\\"let wallet of wallets$ | async\\\"\\n            (click)=\\\"changePreferredCurrency(wallet.currency); $event.preventDefault()\\\"\\n        >\\n            <span class=\\\"text-white\\\">{{ wallet.availableBalance | amount: wallet.currency?.decimalPlaces }}</span> {{ wallet.currency?.code }}\\n        </a>\\n    </div>\\n</ng-container>\\n\";","import { Component, Input } from '@angular/core'\nimport { faCheckCircle, faSpinner, faTimesCircle } from '@fortawesome/pro-light-svg-icons'\nimport { File } from '../api-interfaces'\nimport { toStartCase } from '../common.mixin'\n\n@Component({\n    selector: 'file-item',\n    templateUrl: 'file-item.component.html',\n})\nexport class FileItemComponent {\n    @Input()\n    public file: File\n    @Input()\n    public canView = true\n    public faSpinner = faSpinner\n    public faTimesCircle = faTimesCircle\n    public faCheckCircle = faCheckCircle\n    public toStartCase = toStartCase\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ title }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body e2e-confirmation-modal\\\">\\n    <div class=\\\"media align-items-center\\\" [ngClass]=\\\"{ 'mb-3': input }\\\">\\n        <fa-icon class=\\\"mt-1 mr-3\\\" [ngClass]=\\\"'text-' + type\\\" [icon]=\\\"icon\\\" size=\\\"2x\\\"></fa-icon>\\n        <div class=\\\"media-body\\\" [innerHtml]=\\\"text\\\"></div>\\n    </div>\\n    <form #inputForm=\\\"ngForm\\\" class=\\\"form-validation\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" *ngIf=\\\"input\\\" novalidate>\\n        <ng-container *ngIf=\\\"input === 'text'\\\">\\n            <label class=\\\"text-body\\\" for=\\\"input\\\" *ngIf=\\\"inputLabel\\\">{{ inputLabel }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"input\\\"\\n                name=\\\"input\\\"\\n                [(ngModel)]=\\\"inputValue\\\"\\n                #inputText=\\\"ngModel\\\"\\n                [customValidator]=\\\"inputValidator\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"inputText.invalid && (submitted || inputText.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"inputText?.errors?.customError\\\">{{ inputValidator(inputValue) }}</div>\\n            </div>\\n        </ng-container>\\n    </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn mr-2 e2e-confirmation-modal-confirm-btn\\\" [ngClass]=\\\"'btn-' + confirmClass\\\" (click)=\\\"confirm()\\\">\\n        {{ confirmText }}\\n    </button>\\n    <button\\n        *ngIf=\\\"showCancel\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn e2e-confirmation-modal-cancel-btn\\\"\\n        [ngClass]=\\\"'btn-' + cancelClass\\\"\\n        (click)=\\\"activeModal.close(false)\\\"\\n    >\\n        {{ cancelText }}\\n    </button>\\n</div>\\n\";","import { Component, Input, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faUnlockAlt } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { capitalize } from 'lodash'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, finalize } from 'rxjs/operators'\nimport { SessionService, TokenScope, User } from '../services/session.service'\nimport { TokenService } from '../services/token.service'\n\n@Component({\n    selector: 'confirm-password-modal',\n    templateUrl: 'confirm-password.modal.html',\n})\nexport class ConfirmPasswordModalComponent implements OnInit {\n    @ViewChild('passwordForm', { static: true })\n    public passwordForm: NgForm\n    public password: string | undefined\n    public alert: string | undefined\n    @Input()\n    public scope: TokenScope\n    public twoFactorCode?: string | undefined\n    public showTwoFactorForm = false\n    public isLoading = false\n    public faUnlockAlt = faUnlockAlt\n\n    constructor(public modal: NgbActiveModal, private tokenService: TokenService, private session: SessionService) {}\n\n    public ngOnInit(): void {\n        // don't ask for PW for users which use twoFactor auth\n        if (this.session.user.twoFactor) {\n            this.showTwoFactorForm = true\n        }\n    }\n\n    public canSubmit(): boolean {\n        return !this.isLoading && !!this.passwordForm.valid\n    }\n\n    public grantTokenScope(): Observable<User> {\n        this.isLoading = true\n        return this.tokenService\n            .refresh({\n                password: this.session.user.twoFactor ? undefined : this.password,\n                scopes: Array.from(new Set([...this.session.getTokenScopes(), this.scope])),\n                twoFactorCode: this.twoFactorCode,\n            })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                }),\n                catchError(error => {\n                    if (error.name === 'Require2FACodeError') {\n                        this.showTwoFactorForm = true\n                        this.alert = undefined\n                    } else {\n                        this.alert = capitalize(\n                            error.name === 'WrongCredentialsError'\n                                ? 'The password you entered was not correct'\n                                : error.message\n                        )\n                    }\n                    return throwError(error)\n                })\n            )\n    }\n\n    public submit(): void {\n        this.grantTokenScope().subscribe(response => this.modal.close(response))\n    }\n\n    public reset(): void {\n        this.isLoading = false\n        this.password = undefined\n        this.twoFactorCode = undefined\n        this.alert = undefined\n        if (this.passwordForm) {\n            this.passwordForm.resetForm()\n        }\n    }\n}\n","export default \"<nav class=\\\"navbar navbar-dashboard px-0 e2e-header\\\">\\n    <div [ngClass]=\\\"router.isActive('/admin', false) ? 'container-fluid' : 'container'\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"nav-item d-flex align-items-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1 d-lg-none\\\" (click)=\\\"openMobileNav()\\\">\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faBars\\\"></fa-icon>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1 d-none d-lg-block\\\" (click)=\\\"toggleSidebar()\\\">\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faBars\\\"></fa-icon>\\n                </button>\\n            </li>\\n            <li class=\\\"nav-item d-none d-lg-flex align-items-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" [routerLink]=\\\"['/transactions']\\\">\\n                    <fa-icon class=\\\"mr-1\\\" [fixedWidth]=\\\"true\\\" [icon]=\\\"faSearch\\\"></fa-icon> {{ 'header.search' | translate }}\\n                </button>\\n            </li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav\\\" *ngIf=\\\"session.userStream | async; let user\\\">\\n            <li class=\\\"nav-item d-flex align-items-center\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" ngbDropdownToggle>\\n                    <span>{{ translate.currentLang | uppercase }}</span>\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                </button>\\n                <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\n                    <button *ngFor=\\\"let lang of languages\\\" ngbDropdownItem (click)=\\\"changeLanguage(lang)\\\">\\n                        <span>{{ getCountryEmoji(lang) }}&nbsp;</span> {{ mapCountryName(lang) }}\\n                    </button>\\n                </div>\\n            </li>\\n            <ng-container *ngIf=\\\"!router.isActive('/admin', false)\\\">\\n                <li class=\\\"nav-item d-flex align-items-center e2e-header-mailbox\\\">\\n                    <header-mailbox></header-mailbox>\\n                </li>\\n                <li class=\\\"nav-item d-flex align-items-center e2e-header-notifications\\\">\\n                    <header-notifications></header-notifications>\\n                </li>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"router.isActive('/admin', false)\\\">\\n                <li class=\\\"nav-item d-none d-lg-flex align-items-center\\\">\\n                    <online-users-count></online-users-count>\\n                </li>\\n            </ng-container>\\n            <li class=\\\"nav-item d-none d-lg-flex align-items-center\\\">\\n                <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-transparent\\\"\\n                    placement=\\\"left\\\"\\n                    [ngbTooltip]=\\\"'common.reset-session-timeout' | translate\\\"\\n                    (click)=\\\"logoutTimerService.reset()\\\"\\n                >\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faClock\\\" class=\\\"mr-1\\\"></fa-icon>\\n                    <span class=\\\"font-sm font-weight-bold\\\">\\n                        {{ sessionTimeLeft$ | async }}\\n                    </span>\\n                </button>\\n            </li>\\n            <li class=\\\"nav-item d-flex align-items-center e2e-account-button\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" ngbDropdownToggle>\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faUserCircle\\\" class=\\\"mr-1\\\"></fa-icon>\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                </button>\\n                <div class=\\\"dropdown-menu-lg dropdown-menu-right\\\" ngbDropdownMenu>\\n                    <a class=\\\"dropdown-item d-flex flex-column text-center py-3\\\" [routerLink]=\\\"['/account/profile']\\\">\\n                        <div>\\n                            <user-avatar [user]=\\\"user\\\" size=\\\"md\\\" elementClass=\\\"mb-2\\\"></user-avatar>\\n                        </div>\\n                        <div class=\\\"text-primary\\\">{{ user.fullname }}</div>\\n                        <div class=\\\"small text-body\\\">{{ user.email }}</div>\\n                    </a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a ngbDropdownItem [routerLink]=\\\"['/account/security']\\\">{{ 'header.change-password' | translate }}</a>\\n                    <a ngbDropdownItem [routerLink]=\\\"!router.isActive('/admin', false) ? ['/admin'] : ['/dashboard']\\\" *ngIf=\\\"user.role !== null\\\">{{\\n                        (!router.isActive('/admin', false) ? 'header.administration' : 'header.back-to-dashboard') | translate\\n                    }}</a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a ngbDropdownItem href (click)=\\\"logout(); $event.preventDefault()\\\">{{ 'header.logout' | translate }}</a>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'sentenceCase' })\nexport class SentenceCasePipe implements PipeTransform {\n    public transform(value: any): string {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return value.toLowerCase().replace(/(^\\s*\\w|[\\.\\!\\?]\\s*\\w)/g, c => c.toUpperCase())\n    }\n}\n","export default \"<address [ngClass]=\\\"theme === 'input' ? 'address-input' : theme\\\">\\n    <ng-container *ngIf=\\\"user\\\"> {{ user.name }}<br /> </ng-container>\\n    <ng-container *ngIf=\\\"address; else noAddress\\\">\\n        {{ address.addressLine1 }}<br />\\n        <ng-container *ngIf=\\\"address.addressLine2\\\"> {{ address.addressLine2 }}<br /> </ng-container>\\n        <!-- US format -->\\n        {{ address.city ? address.city + ', ' : '' }} {{ address.state }} {{ address.zipCode }}\\n        <ng-container *ngIf=\\\"address.country\\\">\\n            <br />\\n            {{ countryMap[address.country]?.name }}\\n        </ng-container>\\n    </ng-container>\\n    <ng-template #noAddress>{{ theme === 'input' ? '-' : '' }}</ng-template>\\n</address>\\n\";","import { Injectable } from '@angular/core'\nimport { Meta } from '@angular/platform-browser'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ViewportService {\n    public static readonly MINIMUM_WIDTH = 375\n    private originalViewport: string | undefined\n\n    constructor(private meta: Meta) {}\n\n    public update(): void {\n        // Ensures a minimum viewport width\n        const metaEl = this.meta.getTag('name = \"viewport\"')\n        if (!metaEl) {\n            return\n        }\n        if (window.outerWidth < ViewportService.MINIMUM_WIDTH) {\n            if (!this.originalViewport) {\n                this.originalViewport = metaEl.content\n                metaEl.content = `width=${ViewportService.MINIMUM_WIDTH}, user-scalable=0`\n            }\n        } else {\n            if (this.originalViewport) {\n                metaEl.content = this.originalViewport\n                this.originalViewport = undefined\n            }\n        }\n    }\n}\n","export default \"<ng-select\\n    [ngClass]=\\\"{ 'ng-select-lg': isLarge }\\\"\\n    name=\\\"currency-select\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [(ngModel)]=\\\"currency\\\"\\n    [items]=\\\"balances$ | async\\\"\\n    [clearable]=\\\"false\\\"\\n    [searchable]=\\\"false\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [required]=\\\"required\\\"\\n    (change)=\\\"currencyChange.emit($event)\\\"\\n    [compareWith]=\\\"compareCurrencies\\\"\\n    #currencyInput=\\\"ngModel\\\"\\n>\\n    <ng-template ng-label-tmp let-item=\\\"item\\\">\\n        <b class=\\\"mr-1\\\">\\n            <ng-container [ngSwitch]=\\\"item.code\\\">\\n                <ng-container *ngSwitchCase=\\\"'AU'\\\"> Gold </ng-container>\\n                <ng-container *ngSwitchCase=\\\"'AG'\\\"> Silver </ng-container>\\n                <ng-container *ngSwitchDefault>{{ useFullName ? item.name : item.code }}</ng-container>\\n            </ng-container>\\n        </b>\\n        <span class=\\\"small text-muted\\\">\\n            <ng-container *ngIf=\\\"!(appName === 'sgpmx' && salesProceeds); else sgpmxLabel\\\">\\n                {{ item.balance | amount: item.decimalPlaces }} {{ item.code }}\\n                <ng-container *ngIf=\\\"['crypto', 'metal'].includes(item.type) && !item.code.includes('USD')\\\">\\n                    (≈ {{ item.usdValue | amount: 2 }} USD)\\n                </ng-container>\\n            </ng-container>\\n            <ng-template #sgpmxLabel>{{ item.salesProceeds | amount: 2 }} {{ item.code }}</ng-template>\\n        </span>\\n    </ng-template>\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n        <ng-container [ngSwitch]=\\\"item.code\\\">\\n            <ng-container *ngSwitchCase=\\\"'AU'\\\"> Gold </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'AG'\\\"> Silver </ng-container>\\n            <ng-container *ngSwitchDefault>{{ useFullName ? item.name : item.code }}</ng-container>\\n        </ng-container>\\n        <span class=\\\"float-right small text-muted\\\">\\n            <ng-container *ngIf=\\\"!(appName === 'sgpmx' && salesProceeds); else sgpmxOption\\\">\\n                {{ item.balance | amount: item.decimalPlaces }} {{ item.code }}\\n                <ng-container *ngIf=\\\"['crypto', 'metal'].includes(item.type) && !item.code.includes('USD')\\\">\\n                    (≈ {{ item.usdValue | amount: 2 }} USD)\\n                </ng-container>\\n            </ng-container>\\n            <ng-template #sgpmxOption>{{ item.salesProceeds | amount: 2 }} {{ item.code }}</ng-template>\\n        </span>\\n    </ng-template>\\n</ng-select>\\n\";","import { Injectable } from '@angular/core'\n\nexport enum MobileNavLayout {\n    HIDDEN = '',\n    VISIBLE = 'sidebar-show',\n}\n\nexport enum SidebarLayout {\n    DEFAULT = '',\n    TOGGLED = 'sidebar-toggled',\n}\n\n@Injectable()\nexport class MenuService {\n    public mobileNav: MobileNavLayout = MobileNavLayout.HIDDEN\n\n    public sidebar: SidebarLayout = SidebarLayout.DEFAULT\n\n    public get style(): string {\n        return [this.mobileNav, this.sidebar].join(' ')\n    }\n}\n","export default \"<form #beneficiaryDetailsForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" class=\\\"form-validation\\\" novalidate>\\n    <div class=\\\"pt-2 mb-1\\\"></div>\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <h6 class=\\\"text-primary pr-1\\\">{{ 'common.beneficiary' | translate }}</h6>\\n        <hr class=\\\"w-100 m-0 pb-2\\\" />\\n    </div>\\n    <ng-container *ngIf=\\\"beneficiary.method !== 'crypto'\\\">\\n        <div class=\\\"form-group\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"accountHolder\\\">{{ 'common.account-name' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"accountHolder\\\"\\n                name=\\\"accountHolder\\\"\\n                [(ngModel)]=\\\"beneficiary.accountHolder\\\"\\n                emptyToNull\\n                #accountHolder=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"accountHolder.invalid && (submitted || accountHolder.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountHolder?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n    </ng-container>\\n    <div class=\\\"form-group\\\">\\n        <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"accountNumber\\\">\\n            {{ getAccountNumberLabel() }}\\n        </label>\\n        <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n            id=\\\"accountNumber\\\"\\n            name=\\\"accountNumber\\\"\\n            [(ngModel)]=\\\"beneficiary.accountNumber\\\"\\n            emptyToNull\\n            #accountNumber=\\\"ngModel\\\"\\n            [disabled]=\\\"disabled\\\"\\n            required\\n        />\\n        <div *ngIf=\\\"accountNumber.invalid && (submitted || accountNumber.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"beneficiary.method === 'crypto'\\\">\\n        <div class=\\\"form-group\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"accountHolder\\\">\\n                {{ 'common.wallet-label' | translate }}\\n                <small class=\\\"text-muted\\\">({{ 'common.optional' | translate }})</small>\\n            </label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"accountHolder\\\"\\n                name=\\\"accountHolder\\\"\\n                [(ngModel)]=\\\"beneficiary.accountHolder\\\"\\n                emptyToNull\\n                #accountHolder=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n            />\\n        </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"beneficiary.method === 'swift' || beneficiary.method === 'local'\\\">\\n        <div class=\\\"pt-2 mb-1\\\"></div>\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'beneficiary-details-form.beneficiary-address' | translate | titlecase }}</h6>\\n            <hr class=\\\"w-100 m-0 pb-2\\\" />\\n        </div>\\n        <address-form\\n            [(address)]=\\\"beneficiary.accountHolderAddress\\\"\\n            [isLarge]=\\\"isLarge\\\"\\n            [requireAll]=\\\"requireAll\\\"\\n            [disabled]=\\\"disabled\\\"\\n            prefix=\\\"accountHolder\\\"\\n            #accountHolderAddressForm\\n        ></address-form>\\n        <div class=\\\"pt-2 mb-1\\\"></div>\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'common.beneficiary-bank' | translate }}</h6>\\n            <hr class=\\\"w-100 m-0 pb-2\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"bankName\\\">{{ 'common.name' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"bankName\\\"\\n                name=\\\"bankName\\\"\\n                [(ngModel)]=\\\"beneficiary.bankName\\\"\\n                emptyToNull\\n                #bankName=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"bankName.invalid && (submitted || bankName.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"bankName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"showSwift()\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"bankSwiftCode\\\">\\n                {{ getSwiftLabel() }} <small class=\\\"text-muted\\\" *ngIf=\\\"!isIntermediateBankCollapsed\\\">({{ 'common.optional' | translate }})</small>\\n            </label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"bankSwiftCode\\\"\\n                name=\\\"bankSwiftCode\\\"\\n                [(ngModel)]=\\\"beneficiary.bankSwiftCode\\\"\\n                emptyToNull\\n                #bankSwiftCode=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"isIntermediateBankCollapsed\\\"\\n            />\\n            <div *ngIf=\\\"bankSwiftCode.invalid && (submitted || bankSwiftCode.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"bankSwiftCode?.errors?.required\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"showRoutingNumber()\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"routingNumber\\\">{{ getRoutingNumberLabel() }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"routingNumber\\\"\\n                name=\\\"routingNumber\\\"\\n                [(ngModel)]=\\\"beneficiary.routingNumber\\\"\\n                emptyToNull\\n                #routingNumber=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"routingNumber.invalid && (submitted || routingNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"routingNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"pt-2 mb-1\\\"></div>\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'beneficiary-details-form.beneficiary-bank-address' | translate }}</h6>\\n            <hr class=\\\"w-100 m-0 pb-2\\\" />\\n        </div>\\n        <address-form\\n            [(address)]=\\\"beneficiary.bankAddress\\\"\\n            [isLarge]=\\\"isLarge\\\"\\n            [requireAll]=\\\"requireAll\\\"\\n            [disabled]=\\\"disabled\\\"\\n            prefix=\\\"bank\\\"\\n            #bankAddressForm\\n        ></address-form>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"beneficiary.method === 'swift'\\\">\\n            <a\\n                href\\n                class=\\\"d-block\\\"\\n                (click)=\\\"\\n                    isIntermediateBankCollapsed = !isIntermediateBankCollapsed;\\n                    beneficiary.intermediateBankName = null;\\n                    beneficiary.intermediateBankSwiftCode = null;\\n                    beneficiary.intermediateBankAddress = null;\\n                    $event.preventDefault()\\n                \\\"\\n                >{{ isIntermediateBankCollapsed ? '+ ' + ('common.add' | translate) : '-' + ('common.remove' | translate) }}\\n                {{ 'common.intermediate-bank' | translate | lowercase }}</a\\n            >\\n        </div>\\n        <ng-container *ngIf=\\\"!isIntermediateBankCollapsed\\\">\\n            <div class=\\\"pt-2 mb-1\\\"></div>\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'common.intermediate-bank' | translate }}</h6>\\n                <hr class=\\\"w-100 m-0 pb-2\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"intermediateBankName\\\">{{ 'common.name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                    id=\\\"intermediateBankName\\\"\\n                    name=\\\"intermediateBankName\\\"\\n                    [(ngModel)]=\\\"beneficiary.intermediateBankName\\\"\\n                    emptyToNull\\n                    #intermediateBankName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"intermediateBankName.invalid && (submitted || intermediateBankName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"intermediateBankName?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"intermediateBankSwiftCode\\\">{{ 'common.swift-code' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                    id=\\\"intermediateBankSwiftCode\\\"\\n                    name=\\\"intermediateBankSwiftCode\\\"\\n                    [(ngModel)]=\\\"beneficiary.intermediateBankSwiftCode\\\"\\n                    emptyToNull\\n                    #intermediateBankSwiftCode=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"intermediateBankSwiftCode.invalid && (submitted || intermediateBankSwiftCode.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"intermediateBankSwiftCode?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"pt-2 mb-1\\\"></div>\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'common.intermediate-bank' | translate }} {{ 'common.address' | translate }}</h6>\\n                <hr class=\\\"w-100 m-0 pb-2\\\" />\\n            </div>\\n            <address-form\\n                [(address)]=\\\"beneficiary.intermediateBankAddress\\\"\\n                [isLarge]=\\\"isLarge\\\"\\n                [requireAll]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                prefix=\\\"intermediateBank\\\"\\n                #intermediateBankAddressForm\\n            ></address-form>\\n        </ng-container>\\n    </ng-container>\\n</form>\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row no-gutters\\\">\\n        <div class=\\\"col-lg-12 footer-left\\\">\\n            <ng-container *ngIf=\\\"showCopyRight()\\\"> &copy; {{ year }} Aerapass Ltd. - All rights reserved. </ng-container>\\n        </div>\\n        <div class=\\\"col-lg-12 footer-right\\\">\\n            <ul>\\n                <li>\\n                    <a [routerLink]=\\\"['/fees']\\\" class=\\\"text-muted\\\">{{ 'common.fee-schedule' | translate | titlecase }}</a>\\n                </li>\\n                <li *ngIf=\\\"helpCenterUrl\\\">\\n                    <a [href]=\\\"helpCenterUrl\\\" class=\\\"text-muted\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{ 'footer.help-center' | translate }}</a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/terms']\\\" class=\\\"text-muted\\\">{{ 'common.terms-conditions' | translate }}</a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/privacy']\\\" class=\\\"text-muted\\\">{{ 'common.data-privacy-notice' | translate | titlecase }}</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core'\nimport { environment } from 'src/environments/environment'\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent {\n    public year: number = new Date().getFullYear()\n    public displayName = environment.displayName\n    public helpCenterUrl = window.HELP_CENTER_URL\n\n    public showCopyRight(): boolean {\n        switch (environment.appName) {\n            case 'etransfer':\n                return false\n            default:\n                return true\n        }\n    }\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Component, Input } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { environment } from 'src/environments/environment'\nimport { IUser } from '../api-interfaces'\n\n@Component({\n    selector: 'user-display',\n    templateUrl: 'user.component.html',\n})\nexport class UserComponent {\n    public appName = environment.appName\n    public displayName = environment.displayName\n    @Input()\n    public user: IUser\n    @Input()\n    public displayAccountNumber = false\n    @Input()\n    public displayBadges = true\n    @Input()\n    public disableLink = false\n    @Input()\n    public maxCharacters = 30\n\n    constructor(private router: Router) {}\n\n    public handleClick(event: MouseEvent, userId: string): void {\n        event.preventDefault()\n\n        if (!this.disableLink) {\n            this.router.navigate(['/admin/accounts/users', userId])\n        }\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { BehaviorSubject, interval, merge, Observable, of } from 'rxjs'\nimport { tap, mergeMap, filter } from 'rxjs/operators'\nimport { AlertService } from 'src/app/common/services/alert.service'\nimport { LogoutService } from 'src/app/common/services/logout.service'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { ToastrService } from 'src/app/common/services/toastr.service'\nimport { TokenService } from 'src/app/common/services/token.service'\nimport { LogoutTimerModalComponent } from './logout-timer-modal.component'\n\n@Injectable()\nexport class LogoutTimerService {\n    public leftInMinutes$ = new BehaviorSubject<number>(-1)\n    public expiryTime$: Observable<number>\n\n    constructor(\n        public session: SessionService,\n        private logout: LogoutService,\n        private alerts: AlertService,\n        private tokenService: TokenService,\n        private toastr: ToastrService,\n        private ngbModal: NgbModal,\n        public translate: TranslateService\n    ) {}\n\n    public init(): void {\n        let modal: NgbModalRef | undefined\n        merge(of(undefined), this.session.tokenChangeEvent, interval(10000))\n            .pipe(\n                filter(() => this.session.hasValidRefreshToken()),\n                tap(() => {\n                    const secondsLeft = this.session.getExpiryTimeInSeconds()\n                    this.leftInMinutes$.next(Math.ceil(secondsLeft / 60))\n                    if (secondsLeft <= 60 && !modal) {\n                        modal = this.ngbModal.open(LogoutTimerModalComponent, {\n                            windowClass: 'modal-primary',\n                        })\n                        const handler = () => (modal = undefined)\n                        modal.result.then(handler, handler)\n                    }\n                }),\n                filter(() => this.session.getExpiryTimeInSeconds() < 15),\n                mergeMap(() => this.logout.logout())\n            )\n            .subscribe(() => {\n                this.alerts.add({ message: this.translate.instant('common.your-session-expired'), severity: 'warning' })\n            })\n    }\n\n    public reset(): void {\n        this.tokenService.refresh().subscribe(() => {\n            this.toastr.success(this.translate.instant('logout-timer.your-session-has-been-refreshed'))\n        })\n    }\n}\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { AddressFormComponent } from '../../address-form/address-form.component'\nimport { IBeneficiary, ICurrency } from '../../api-interfaces'\nimport { countriesSortedByName } from '../../countries'\n\n@Component({\n    selector: 'beneficiary-details-form',\n    templateUrl: 'beneficiary-details-form.component.html',\n})\nexport class BeneficiaryDetailsFormComponent implements OnInit, OnDestroy {\n    @Input()\n    public beneficiary: IBeneficiary\n    @Input()\n    public currency?: ICurrency\n    @Input()\n    public isLarge = false\n    @Input()\n    public disabled = false\n    @Input()\n    public requireAll = true\n    @ViewChild('beneficiaryDetailsForm')\n    public form: NgForm\n    @ViewChild('accountHolderAddressForm')\n    public accountHolderAddressForm: AddressFormComponent\n    @ViewChild('bankAddressForm')\n    public bankAddressForm: AddressFormComponent\n    @ViewChild('intermediateBankAddressForm')\n    public intermediateBankAddressForm: AddressFormComponent\n    public countriesSortedByName = countriesSortedByName\n    public isIntermediateBankCollapsed = true\n    public submitted = false\n    public subscriptions = new Subscription()\n\n    constructor(public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        if (this.beneficiary.intermediateBankAddress) {\n            this.isIntermediateBankCollapsed = false\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public submit(): void {\n        this.submitted = true\n        if (this.accountHolderAddressForm) {\n            this.accountHolderAddressForm.submit()\n        }\n        if (this.bankAddressForm) {\n            this.bankAddressForm.submit()\n        }\n        if (this.intermediateBankAddressForm) {\n            this.intermediateBankAddressForm.submit()\n        }\n        Object.assign(this.beneficiary, {\n            // Remove intermediateBank if collapsed\n            intermediateBankName: this.isIntermediateBankCollapsed ? null : this.beneficiary.intermediateBankName,\n            intermediateBankSwiftCode: this.isIntermediateBankCollapsed\n                ? null\n                : this.beneficiary.intermediateBankSwiftCode,\n            intermediateBankAddress: this.isIntermediateBankCollapsed ? null : this.beneficiary.intermediateBankAddress,\n        })\n    }\n\n    public isValid(): boolean {\n        let valid = !!this.form.valid\n        if (this.accountHolderAddressForm) {\n            valid = valid && this.accountHolderAddressForm.isValid()\n        }\n        if (this.bankAddressForm) {\n            valid = valid && this.bankAddressForm.isValid()\n        }\n        if (this.intermediateBankAddressForm && !this.isIntermediateBankCollapsed) {\n            valid = valid && this.intermediateBankAddressForm.isValid()\n        }\n        return valid\n    }\n\n    public reset(): void {\n        this.submitted = false\n        this.form.reset()\n        if (this.accountHolderAddressForm) {\n            this.accountHolderAddressForm.form.reset()\n            this.accountHolderAddressForm.submitted = false\n        }\n        if (this.bankAddressForm) {\n            this.bankAddressForm.form.reset()\n            this.bankAddressForm.submitted = false\n        }\n        if (this.intermediateBankAddressForm) {\n            this.intermediateBankAddressForm.form.reset()\n            this.intermediateBankAddressForm.submitted = false\n        }\n    }\n\n    /** For local method branching */\n\n    public getAccountNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.getCurrencyCode() === 'EUR') {\n                return 'IBAN'\n            }\n        }\n        if (this.beneficiary.method === 'crypto') {\n            return `${this.translate.instant('common.wallet-address')}`\n        }\n        return `${this.translate.instant('common.account-number')}`\n    }\n\n    public showSwift(): boolean {\n        return !(this.beneficiary.method === 'local' && this.getCurrencyCode() === 'USD')\n    }\n\n    public getSwiftLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.getCurrencyCode() === 'AUD') {\n                return 'BSB'\n            }\n            if (this.getCurrencyCode() === 'EUR') {\n                return 'BIC'\n            }\n            if (this.getCurrencyCode() === 'GBP') {\n                return 'Sort Code'\n            }\n        }\n        return 'SWIFT Code'\n    }\n\n    public showRoutingNumber(): boolean {\n        return this.beneficiary.method === 'local' && ['AUD', 'CAD', 'USD'].includes(this.getCurrencyCode())\n    }\n\n    public getRoutingNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.getCurrencyCode() === 'AUD') {\n                return 'Pay ID'\n            }\n            if (this.getCurrencyCode() === 'CAD') {\n                return 'Transit Code'\n            }\n        }\n        return 'Routing Number'\n    }\n\n    private getCurrencyCode(): string {\n        return this.currency?.code || this.beneficiary.currency?.code\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { faCaretDown } from '@fortawesome/pro-solid-svg-icons'\nimport { xor } from 'lodash'\nimport { forkJoin, Subject, Subscription } from 'rxjs'\nimport { switchMap, take } from 'rxjs/operators'\nimport { CurrenciesQuery } from '../../store/currencies/currencies.query'\nimport { IBeneficiary, ICurrency, IFee, IUser } from '../api-interfaces'\n\n@Component({\n    selector: 'currency-select-tab',\n    templateUrl: 'currency-select-tab.component.html',\n    styleUrls: ['currency-select-tab.component.scss'],\n})\nexport class CurrencySelectTabComponent implements OnInit {\n    @Input()\n    public currency: ICurrency\n    @Output()\n    public readonly currencyChange = new EventEmitter<ICurrency>()\n    @Input()\n    public user: IUser | null\n    @Input()\n    public useShortCurrencyNames = false\n    @Input()\n    public moreButtonOptions: { text: string; hasCaret: boolean } = { text: '+', hasCaret: false }\n    @Input()\n    public type: 'deposit-instructions' | 'fees' = 'fees'\n    public usd: ICurrency\n    public setCurrencies: ICurrency[] = []\n    public unsetCurrencies: ICurrency[] = []\n\n    public faCaretDown = faCaretDown\n\n    private fetchEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(private currenciesQuery: CurrenciesQuery, private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.currenciesQuery\n            .selectEntity('USD')\n            .pipe(take(1))\n            .subscribe(usd => (this.usd = usd!))\n\n        this.subscriptions.add(\n            this.fetchEvent\n                .pipe(\n                    switchMap(() =>\n                        forkJoin<ICurrency[], (IFee | IBeneficiary)[]>([\n                            this.currenciesQuery\n                                .selectAll({\n                                    filterBy: [\n                                        entity => {\n                                            switch (this.type) {\n                                                case 'deposit-instructions':\n                                                    return entity.code !== 'USD' && entity.type === 'fiat'\n                                                default:\n                                                    return entity.code !== 'USD'\n                                            }\n                                        },\n                                    ],\n                                })\n                                .pipe(take(1)),\n                            this.type === 'deposit-instructions'\n                                ? this.http.get<IBeneficiary[]>(`/deposit-instructions`, {\n                                      params: this.user ? { userId: this.user.id } : {},\n                                  })\n                                : this.http.get<IFee[]>(`/fees`, { params: this.user ? { userId: this.user.id } : {} }),\n                        ])\n                    )\n                )\n                .subscribe(([currencies, items]) => {\n                    this.setCurrencies = currencies.filter(currency =>\n                        items.find(item => item.currency.code === currency.code)\n                    )\n                    this.unsetCurrencies = xor(currencies, this.setCurrencies)\n                })\n        )\n        this.fetchEvent.next()\n    }\n\n    public selectCurrency(code: string): void {\n        this.subscribeCurrencyQuery(code)\n        this.refreshTabs()\n    }\n\n    public createTabSelectedCurrency(currency: ICurrency): void {\n        this.setCurrencies.push(currency)\n        this.unsetCurrencies = this.unsetCurrencies.filter(data => data !== currency)\n        this.subscribeCurrencyQuery(currency.code)\n    }\n\n    public isMoreTabActive(): boolean {\n        return this.unsetCurrencies.map(currency => currency.code).indexOf(this.currency.code) > -1\n    }\n\n    public refreshTabs(): void {\n        this.fetchEvent.next()\n    }\n\n    public getCurrencyName(currency: ICurrency | undefined): string {\n        if (!currency) {\n            return ''\n        }\n        return this.useShortCurrencyNames ? currency.code : `${currency.code} - ${currency.name}`\n    }\n\n    private subscribeCurrencyQuery(code: string) {\n        this.currenciesQuery\n            .selectEntity(code)\n            .pipe(take(1))\n            .subscribe(currency => {\n                this.currencyChange.next(currency)\n            })\n    }\n}\n","export default \"<ul class=\\\"nav nav-tabs b-b-0 fee-schedule-tabs\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a\\n            class=\\\"nav-link clickable\\\"\\n            [ngClass]=\\\"{ active: currency?.code === usd?.code }\\\"\\n            (click)=\\\"selectCurrency(usd?.code); $event.preventDefault()\\\"\\n            >{{ getCurrencyName(usd) }}</a\\n        >\\n    </li>\\n    <li *ngFor=\\\"let item of setCurrencies\\\" class=\\\"nav-item\\\">\\n        <a\\n            class=\\\"nav-link clickable\\\"\\n            [ngClass]=\\\"{ active: currency?.code === item.code }\\\"\\n            (click)=\\\"selectCurrency(item.code); $event.preventDefault()\\\"\\n            >{{ getCurrencyName(item) | truncate: false:14 }}</a\\n        >\\n    </li>\\n    <li class=\\\"nav-item\\\" ngbDropdown container=\\\"body\\\" placement=\\\"bottom-left\\\" *ngIf=\\\"unsetCurrencies.length\\\">\\n        <a class=\\\"nav-link clickable\\\" [ngClass]=\\\"{ active: isMoreTabActive() }\\\" ngbDropdownToggle>\\n            {{ moreButtonOptions.text }}\\n            <fa-icon *ngIf=\\\"moreButtonOptions.hasCaret\\\" [icon]=\\\"faCaretDown\\\"></fa-icon>\\n        </a>\\n        <div ngbDropdownMenu>\\n            <div\\n                class=\\\"clickable\\\"\\n                ngbDropdownItem\\n                *ngFor=\\\"let item of unsetCurrencies\\\"\\n                (click)=\\\"createTabSelectedCurrency(item); $event.preventDefault()\\\"\\n            >\\n                {{ getCurrencyName(item) }}\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n\";","export default \"<iframe [src]=\\\"url | safeResourceUrl\\\" allowfullscreen></iframe>\\n\";","export default \"<a *ngIf=\\\"file.status === 'safe' && file.signedUrl && canView; else processing\\\" [href]=\\\"file.signedUrl\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\\n    <div>{{ file.name }}</div>\\n</a>\\n<ng-template #processing>\\n    <div *ngIf=\\\"file.status === 'processing'; else infected\\\" class=\\\"text-warning\\\">\\n        {{ file.name }} <small>({{ 'common.scanning' | translate }})</small>\\n    </div>\\n</ng-template>\\n<ng-template #infected>\\n    <div *ngIf=\\\"file.status === 'infected'; else plain\\\" class=\\\"text-danger\\\">\\n        {{ file.name }} <small>({{ 'common.virus-found' | translate }})</small>\\n    </div>\\n</ng-template>\\n<ng-template #plain>\\n    <div class=\\\"text-primary\\\">{{ file.name }}</div>\\n</ng-template>\\n<small *ngIf=\\\"file.userFile; else alternativeInfo\\\" class=\\\"text-muted cursor\\\"\\n    >{{ file.size / 1024 / 1024 | number: '.2' }} MB / {{ file.userFile.type ? toStartCase(file.userFile.type) : 'Undeclared' }}</small\\n>\\n<ng-template #alternativeInfo>\\n    <small class=\\\"text-muted\\\">{{ file.size / 1024 / 1024 | number: '.2' }} MB</small>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common.module'\nimport { NotificationComponent } from './notification.component'\n\n@NgModule({\n    declarations: [NotificationComponent],\n    exports: [NotificationComponent],\n    imports: [CommonModule],\n})\nexport class NotificationModule {}\n","export default \"<div class=\\\"table-responsive\\\">\\n    <ul *ngIf=\\\"user.type === 'business'\\\" class=\\\"nav nav-pills nav-fill mb-2\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'business' }\\\" (click)=\\\"currentTab = 'business'; $event.preventDefault()\\\">\\n                {{ 'common.business' | translate }}\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'manager' }\\\" (click)=\\\"currentTab = 'manager'; $event.preventDefault()\\\">\\n                {{ 'common.manager' | translate }}\\n            </a>\\n        </li>\\n    </ul>\\n    <ng-container *ngIf=\\\"user.type === 'personal' || (user.type === 'business' && currentTab === 'manager'); else business\\\">\\n        <table *ngIf=\\\"details\\\" class=\\\"table table-striped table-bordered\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let property of fields\\\">\\n                    <td class=\\\"text-gray\\\">{{ getProperty(property) }}</td>\\n                    <td>\\n                        <ng-container *ngIf=\\\"property !== 'address'; else address\\\">\\n                            {{ getValue(property) }}\\n                        </ng-container>\\n                        <ng-template #address>\\n                            <postal-address [address]=\\\"details.address\\\"></postal-address>\\n                        </ng-template>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </ng-container>\\n    <ng-template #business>\\n        <table *ngIf=\\\"businessDetails\\\" class=\\\"table table-striped table-bordered\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let property of businessFields\\\">\\n                    <td class=\\\"text-gray\\\">{{ getProperty(property) }}</td>\\n                    <td>\\n                        <ng-container *ngIf=\\\"!['address', 'businessAddress'].includes(property)\\\">\\n                            {{ getBusinessValue(property) }}\\n                        </ng-container>\\n                        <postal-address *ngIf=\\\"property === 'address'\\\" [address]=\\\"businessDetails.address\\\"></postal-address>\\n                        <postal-address *ngIf=\\\"property === 'businessAddress'\\\" [address]=\\\"businessDetails.businessAddress\\\"></postal-address>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </ng-template>\\n</div>\\n\";","export default \"<ngb-progressbar [type]=\\\"color\\\" [value]=\\\"progress\\\" height=\\\"0.4rem\\\"></ngb-progressbar>\\n\";","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: MinValidatorDirective,\n            multi: true,\n        },\n    ],\n})\nexport class MinValidatorDirective implements Validator, OnChanges {\n    @Input()\n    public min: number\n    private onChanges: () => void\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.min) {\n            this.min = changes.min.currentValue\n            if (this.onChanges) {\n                this.onChanges()\n            }\n        }\n    }\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (this.min === undefined || this.min === null) {\n            return null\n        }\n        const required = Validators.required(control)\n        if (required !== null) {\n            return null\n        }\n        const v = +control.value\n        return v >= +this.min ? null : { actualValue: v, requiredValue: +this.min, min: true }\n    }\n\n    public registerOnValidatorChange(fn: () => void): void {\n        this.onChanges = fn\n    }\n}\n","export default \"<span [ngClass]=\\\"{ 'text-line-through': user.status !== 'pending' }\\\">\\n    {{ 'common.remember-email' | translate }}\\n    <a href (click)=\\\"$event.preventDefault(); resend()\\\" *ngIf=\\\"user.status === 'pending' && !resendTriggered\\\">{{ 'common.resend' | translate }}</a>\\n</span>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { ComponentFactoryResolver, Injectable, Type, ViewContainerRef, ViewRef } from '@angular/core'\nimport { interval, merge, of } from 'rxjs'\nimport { catchError, map, switchMap } from 'rxjs/operators'\nimport { Setting } from '../../common/api-interfaces'\n\n@Injectable()\nexport class StatusMessageService {\n    public message: string | undefined\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private http: HttpClient) {}\n\n    public initializeListener(viewContainerRef: ViewContainerRef, statusMessageComponent: Type<any>): void {\n        let insertedViewRef: ViewRef | undefined\n        merge(of(undefined), interval(120 * 1000))\n            .pipe(\n                switchMap(() =>\n                    this.http\n                        .get<Setting>('/settings/status-message', {\n                            headers: { 'X-Ignore-Error-Handling': 'true' },\n                        })\n                        .pipe(\n                            // ignore errors\n                            catchError(() => []),\n                            map(setting => setting && (setting.value as string))\n                        )\n                )\n            )\n            .subscribe(message => {\n                if (this.message === message) {\n                    // no change in status\n                    return\n                }\n                const wasEmpty = !this.message\n                this.message = message\n                if (wasEmpty && !!this.message) {\n                    // inject status message to given outlet, we have the <status-message-outlet> component therefore\n                    const componentFactory =\n                        this.componentFactoryResolver.resolveComponentFactory(statusMessageComponent)\n                    const component = componentFactory.create(viewContainerRef.parentInjector)\n                    // insert into the outlet, to maintain DOM structure\n                    insertedViewRef = viewContainerRef.insert(component.hostView)\n                } else if (!this.message && insertedViewRef) {\n                    insertedViewRef.destroy()\n                    insertedViewRef = undefined\n                }\n            })\n    }\n}\n","import { Directive, Input } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[decimalValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: DecimalValidatorDirective, multi: true }],\n})\nexport class DecimalValidatorDirective implements Validator {\n    @Input()\n    public decimal: number\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (!control) {\n            return null\n        }\n        // Determines if control passes the required validator\n        const required = Validators.required(control)\n        // Determines if control has required validator\n        const isRequired = control.validator && control.validator({} as AbstractControl)\n        if (isRequired !== null && required !== null) {\n            return null\n        }\n        const decimal = control.value?.toString().split('.')[1]\n        if (decimal && decimal.length > this.decimal) {\n            return { invalidDecimal: true }\n        }\n        return null\n    }\n}\n","export default \"<div class=\\\"toastr-anchor\\\">\\n    <div\\n        *ngFor=\\\"let toast of toasts\\\"\\n        [@flyInOut]\\n        (click)=\\\"hide(toast)\\\"\\n        (mouseover)=\\\"stopTimer(toast)\\\"\\n        (mouseleave)=\\\"startTimer(toast)\\\"\\n        class=\\\"toast toast-{{ toast.type }} media\\\"\\n    >\\n        <div class=\\\"d-flex pt-1 mr-3\\\">\\n            <fa-icon [icon]=\\\"toast.icon\\\" size=\\\"2x\\\"></fa-icon>\\n        </div>\\n        <div class=\\\"media-body\\\">\\n            <p class=\\\"toast-message\\\">\\n                <b>{{ toast.title }}</b>\\n            </p>\\n            <p class=\\\"toast-message\\\">{{ toast.message }}</p>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component, Input } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n    selector: 'video-player',\n    templateUrl: 'video-player.component.html',\n})\nexport class VideoPlayerComponent {\n    @Input()\n    public url: string\n}\n\nexport function playVideo(ngbModal: NgbModal): (url: string) => void {\n    return (url: string) => {\n        const videoPlayer = ngbModal.open(VideoPlayerComponent, {\n            windowClass: 'video-player',\n            size: 'lg',\n        })\n        ;(videoPlayer.componentInstance as VideoPlayerComponent).url = url\n    }\n}\n","export default \"<form #addressForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" class=\\\"form-validation e2e-address-form\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}addressLine1\\\">{{\\n            'address-form.street-and-number' | translate\\n        }}</label>\\n        <ng-select\\n            id=\\\"{{ prefix }}addressLine1\\\"\\n            name=\\\"addressLine1\\\"\\n            bindLabel=\\\"name\\\"\\n            [(ngModel)]=\\\"addressLine1\\\"\\n            (change)=\\\"setAddress($event)\\\"\\n            #addressLine1Input=\\\"ngModel\\\"\\n            [ngClass]=\\\"{ 'ng-select-lg': isLarge }\\\"\\n            [items]=\\\"placesStream | async\\\"\\n            [typeahead]=\\\"placesAutocomplete\\\"\\n            aria-autocomplete=\\\"false\\\"\\n            autocomplete=\\\"false\\\"\\n            [required]=\\\"requireAll\\\"\\n            [addTag]=\\\"true\\\"\\n            [disabled]=\\\"disabled\\\"\\n            addTagText=\\\"Use\\\"\\n        >\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item.description }}</ng-template>\\n            <ng-template ng-footer-tmp>\\n                <img src=\\\"/img/powered_by_google.png\\\" class=\\\"powered-by-google-brand\\\" alt=\\\"Powered by Google\\\" draggable=\\\"false\\\" />\\n            </ng-template>\\n        </ng-select>\\n        <div *ngIf=\\\"addressLine1Input.invalid && (submitted || addressLine1Input.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"addressLine1Input?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}addressLine2\\\">\\n            {{ 'common.suite-unit-floor-building-optional' | translate }} <small class=\\\"text-muted\\\">({{ 'common.optional' | translate }})</small>\\n        </label>\\n        <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"{{ prefix }}addressLine2\\\"\\n            name=\\\"addressLine2\\\"\\n            [(ngModel)]=\\\"address.addressLine2\\\"\\n            [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n            [disabled]=\\\"disabled\\\"\\n            emptyToNull\\n            #addressLine2=\\\"ngModel\\\"\\n        />\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-sm-14\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}city\\\">{{ 'common.city' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"{{ prefix }}city\\\"\\n                name=\\\"city\\\"\\n                [(ngModel)]=\\\"address.city\\\"\\n                #city=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                autocomplete=\\\"address-level2\\\"\\n                [required]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"city.invalid && (submitted || city.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"city?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-10\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}zipCode\\\">{{\\n                'address-form.postal-code' | translate\\n            }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"{{ prefix }}zipCode\\\"\\n                name=\\\"zipCode\\\"\\n                [(ngModel)]=\\\"address.zipCode\\\"\\n                #zipCode=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                autocomplete=\\\"postal-code\\\"\\n                [required]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"zipCode.invalid && (submitted || zipCode.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"zipCode?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-sm-12\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}state\\\">{{ 'common.state' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"{{ prefix }}state\\\"\\n                name=\\\"state\\\"\\n                [(ngModel)]=\\\"address.state\\\"\\n                #state=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                autocomplete=\\\"address-level1\\\"\\n                [disabled]=\\\"disabled\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"state.invalid && (submitted || state.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"state?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-12\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}country\\\">{{ 'common.country' | translate }}</label>\\n            <ng-select\\n                id=\\\"{{ prefix }}country\\\"\\n                name=\\\"country\\\"\\n                [(ngModel)]=\\\"address.country\\\"\\n                bindLabel=\\\"name\\\"\\n                bindValue=\\\"alpha2\\\"\\n                [items]=\\\"countriesSortedByName\\\"\\n                [clearable]=\\\"false\\\"\\n                #country=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'ng-select-lg': isLarge }\\\"\\n                [disabled]=\\\"disabled\\\"\\n                autocomplete=\\\"false\\\"\\n                aria-autocomplete=\\\"false\\\"\\n                [required]=\\\"requireAll\\\"\\n            ></ng-select>\\n            <div *ngIf=\\\"country.invalid && (submitted || country.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"country?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Injectable } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { pick } from 'lodash'\nimport { filter, withLatestFrom } from 'rxjs/operators'\nimport { AvatarService } from './avatar.service'\nimport { SessionService, UserEventType } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IntercomService {\n    private isEnabled = false\n\n    constructor(session: SessionService, router: Router, private avatarService: AvatarService) {\n        window.intercomSettings = window.intercomSettings || {}\n        this.boot()\n        if (this.isEnabled) {\n            session.userEvent.pipe(withLatestFrom(session.userStream)).subscribe(([event, user]) => {\n                const avatarUrl = this.avatarService.getAvatarUrl(user)\n                if (event.type === UserEventType.LOGIN) {\n                    window.intercomSettings = {\n                        ...window.intercomSettings,\n                        user_id: user.id,\n                        user_hash: user.intercomHash,\n                        name: user.name,\n                        email: user.email,\n                        created_at: new Date(user.createdAt).getTime(),\n                        avatar: {\n                            type: 'avatar',\n                            image_url: avatarUrl,\n                        },\n                        // Custom fields\n                        ...(pick(user, ['accountNumber', 'status', 'approvedAt']) as any),\n                    }\n                    this.update()\n                } else if (event.type === UserEventType.LOGOUT) {\n                    this.shutdown()\n                    this.boot()\n                }\n            })\n            router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n                this.update()\n            })\n        }\n    }\n\n    public boot(): void {\n        if (window.INTERCOM_APP_ID) {\n            if (!window.Intercom) {\n                /* eslint-disable */\n                ;(function () {\n                    var w = window\n                    var ic = w.Intercom\n                    if (typeof ic === 'function') {\n                        ic('reattach_activator')\n                        ic('update', w.intercomSettings)\n                    } else {\n                        var d = document\n                        var i: any = function () {\n                            i.c(arguments)\n                        }\n                        i.q = []\n                        i.c = function (args: any) {\n                            i.q.push(args)\n                        }\n                        w.Intercom = i\n                        const l = () => {\n                            var s = d.createElement('script')\n                            s.type = 'text/javascript'\n                            s.async = true\n                            s.src = `https://widget.intercom.io/widget/${window.INTERCOM_APP_ID}`\n                            var x = d.getElementsByTagName('script')[0]\n                            x.parentNode!.insertBefore(s, x)\n                        }\n                        if ((w as any).attachEvent) {\n                            ;(w as any).attachEvent('onload', l)\n                        } else {\n                            w.addEventListener('load', l, false)\n                        }\n                    }\n                })()\n                /* eslint-enable */\n            }\n            this.isEnabled = true\n            window.Intercom!('boot', { app_id: window.INTERCOM_APP_ID })\n        }\n    }\n\n    public trackEvent(event: string, data?: any): void {\n        if (this.isEnabled) {\n            window.Intercom!('trackEvent', event, data)\n        }\n    }\n\n    public shutdown(): void {\n        if (this.isEnabled) {\n            window.intercomSettings = {}\n            window.Intercom!('shutdown')\n            this.isEnabled = false\n        }\n    }\n\n    public update(options?: { email?: string; hide_default_launcher?: boolean }): void {\n        if (this.isEnabled) {\n            window.Intercom!('update', options)\n        }\n    }\n\n    public hide(): void {\n        if (this.isEnabled) {\n            window.Intercom!('hide')\n        }\n    }\n\n    public show(): void {\n        if (this.isEnabled) {\n            window.Intercom!('show')\n        }\n    }\n\n    public startConversation(prePopulatedMessage?: string): void {\n        if (this.isEnabled) {\n            window.Intercom!('showNewMessage', prePopulatedMessage)\n        }\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faEdit, faTimes } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { forkJoin, Observable, of } from 'rxjs'\nimport { catchError, filter, finalize, flatMap, map } from 'rxjs/operators'\nimport { File as IFile, IUser } from '../api-interfaces'\nimport { toStartCase } from '../common.mixin'\nimport { DropzoneComponent } from '../dropzone/dropzone.component'\nimport { buildFileUrl } from '../file'\nimport { ListComponent } from '../list.component'\nimport { ConfirmationResult, ConfirmationService } from '../services/confirmation.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\nimport { UserFileFormComponent } from './user-file-form/user-file-form.component'\n\n@Component({\n    selector: 'profile-documents',\n    templateUrl: 'profile-documents.component.html',\n})\nexport class ProfileDocumentsComponent extends ListComponent<IFile> implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    @Input()\n    public buttonAlign = 'left'\n    @Input()\n    public showButton = true\n    @Input()\n    public canCreate = true\n    @Input()\n    public canView = true\n    @Input()\n    public canEdit = true\n    @Input()\n    public canDelete = true\n    @Input()\n    public purpose: string\n    @Input()\n    public requiredMessage: string\n    @Output()\n    public readonly onUpload = new EventEmitter<void>()\n\n    @ViewChild('dropzone')\n    public dropzone: DropzoneComponent\n\n    public isUploading = false\n\n    public files: File[] = []\n    public existingFiles: IFile[]\n\n    public toStartCase = toStartCase\n    public getFileUrl = buildFileUrl\n    public faTimes = faTimes\n    public faEdit = faEdit\n    protected apiUrl: string\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        confirmation: ConfirmationService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session, confirmation)\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.user.id}/files`\n        super.ngOnInit()\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy()\n    }\n\n    public uploadFiles(): void {\n        this.submit()\n        if (!this.isValid()) {\n            return\n        }\n        this.isUploading = true\n        this.subscriptions.add(\n            this.upload()\n                .pipe(\n                    finalize(() => {\n                        this.isUploading = false\n                    })\n                )\n                .subscribe(results => {\n                    if (results.some(result => !result)) {\n                        this.toastr.error(\n                            this.translate.instant('profile-documents.some-requests-has-failed-please-try-again')\n                        )\n                        return\n                    } else if (results.length > 0) {\n                        this.toastr.success(this.translate.instant('common.file-uploaded'))\n                    }\n                    this.onUpload.emit()\n                })\n        )\n    }\n\n    public upload(options?: { purpose?: any }): Observable<(IFile | boolean)[]> {\n        return forkJoin(\n            this.files.map((file, index) => {\n                const headers = {\n                    'X-File-Name': encodeURIComponent(file.name),\n                    'Content-Type': file.type,\n                    'X-No-Toast': 'true',\n                } as any\n                if (options && options.purpose) {\n                    headers['X-File-Purpose'] = options.purpose\n                }\n                return this.http\n                    .post<IFile>(this.apiUrl, file, {\n                        headers: new HttpHeaders(headers),\n                    })\n                    .pipe(\n                        map(result => [result, index]),\n                        catchError(() => of(false))\n                    )\n            })\n        ).pipe(\n            map(results => {\n                // Remove successful uploads from pending\n                const successfulUploads: number[] = []\n                for (const result of results) {\n                    if (!Array.isArray(result)) {\n                        continue\n                    }\n                    successfulUploads.push(result[1] as number)\n                }\n                this.files = this.files.filter((_, index) => !successfulUploads.includes(index))\n\n                this.updateEvent.next()\n                return results.map(result => (Array.isArray(result) ? (result[0] as IFile) : result))\n            })\n        )\n    }\n\n    public deleteFile(file: IFile): void {\n        this.subscriptions.add(\n            this.confirmation\n                .show({\n                    type: 'danger',\n                    text: `${this.translate.instant(\n                        'common.are-you-sure-want-to-delete-file'\n                    )}<br>${this.translate.instant('common.you-cant-undo-action')}`,\n                    confirmText: this.translate.instant('common.delete'),\n                    confirmClass: 'danger',\n                })\n                .pipe(\n                    filter(result => result === ConfirmationResult.CONFIRMED),\n                    flatMap(() => this.http.delete<void>(`${this.apiUrl}/${file.id}`))\n                )\n                .subscribe(() => {\n                    this.updateEvent.next()\n                    this.toastr.success(`${file.name} ${this.translate.instant('common.removed')}`)\n                })\n        )\n    }\n\n    public showFileModal(file: IFile): void {\n        const fileForm = this.ngbModal.open(UserFileFormComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n        })\n        const fileFormComponent = fileForm.componentInstance as UserFileFormComponent\n        fileFormComponent.file = file\n        if (file.userFile) {\n            ;(fileFormComponent as UserFileFormComponent).user = this.user\n        }\n        fileFormComponent.onSave.subscribe(() => {\n            this.updateEvent.next()\n            fileForm.close()\n        })\n    }\n\n    public submit(): void {\n        if (this.dropzone) {\n            this.dropzone.submit()\n        }\n    }\n\n    public isValid(): boolean {\n        return this.dropzone.isValid()\n    }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faBell, faEye } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { combineLatest, Subject, Subscription } from 'rxjs'\nimport { debounceTime, flatMap, switchMap, take } from 'rxjs/operators'\nimport { Notification, RPCResult } from '../../../../common/api-interfaces'\nimport { NotificationsService } from '../../../../common/services/notifications.service'\nimport { SessionService } from '../../../../common/services/session.service'\n\n@Component({\n    selector: 'header-notifications',\n    templateUrl: 'header-notifications.component.html',\n})\nexport class HeaderNotificationsComponent implements OnInit, OnDestroy {\n    public notifications: Notification[]\n    public faBell = faBell\n    public faEye = faEye\n    private fetchEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        public notificationsService: NotificationsService,\n        private router: Router,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            combineLatest(this.notificationsService.notifyEvent, this.fetchEvent, this.session.userStream)\n                .pipe(\n                    debounceTime(600),\n                    switchMap(([_, __, user]) =>\n                        this.http.get<Notification[]>(`/users/${user.id}/notifications`, {\n                            params: new HttpParams().set('limit', 10 + ''),\n                        })\n                    )\n                )\n                .subscribe(notifications => {\n                    this.notifications = notifications\n                })\n        )\n        this.notificationsService.notifyEvent.next()\n        this.fetchEvent.next()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public markAllAsRead(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    take(1),\n                    flatMap(user =>\n                        this.http.post<RPCResult<void>>(\n                            `/users/${user.id}/notifications`,\n                            {\n                                id: Math.floor(Math.random() * 10000),\n                                jsonrpc: '2.0',\n                                method: 'markAllAsRead',\n                            },\n                            {\n                                headers: new HttpHeaders({ 'Content-Type': 'application/json-rpc' }),\n                            }\n                        )\n                    )\n                )\n                .subscribe(() => {\n                    this.fetchEvent.next()\n                    this.notificationsService.notifyEvent.next()\n                })\n        )\n    }\n\n    public async goto(notification: Notification): Promise<void> {\n        if (notification.invoice) {\n            await this.router.navigate(['/services/invoices', notification.invoice.id])\n        } else if (notification.transaction) {\n            await this.router.navigate(['/transactions', notification.transaction.id])\n        } else if (notification.conversion) {\n            await this.router.navigate(['/services/conversions', notification.conversion.id])\n        } else {\n            await this.router.navigate(['/notifications'])\n        }\n    }\n\n    public handleDropdownClosed(payload: boolean): void {\n        const unreadNotifications = this.notifications.filter(notification => !notification.read)\n        if (!payload && unreadNotifications.length) {\n            this.markAllAsRead()\n        }\n    }\n}\n","import { countries, Country } from '@aerapass/country-data'\nimport BigNumber from 'bignumber.js'\nimport { omitBy, startCase } from 'lodash'\nimport validateEmail from 'validator/lib/isEmail'\nimport { AccountBill, IAddress, Permission } from './api-interfaces'\nimport { countryMap } from './countries'\n\nexport type BootstrapComponentType = 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' | 'default'\n\nexport function convertToISODate(date: string): string {\n    return `${date.slice(4)}-${date.slice(2, 4)}-${date.slice(0, 2)}`\n}\n\nexport function convertPercentage(percentage: string): string {\n    return new BigNumber(percentage).div(100).toPrecision(9, 1)\n}\n\n/**\n * Returns the calling code of a country\n * @param country Alpha2 of a country\n */\nexport function toCountryCallingCode(country: string): string {\n    return countryMap[country]?.countryCallingCodes[0] ?? ''\n}\n\nexport function nanToNull<T>(value: T): T | null {\n    return isNaN(value as any) ? null : value\n}\n\nexport function emptyToNull<T>(value: T): T | null {\n    return !value ? null : value\n}\n\nexport function toStartCase(text: string | null): string {\n    return text ? startCase(text.replace(/-/g, ' ')) : ''\n}\n\nexport function isZero(value: number | string): boolean {\n    return new BigNumber(value).isZero()\n}\n\nexport function formatAccountNumber(value: string): string {\n    return `${value.substring(0, 2)} ${value.substring(2, 6)} ${value.substring(6, 10)} ${value.substring(10)}`\n}\n\n/**\n * Removes properties with null or undefined values\n */\nexport function deepOmitEmptyProperties(object: any): any {\n    if (typeof object !== 'object') {\n        throw new Error('Argument not an object')\n    }\n    object = omitBy(object, prop => prop === null || prop === undefined)\n    for (const key in object) {\n        if (Array.isArray(object[key])) {\n            object[key] = object[key].map((item: any) => {\n                if (typeof item === 'object') {\n                    return deepOmitEmptyProperties(item)\n                }\n                return item\n            })\n        } else if (typeof object[key] === 'object') {\n            object[key] = deepOmitEmptyProperties(object[key])\n        }\n    }\n    return object\n}\n\nexport function searchCountryCode(term: string, country: Country): boolean {\n    return (\n        country.alpha2.toLocaleLowerCase().includes(term.toLocaleLowerCase()) ||\n        country.countryCallingCodes[0].toLocaleLowerCase().includes(term.toLocaleLowerCase())\n    )\n}\n\nexport function transformAddress(address: {\n    addressLine1: string | null\n    addressLine2?: string | null\n    zipCode: string | null\n    city: string | null\n    country: string | null\n}): { name: string | null } | { formatted_address: string } | null {\n    return address.addressLine1 ? { name: address.addressLine1 } : null\n}\n\nexport function dataUrlToBlob(dataUrl: string, type: string): Blob {\n    const byteString = atob(dataUrl.split(',')[1])\n    const ia = new Uint8Array(byteString.length)\n    let i = byteString.length\n    while (i--) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type })\n}\n\nexport const permissionMap: { [key in Permission]: string } = {\n    'payment-swift': 'Swift',\n    'payment-local': 'Local',\n    'payment-crypto': 'Crypto',\n    redeem: 'Redeem',\n    cards: 'Cards',\n    conversions: 'Conversions',\n    invoices: 'Invoices',\n    marketplaces: 'Marketplaces',\n    trades: 'Trades',\n    'spot-trades': 'Spot Trades',\n}\n\nexport function determineAccountBillStatus(accountBill: AccountBill): string {\n    if (new BigNumber(accountBill.amount).eq(0)) {\n        return 'free'\n    }\n    if (!accountBill.transaction) {\n        return 'unpaid'\n    }\n    return 'paid'\n}\n\nexport function readFileAsDataURL(file: File): Promise<string | ArrayBuffer | null> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onload = () => {\n            resolve(reader.result)\n        }\n        reader.onerror = error => {\n            reject(error)\n        }\n        reader.readAsDataURL(file)\n    })\n}\n\nexport function isEmail(input: string): boolean {\n    return validateEmail(input)\n}\n\nexport function isAccountNumber(input: string, option?: { allowSpaces: boolean }): boolean {\n    const format = RegExp('^[A-Z]{2}[0-9]{10}$', 'g')\n    const value = !!option && option.allowSpaces ? input.replace(/\\s/g, '') : input\n    return (\n        format.test(value) &&\n        parseInt(`${value.charCodeAt(0)}${value.charCodeAt(1)}${value.substring(2)}`, 10) % 97 === 1\n    )\n}\n\nexport function findCountry(alpha2: string): Country | undefined {\n    return countries.all.find(country => country.alpha2 === alpha2)\n}\n\nexport function formatAddressToUSFormat(address: IAddress): string {\n    if (!address) {\n        return ''\n    }\n\n    const { addressLine1, addressLine2, city, state, zipCode, country } = address\n\n    const countryName = country ? countryMap[country].name : ''\n\n    return `${addressLine1}\\n${addressLine2 ? `${addressLine2}\\n` : ''}${city ? city + ' ' : ''}${\n        state ? state + ' ' : ''\n    }${zipCode ? zipCode : ''}${countryName ? '\\n' + countryName : ''}`\n}\n","import {\n    animate,\n    state as animationState,\n    style,\n    transition as animationTransition,\n    trigger,\n} from '@angular/animations'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { NavigationStart, Router } from '@angular/router'\nimport {\n    faBalanceScale,\n    faBell,\n    faBook,\n    faChartNetwork,\n    faCity,\n    faCog,\n    faCompass,\n    faCreditCardFront,\n    faDesktop,\n    faFileInvoice,\n    faInbox,\n    faLink,\n    faReceipt,\n    faShieldAlt,\n    faSitemap,\n    faSync,\n    faToolbox,\n    faUniversity,\n    faUser,\n    faUserFriends,\n    faUsers,\n    faWallet,\n    faChartBar,\n    faChartLine,\n} from '@fortawesome/pro-regular-svg-icons'\nimport {\n    faAngleDown,\n    faBox,\n    faArrowAltToBottom,\n    faCaretRight,\n    faExchange,\n    faPaperPlane,\n    faTimes,\n    faPlus,\n    faMinus,\n} from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { filter } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { SessionService } from '../../../common/services/session.service'\nimport { MenuService, MobileNavLayout } from './menu.service'\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: 'menu.component.html',\n    animations: [\n        trigger('toggleMenu', [\n            animationState('false', style({ height: '0px' })),\n            animationState('true', style({ height: '*' })),\n            animationTransition('1 => 0', animate('280ms ease-in')),\n            animationTransition('0 => 1', animate('280ms ease-out')),\n        ]),\n    ],\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n    public faArrowAltToBottom = faArrowAltToBottom\n    public faDesktop = faDesktop\n    public faPaperPlane = faPaperPlane\n    public faBook = faBook\n    public faCreditCardFront = faCreditCardFront\n    public faToolbox = faToolbox\n    public faInbox = faInbox\n    public faCog = faCog\n    public faUser = faUser\n    public faUsers = faUsers\n    public faCity = faCity\n    public faWallet = faWallet\n    public faBell = faBell\n    public faCaretRight = faCaretRight\n    public faSync = faSync\n    public faBalanceScale = faBalanceScale\n    public faUniversity = faUniversity\n    public faCompass = faCompass\n    public faChartNetwork = faChartNetwork\n    public faLink = faLink\n    public faShieldAlt = faShieldAlt\n    public faReceipt = faReceipt\n    public faFileInvoice = faFileInvoice\n    public faTimes = faTimes\n    public faAngleDown = faAngleDown\n    public faUserFriends = faUserFriends\n    public faChartBar = faChartBar\n    public faPlus = faPlus\n    public faMinus = faMinus\n    public faExchange = faExchange\n    public faBox = faBox\n    public faSitemap = faSitemap\n    public faChartLine = faChartLine\n\n    public appName = environment.appName\n\n    private subscriptions = new Subscription()\n    private _activeMenu: string | undefined\n\n    constructor(\n        public session: SessionService,\n        private router: Router,\n        private menuService: MenuService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.router.events\n                .pipe(filter((event): event is NavigationStart => event instanceof NavigationStart))\n                .subscribe((event: NavigationStart) => {\n                    this.activeMenu = event.url\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public isActive(state: string, strict = false): boolean {\n        return this.router.isActive(state, strict)\n    }\n\n    public isOpen(menu: string): boolean {\n        return this.activeMenu === menu\n    }\n\n    public toggleMenu(menu: string): void {\n        this.activeMenu = this.activeMenu !== menu ? menu : undefined\n    }\n\n    public closeMobileNav(): void {\n        this.menuService.mobileNav = MobileNavLayout.HIDDEN\n    }\n\n    public get activeMenu(): string | undefined {\n        return this._activeMenu\n    }\n\n    public set activeMenu(route: string | undefined) {\n        if (!route) {\n            this._activeMenu = undefined\n            return\n        }\n        if (route.startsWith('/admin')) {\n            route = route.substring('/admin'.length)\n        }\n        if (route.startsWith('/')) {\n            route = route.substring(1)\n        }\n        const routeParts = route.split('/')\n        this._activeMenu = routeParts[0] || undefined\n    }\n}\n","export default \"<copy-wrap [value]=\\\"value\\\">\\n    <span [ngClass]=\\\"ngClass\\\" placement=\\\"right\\\" [ngbTooltip]=\\\"value\\\">{{ value | truncate: false:7:'' }}</span>\\n</copy-wrap>\\n\";","import { Component, Input } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { environment } from 'src/environments/environment'\nimport { IBeneficiary, Transaction } from '../api-interfaces'\nimport { calculateCreditableAmount } from '../transactions.mixins'\n\n@Component({\n    selector: 'deposit-instruction-table',\n    templateUrl: 'deposit-instruction-table.component.html',\n})\nexport class DepositInstructionTableComponent {\n    public appName = environment.appName\n    @Input()\n    public beneficiary: IBeneficiary\n    @Input()\n    public transaction: Transaction\n    @Input()\n    public showWarning = false\n    @Input()\n    public showMethod = true\n    @Input()\n    public showCurrency = false\n    @Input()\n    public borderless = false\n\n    public calculateCreditableAmount = calculateCreditableAmount\n\n    constructor(public translate: TranslateService) {}\n\n    /** For local method branching */\n\n    public getAccountNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.beneficiary.currency?.code === 'EUR') {\n                return 'IBAN'\n            }\n        }\n        if (this.beneficiary.method === 'crypto') {\n            return `${this.translate.instant('common.wallet-address')}`\n        }\n        return `${this.translate.instant('common.account-number')}`\n    }\n\n    public showSwift(): boolean {\n        return !(this.beneficiary.method === 'local' && this.beneficiary.currency.code === 'USD')\n    }\n\n    public getSwiftLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.beneficiary.currency.code === 'AUD') {\n                return 'BSB'\n            }\n            if (this.beneficiary.currency.code === 'EUR') {\n                return 'BIC'\n            }\n            if (this.beneficiary.currency.code === 'GBP') {\n                return 'Sort Code'\n            }\n        }\n        return `${this.translate.instant('common.swift-code')}`\n    }\n\n    public showRoutingNumber(): boolean {\n        return this.beneficiary.method === 'local' && ['AUD', 'CAD', 'USD'].includes(this.beneficiary.currency.code!)\n    }\n\n    public getRoutingNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.beneficiary.currency.code === 'AUD') {\n                return 'Pay ID'\n            }\n            if (this.beneficiary.currency.code === 'CAD') {\n                return 'Transit Code'\n            }\n        }\n        return 'Routing Number'\n    }\n}\n","export default \"<div\\n    *ngIf=\\\"canCreate\\\"\\n    ngfDrop\\n    [accept]=\\\"'image/jpeg,image/gif,image/png,application/pdf' + (allowVideo ? ',video/mp4' : '')\\\"\\n    maxSize=\\\"52428800\\\"\\n    selectable=\\\"true\\\"\\n    [files]=\\\"files\\\"\\n    (filesChange)=\\\"files = $event; filesChange.next(files)\\\"\\n    class=\\\"dropzone\\\"\\n    [ngClass]=\\\"{\\n        'ng-invalid': files?.length === 0 && existingFiles?.length === 0 && submitted,\\n        dragover: isDragValid,\\n        'invalid-dragover': isDragInvalid\\n    }\\\"\\n    [(invalidDrag)]=\\\"isDragInvalid\\\"\\n    [(validDrag)]=\\\"isDragValid\\\"\\n>\\n    <fa-icon class=\\\"dz-icon\\\" [icon]=\\\"faCloudUpload\\\"></fa-icon>\\n    <div class=\\\"small\\\">\\n        <span *ngIf=\\\"!isDragValid && !isDragInvalid\\\"> {{ 'common.drag-files-here' | translate }} </span>\\n        <span *ngIf=\\\"isDragValid\\\" class=\\\"valid\\\">{{ 'common.drop-file' | translate }}</span>\\n        <span *ngIf=\\\"isDragInvalid\\\" class=\\\"invalid\\\">{{ 'common.this-file-is-invalid' | translate }}</span>\\n    </div>\\n</div>\\n<div class=\\\"small text-muted\\\" *ngIf=\\\"canCreate\\\">\\n    {{ 'common.the-following-image-format' | translate }}: jpg, gif, png, pdf{{ allowVideo ? ', mp4' : '' }} (Max. 5{{ allowVideo ? '0' : '' }}MB)\\n</div>\\n<div *ngIf=\\\"files?.length === 0 && existingFiles?.length === 0 && submitted\\\" class=\\\"error-messages\\\">\\n    <div class=\\\"form-control-feedback\\\">{{ requiredMessage || 'File is required.' }}</div>\\n</div>\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"showTable && ((files && files.length > 0) || (existingFiles && existingFiles.length > 0))\\\">\\n    <table class=\\\"table table-hover align-items-center table-borderless mt-1\\\">\\n        <thead>\\n            <tr>\\n                <th scope=\\\"col\\\" colspan=\\\"2\\\">{{ 'common.file-name' | translate }}</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let existingFile of existingFiles\\\">\\n                <th scope=\\\"row\\\">\\n                    <file-item [file]=\\\"existingFile\\\"></file-item>\\n                </th>\\n                <td class=\\\"text-right\\\" nowrap>\\n                    <button *ngIf=\\\"canDelete\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"onDelete.emit(existingFile)\\\">\\n                        <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                    </button>\\n                </td>\\n            </tr>\\n            <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let item of files; let i = index\\\">\\n                <th scope=\\\"row\\\">\\n                    <div *ngIf=\\\"['image/gif', 'image/png', 'image/jpeg'].indexOf(item.type) >= 0\\\">\\n                        <div class=\\\"previewIcon\\\" [ngfBackground]=\\\"item\\\"></div>\\n                    </div>\\n                    <div>{{ item.name }}</div>\\n                    <small class=\\\"text-muted\\\">{{ item.type }} / {{ item.size / 1024 / 1024 | number: '.2' }} MB</small>\\n                </th>\\n                <td class=\\\"text-right\\\" nowrap>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"files.splice(i, 1)\\\">\\n                        <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                    </button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { formatAccountNumber, isAccountNumber } from './common.mixin'\n\n@Pipe({ name: 'accountNumber' })\nexport class AccountNumberPipe implements PipeTransform {\n    public transform(value: string | null | undefined): string {\n        if (!value || !isAccountNumber(value)) {\n            return value ? value : ''\n        }\n        return formatAccountNumber(value)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { User } from './session.service'\nimport { StorageService } from './storage.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AvatarService {\n    private static readonly AVATAR_CACHE_KEY = 'avatar_last_cached_at'\n    // use 1 by default to improve caching\n    private _timestamp: number\n    public set timestamp(value: string) {\n        this._timestamp = ~~value\n        this.storage.setItem(AvatarService.AVATAR_CACHE_KEY, this.timestamp)\n    }\n    public get timestamp(): string {\n        return this._timestamp + ''\n    }\n    constructor(private storage: StorageService) {\n        this.timestamp = this.storage.hasItem(AvatarService.AVATAR_CACHE_KEY)\n            ? this.storage.getItem(AvatarService.AVATAR_CACHE_KEY)!\n            : '1'\n    }\n    public reload(): void {\n        this.timestamp = Date.now() + ''\n    }\n    public getAvatarUrl(user: User): string {\n        return `/.api/users/${user.id}/avatar` + `?v=${this.timestamp}`\n    }\n}\n","import { Component, Input } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { IUser } from '../api-interfaces'\nimport { UserService } from '../services/core/user.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'confirm-mail-reminder',\n    templateUrl: 'confirm-mail-reminder.component.html',\n})\nexport class ConfirmMailReminderComponent {\n    @Input()\n    public user: IUser\n    public resendTriggered = false\n    constructor(private toastr: ToastrService, private userService: UserService, public translate: TranslateService) {}\n\n    public resend(): void {\n        this.resendTriggered = true\n        this.userService.resendActivationMail(this.user.id).subscribe(\n            () => {\n                this.toastr.success(this.translate.instant('common.mail-confirmation-sent-again'))\n            },\n            () => {\n                this.resendTriggered = false\n            }\n        )\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SkipSelf,\n    ViewChild,\n} from '@angular/core'\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { CurrenciesQuery } from '../../store/currencies/currencies.query'\nimport { WalletsQuery } from '../../store/wallets/wallets.query'\nimport { CurrencyType, ICurrency, IUser } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'currency-select',\n    templateUrl: 'currency-select.component.html',\n    viewProviders: [\n        {\n            provide: ControlContainer,\n            useFactory: (ngForm: NgForm) => ngForm,\n            deps: [[new Optional(), new SkipSelf(), NgForm]],\n        },\n    ],\n})\nexport class CurrencySelectComponent implements OnChanges, AfterContentInit, OnDestroy {\n    @Input()\n    public currency: ICurrency\n    @Output()\n    public readonly currencyChange = new EventEmitter<ICurrency>(true)\n    @Input()\n    public placeholder = `${this.translate.instant('common.select-currency')}`\n    @Input()\n    public disabled = false\n    @Input()\n    public required = false\n    @Input()\n    public user: IUser\n    @Input()\n    public isLarge = false\n    @Input()\n    public currencyTypes: CurrencyType[] = ['fiat', 'crypto']\n    @Input()\n    public depositable: boolean\n    @Input()\n    public holdable: boolean\n    @Input()\n    public transferable: boolean\n    @Input()\n    public filterBy: string[]\n    @Input()\n    public salesProceeds = false\n    @ViewChild('currencyInput', { static: true })\n    public currencyInput: NgModel\n    @Input()\n    public useFullName = false\n    @Input()\n    public hideZeroBalance = false\n\n    public appName = environment.appName\n    public balances$: Observable<(ICurrency & { balance: string })[]>\n\n    private criteria: BehaviorSubject<{\n        currencyTypes: CurrencyType[]\n        depositable: boolean\n        holdable: boolean\n        transferable: boolean\n    }>\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private currenciesQuery: CurrenciesQuery,\n        private walletsQuery: WalletsQuery,\n        private session: SessionService,\n        public translate: TranslateService\n    ) {\n        this.criteria = new BehaviorSubject({\n            currencyTypes: this.currencyTypes,\n            depositable: this.depositable,\n            holdable: this.holdable,\n            transferable: this.transferable,\n        })\n        this.balances$ = combineLatest(\n            this.currenciesQuery.selectAll(),\n            this.walletsQuery.balances$,\n            this.criteria\n        ).pipe(\n            map(([currencies, wallets, criteria]) => {\n                let balances\n                balances = currencies\n                    .filter(currency => {\n                        if (this.filterBy && !this.filterBy.includes(currency.code)) {\n                            return false\n                        }\n                        let query = this.currencyTypes.includes(currency.type)\n                        if (criteria.depositable !== undefined) {\n                            query = query && currency.depositable === criteria.depositable\n                        }\n                        if (criteria.holdable !== undefined) {\n                            query = query && currency.holdable === criteria.holdable\n                        }\n                        if (criteria.transferable !== undefined) {\n                            query = query && currency.transferable === criteria.transferable\n                        }\n                        return query\n                    })\n                    .map(currency => {\n                        const wallet = wallets.find(w => w.currency.code === currency.code)\n                        const balance = (wallet && wallet.availableBalance) || 0\n                        const salesProceeds = wallet\n                            ? new BigNumber(wallet.usdValue).minus((wallet as any).topupAmount).toFixed(2, 1)\n                            : 0\n                        return {\n                            ...currency,\n                            balance: new BigNumber(balance).toFixed(currency.decimalPlaces, 1),\n                            usdValue: wallet ? wallet.usdValue : '0.00',\n                            salesProceeds,\n                        }\n                    })\n                    .filter(wallet => (this.hideZeroBalance ? !new BigNumber(wallet.balance).isZero() : true))\n\n                if (!balances.length) {\n                    balances = currencies\n                        .filter(currency => currency.code === (this.currencyTypes.includes('fiat') ? 'USD' : 'BTC'))\n                        .map(currency => ({\n                            ...currency,\n                            balance: '0.00',\n                            usdValue: '0.00',\n                            salesProceeds: '0.00',\n                        }))\n                }\n\n                return balances\n            })\n        )\n    }\n\n    public ngOnChanges(): void {\n        this.criteria?.next({\n            currencyTypes: this.currencyTypes,\n            depositable: this.depositable,\n            holdable: this.holdable,\n            transferable: this.transferable,\n        })\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscriptions.add(\n            this.balances$.subscribe(balances => {\n                if (this.currency === undefined) {\n                    this.currency =\n                        balances.find(balance => balance.code === this.session.user.preferredCurrency.code) ||\n                        balances.find(balance => balance.code === 'USD') ||\n                        balances.find(balance => balance.code === 'BTC') ||\n                        balances[0]\n                    this.currencyChange.emit(this.currency)\n                }\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public compareCurrencies(a: ICurrency, b: ICurrency): boolean {\n        return a.code === b.code\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../../common/common.module'\nimport { NotFoundComponent } from './not-found.component'\n\n@NgModule({\n    declarations: [NotFoundComponent],\n    exports: [NotFoundComponent],\n    imports: [CommonModule],\n})\nexport class NotFoundModule {}\n","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\nimport { NotFoundComponent } from './app/not-found/not-found.component'\nimport { OrganizationAuthGuard } from './organization/organization.auth-guard'\n\nconst routes: Routes = [\n    {\n        path: 'admin',\n        loadChildren: () => import('./admin/admin.module').then(mod => mod.AdminModule),\n    },\n    {\n        path: 'account',\n        loadChildren: () => import('./account/account.module').then(mod => mod.AccountModule),\n    },\n    {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(mod => mod.DashboardModule),\n    },\n    {\n        path: 'mailbox',\n        loadChildren: () => import('./mailbox/mailbox.module').then(mod => mod.MailboxModule),\n    },\n    {\n        path: 'transactions',\n        loadChildren: () => import('./transactions/transactions.module').then(mod => mod.TransactionsModule),\n    },\n    {\n        path: 'services',\n        loadChildren: () => import('./services/services.module').then(mod => mod.ServicesModule),\n    },\n    {\n        path: 'verify',\n        loadChildren: () => import('./kyc-wizard/kyc-wizard.module').then(mod => mod.KycWizardModule),\n    },\n    {\n        path: 'cards',\n        loadChildren: () => import('./user-cards/user-cards.module').then(mod => mod.UserCardsModule),\n    },\n    {\n        path: 'discover',\n        loadChildren: () => import('./discover/discover.module').then(mod => mod.DiscoverModule),\n    },\n    {\n        path: 'deposit',\n        loadChildren: () => import('./deposit/deposit.module').then(mod => mod.DepositModule),\n    },\n    {\n        path: 'transfer',\n        loadChildren: () => import('./transfer/transfer.module').then(mod => mod.TransferModule),\n    },\n    {\n        path: 'withdraw',\n        loadChildren: () => import('./withdraw/withdraw.module').then(mod => mod.WithdrawModule),\n    },\n    {\n        path: 'spot-trading',\n        loadChildren: () =>\n            import('./user-spot-trading/user-spot-trading.module').then(mod => mod.UserSpotTradingModule),\n    },\n    {\n        path: 'redeem',\n        loadChildren: () => import('./user-redemption/user-redemption.module').then(mod => mod.UserRedemptionModule),\n    },\n    {\n        path: 'buy-and-sell',\n        loadChildren: () => import('./user-trades/user-trades.module').then(mod => mod.UserTradesModule),\n    },\n    {\n        path: 'fees',\n        loadChildren: () => import('./fees/fees.module').then(mod => mod.FeesModule),\n    },\n    {\n        path: 'login',\n        loadChildren: () => import('./login/login.module').then(mod => mod.LoginModule),\n    },\n    {\n        path: 'register',\n        loadChildren: () => import('./registration/registration.module').then(mod => mod.RegistrationModule),\n    },\n    {\n        path: 'privacy',\n        loadChildren: () => import('./privacy/privacy.module').then(mod => mod.PrivacyModule),\n    },\n    {\n        path: 'terms',\n        loadChildren: () => import('./terms/terms.module').then(mod => mod.TermsModule),\n    },\n    {\n        path: 'notifications',\n        loadChildren: () => import('./notifications/notifications.module').then(mod => mod.NotificationsModule),\n    },\n    {\n        path: 'activities',\n        loadChildren: () => import('./user-activities/user-activities.module').then(mod => mod.UserActivitiesModule),\n    },\n    {\n        path: 'organization',\n        canLoad: [OrganizationAuthGuard],\n        loadChildren: () => import('./organization/organization.module').then(mod => mod.OrganizationModule),\n    },\n    {\n        path: 'embedded',\n        loadChildren: () => import('./embedded/embedded.module').then(mod => mod.EmbeddedModule),\n    },\n    // redirect / to /login\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login',\n    },\n    // cover all other states by 404 state\n    {\n        path: '**',\n        component: NotFoundComponent,\n    },\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, scrollPositionRestoration: 'enabled' }),\n    ],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n    Association,\n    File,\n    IAddress,\n    ICardProgram,\n    IUser,\n    Permission,\n    Referrer,\n    Risk,\n    UserDetails,\n    UserFlag,\n    UserRole,\n    UserSegment,\n    UserStatus,\n    UserType,\n} from '../../api-interfaces'\nimport { Currency } from '../accounting/currency.model'\n\nexport class User implements IUser {\n    public id: string\n    public type: UserType\n    public segment: UserSegment\n    public accountNumber: string\n    public email: string\n    public status: UserStatus\n    public role: UserRole | null\n    public lastLogin: string | null\n    public loginCount: number\n    public permissions: Permission[] | null\n    public twoFactor: boolean\n    public riskRating: Risk\n    public flags: UserFlag[]\n    public approvedAt: Date | null\n    public name: string\n    public phoneCountryCode: string | null\n    public phoneNumber: string | null\n    public referrer: Referrer | null\n    public preferredCurrency: Currency\n    public billingCurrency: Currency\n    public files: File[]\n    public sendEmailNotifications: boolean\n    public expectedTurnover: string | null\n    public address: IAddress\n    public details: UserDetails\n    public association: Association | null\n    public cardProgram: ICardProgram | null\n    public isManaged: boolean\n    public createdAt: string\n    public updatedAt: string\n    public externalId: string\n    public niumCustomerId?: string | null\n    public accountOpeningFeePaidAt?: Date | null\n\n    constructor(data: Partial<IUser>) {\n        Object.assign(this, data)\n        if (data.preferredCurrency) {\n            this.preferredCurrency = new Currency(data.preferredCurrency)\n        }\n    }\n}\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Subscription } from 'rxjs'\nimport { Toast, ToastrService } from '../../../common/services/toastr.service'\n\n@Component({\n    selector: 'toastr',\n    templateUrl: 'toastr.component.html',\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({ transform: 'translateY(-100%)' })),\n            transition(':enter', [\n                animate(\n                    300,\n                    keyframes([\n                        style({ opacity: 0, transform: 'translateY(-100%)', offset: 0 }),\n                        style({ opacity: 1, transform: 'translateY(8px)', offset: 0.3 }),\n                        style({ opacity: 1, transform: 'translateY(0)', offset: 1 }),\n                    ])\n                ),\n            ]),\n            transition(':leave', [\n                animate(\n                    400,\n                    keyframes([\n                        style({ opacity: 1, transform: 'translateX(0)', offset: 0 }),\n                        style({ opacity: 1, transform: 'translateX(-15px)', offset: 0.7 }),\n                        style({ opacity: 0, transform: 'translateX(100%)', offset: 1 }),\n                    ])\n                ),\n            ]),\n        ]),\n    ],\n})\nexport class ToastrComponent implements OnInit, OnDestroy {\n    public toasts: Toast[] = []\n    private toastSubscription: Subscription\n\n    constructor(private toastr: ToastrService) {}\n\n    public ngOnInit(): void {\n        this.toastSubscription = this.toastr.toastPushed.subscribe(toast => {\n            this.toasts.unshift(toast)\n            this.startTimer(toast)\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.toastSubscription.unsubscribe()\n    }\n\n    public hide(toast: Toast): void {\n        this.toasts.splice(\n            this.toasts.findIndex(t => t.id === toast.id),\n            1\n        )\n    }\n\n    public stopTimer(toast: Toast): void {\n        if (toast.timeout) {\n            clearTimeout(toast.timeout)\n        }\n    }\n\n    public startTimer(toast: Toast): void {\n        this.stopTimer(toast)\n        toast.timeout = setTimeout(() => this.hide(toast), 6000)\n    }\n}\n","export default \"<ng-container [ngSwitch]=\\\"notification.type\\\">\\n    <!-- Verification -->\\n    <ng-container *ngSwitchCase=\\\"'verification-approved'\\\"> {{ 'common.your-account-verified' | translate }} </ng-container>\\n\\n    <!-- Transactions -->\\n    <ng-container *ngSwitchCase=\\\"'transaction-processed'\\\">\\n        <ng-container [ngSwitch]=\\\"transaction?.type\\\">\\n            <ng-container *ngSwitchCase=\\\"'deposit'\\\">\\n                {{ 'common.your' | translate }} <span class=\\\"text-info text-uppercase\\\">{{ transaction?.method }}</span>\\n                {{ 'common.deposit' | translate | lowercase }} <span class=\\\"text-info\\\">{{ transaction?.id | truncate: false:7:'' }}</span>\\n                {{ 'common.of' | translate }}\\n                <span class=\\\"text-green\\\"\\n                    >{{ transaction?.amount | amount: transaction?.currency?.decimalPlaces }} {{ transaction?.currency?.code }}</span\\n                >\\n                {{ 'common.has-been-completed' | translate }}\\n            </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'transfer'\\\">\\n                {{ 'common.you-received' | translate }}\\n                <span class=\\\"text-green\\\"\\n                    >{{ transaction?.settledAmount | amount: transaction?.currency?.decimalPlaces }} {{ transaction?.currency?.code }}</span\\n                >\\n                {{ 'common.from' | translate | lowercase }}\\n                <ng-container *ngTemplateOutlet=\\\"userOrAppTemplate; context: transaction?.baseWallet\\\"></ng-container> {{ 'common.using' | translate }}\\n                <span class=\\\"text-info\\\">{{ transaction?.id | truncate: false:7:'' }}</span>\\n            </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'withdrawal'\\\">\\n                {{ 'common.your' | translate }} <span class=\\\"text-info text-uppercase\\\">{{ transaction?.method }}</span>\\n                {{ 'common.withdrawal' | translate | lowercase }} <span class=\\\"text-info\\\">{{ transaction?.id | truncate: false:7:'' }}</span>\\n                {{ 'common.of' | translate }}\\n                <span class=\\\"text-green\\\"\\n                    >{{ transaction?.amount | amount: transaction?.currency?.decimalPlaces }} {{ transaction?.currency?.code }}</span\\n                >\\n                {{ 'common.has-been-completed' | translate }}\\n            </ng-container>\\n        </ng-container>\\n    </ng-container>\\n\\n    <!-- Conversions -->\\n    <ng-container *ngSwitchCase=\\\"'conversion-offered'\\\">\\n        {{ 'common.you-received-an-offer' | translate }}\\n        <span class=\\\"text-danger\\\"\\n            >{{ conversion?.baseTransaction?.amount | amount: conversion?.baseTransaction?.currency?.decimalPlaces }}\\n            {{ conversion?.baseTransaction?.currency?.code }}</span\\n        >\\n        to\\n        <span class=\\\"text-green\\\"\\n            >{{ conversion?.counterTransaction?.amount | amount: conversion?.counterTransaction?.currency?.decimalPlaces }}\\n            {{ conversion?.counterTransaction?.currency?.code }}\\n        </span>\\n        <ng-container *ngIf=\\\"conversion?.status === 'offered'\\\"\\n            ><button\\n                class=\\\"btn btn-success btn-sm e2e-accept-conversion-offer-btn\\\"\\n                [routerLink]=\\\"['/services/conversions', conversion?.id]\\\"\\n                [queryParams]=\\\"{ action: 'accept' }\\\"\\n                (click)=\\\"$event.preventDefault(); $event.stopPropagation()\\\"\\n            >\\n                {{ 'common.accept' | translate }}\\n            </button>\\n            /\\n            <button\\n                class=\\\"btn btn-danger btn-sm e2e-reject-conversion-offer-btn\\\"\\n                [routerLink]=\\\"['/services/conversions', conversion?.id]\\\"\\n                [queryParams]=\\\"{ action: 'decline' }\\\"\\n                (click)=\\\"$event.preventDefault(); $event.stopPropagation()\\\"\\n            >\\n                {{ 'common.decline' | translate }}\\n            </button></ng-container\\n        >\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"conversion && ['declined', 'cancelled'].includes(conversion.status)\\\"\\n            >({{ (conversion?.status === 'declined' ? 'common.declined' : 'common.cancelled') | translate }})</span\\n        >\\n    </ng-container>\\n\\n    <!-- Invoice -->\\n    <ng-container *ngSwitchCase=\\\"'invoice-received'\\\">\\n        {{ 'common.you-receive-an-invoice' | translate }}: <span class=\\\"text-info\\\">{{ invoice?.subject }}</span>\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'invoice-cancelled'\\\">\\n        {{ 'common.invoice-cancelled' | translate }}: <span class=\\\"text-danger\\\">{{ invoice?.subject }}</span>\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'invoice-settled'\\\">\\n        {{ 'common.invoice-settled' | translate }}: <span class=\\\"text-success\\\">{{ invoice?.subject }}</span>\\n    </ng-container>\\n\\n    <!-- File -->\\n    <ng-container *ngSwitchCase=\\\"'poi-document-expiry'\\\">\\n        <span class=\\\"text-warning\\\">{{ 'common.your-poi-expire' | translate }}</span>\\n    </ng-container>\\n\\n    <!-- Contact -->\\n    <ng-container *ngSwitchCase=\\\"'added-as-contact'\\\">\\n        <ng-container *ngTemplateOutlet=\\\"userOrAppTemplate; context: { user: contact?.baseUser }\\\"></ng-container>\\n        {{ 'common.added-as-contact' | translate }}\\n    </ng-container>\\n\\n    <!-- Card Order -->\\n    <ng-container *ngSwitchCase=\\\"'card-order-approved'\\\">\\n        {{ 'common.your-card-order' | translate }} <span class=\\\"text-info\\\">{{ cardOrder?.id | truncate: false:7:'' }}</span>\\n        {{ 'common.has-been-approved' | translate }}\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'card-order-shipped'\\\">\\n        {{ 'common.your-card-order' | translate }} <span class=\\\"text-info\\\">{{ cardOrder?.id | truncate: false:7:'' }}</span>\\n        {{ 'common.has-been-shipped' | translate }}\\n    </ng-container>\\n</ng-container>\\n\\n<!-- Helper -->\\n<ng-template let-user=\\\"user\\\" #userTemplate>\\n    <copy-wrap [value]=\\\"user?.accountNumber\\\">\\n        <span [ngbTooltip]=\\\"user?.accountNumber | accountNumber\\\">{{ user?.name }}</span>\\n    </copy-wrap>\\n</ng-template>\\n<ng-template let-user=\\\"user\\\" #userOrAppTemplate>\\n    <ng-container *ngIf=\\\"user; else app\\\">\\n        <copy-wrap *ngIf=\\\"allowUserCopy\\\" [value]=\\\"user.accountNumber\\\">\\n            <ng-container *ngTemplateOutlet=\\\"account\\\"></ng-container>\\n        </copy-wrap>\\n        <ng-container *ngIf=\\\"!allowUserCopy\\\">\\n            <ng-container *ngTemplateOutlet=\\\"account\\\"></ng-container>\\n        </ng-container>\\n        <ng-template #account>\\n            <span [ngbTooltip]=\\\"user?.accountNumber | accountNumber\\\">{{ user.name }}</span>\\n        </ng-template>\\n    </ng-container>\\n    <ng-template #app>\\n        {{ displayName }}\\n    </ng-template>\\n</ng-template>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser'\n\n@Pipe({ name: 'safeUrl' })\nexport class SafeUrlPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    public transform(value: string): SafeUrl {\n        return this.sanitizer.bypassSecurityTrustUrl(value)\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { forkJoin, Subscription } from 'rxjs'\nimport { switchMap } from 'rxjs/operators'\nimport { ICardProgram, IFee } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\n\ninterface CardFeeSchedule {\n    topupFee: IFee | null\n    atmFee: string | null\n    atmDeclineFee: string | null\n    fx: string | null\n    declineTransaction: string | null\n    replacementFee: string | null\n    ecomFee: string | null\n    posFee: string | null\n    annualLoadingLimit: string | null\n    monthlySpendingLimit: string | null\n    dailyPosEcomLimit: string | null\n    dailyAtmLimit: string | null\n    unloadFundsFee: IFee | null\n}\n\nenum NiumCardProgram {\n    AERAPASS_P1 = '117cab0b-7992-4e4a-9581-1c241e77684d',\n    AERAPASS_P2 = '4409785f-3df4-42af-bcf2-df1d23194872',\n    AERAPASS_P3 = '5e4572d8-195c-4f3d-84da-6788c467543f',\n    AERAPASS_P4 = '96e53529-3807-44f2-88cc-8514b8826819',\n    AERAPASS_P5 = '172ba6d8-714b-45d2-9106-c2cc691af4d7',\n    QNET = '198b1bf4-5b99-45c1-b7ee-2785c2d05e92',\n    SGPMX_SILVER = '77b97782-788f-4102-b6bc-1607ce97b0c4',\n    SGPMX_GOLD = '2f45a69f-5adb-4cab-b4d6-5af9a3cf4c8b',\n}\n\n@Component({\n    selector: 'card-fee-schedule',\n    templateUrl: 'card-fee-schedule.component.html',\n})\nexport class CardFeeScheduleComponent implements OnInit {\n    public cardFees: CardFeeSchedule = {\n        topupFee: null,\n        atmFee: null,\n        atmDeclineFee: null,\n        fx: null,\n        declineTransaction: null,\n        replacementFee: null,\n        ecomFee: null,\n        posFee: null,\n        annualLoadingLimit: null,\n        monthlySpendingLimit: null,\n        dailyPosEcomLimit: null,\n        dailyAtmLimit: null,\n        unloadFundsFee: null,\n    }\n\n    private subscriptions = new Subscription()\n\n    constructor(protected http: HttpClient, public session: SessionService, public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    switchMap(user =>\n                        forkJoin<IFee[], ICardProgram | undefined>([\n                            this.http.get<IFee[]>(`/users/${user.id}/fee-schedule`, {\n                                params: {\n                                    currencyCode: 'USD',\n                                },\n                            }),\n                            this.http.get<ICardProgram>(`/users/${this.session.user.id}/card-program`),\n                        ])\n                    )\n                )\n                .subscribe(([fees, userCardProgram]) => {\n                    const cardFee = fees.find(fee => fee.method === 'card') || null\n                    const unloadFundsFee = fees.find(fee => fee.method === 'card' && fee.type === 'deposit') || null\n\n                    if (!userCardProgram) {\n                        this.cardFees = this.getCardFeeSchedule(null, cardFee, unloadFundsFee)\n                    } else {\n                        this.cardFees = this.getCardFeeSchedule(userCardProgram, cardFee, unloadFundsFee)\n                    }\n                })\n        )\n    }\n\n    public getCardFeeSchedule(\n        cardProgram: ICardProgram | null,\n        topupFee: IFee | null,\n        unloadFundsFee: IFee | null\n    ): CardFeeSchedule {\n        switch (cardProgram?.niumClientId) {\n            case NiumCardProgram.AERAPASS_P1:\n                return {\n                    topupFee,\n                    atmFee: '4',\n                    atmDeclineFee: '0.5',\n                    fx: '2.75',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P2:\n                return {\n                    topupFee,\n                    atmFee: '8',\n                    atmDeclineFee: '0.5',\n                    fx: '2.75',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0.05',\n                    posFee: '0.05',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P3:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '2.75',\n                    declineTransaction: '0.25',\n                    replacementFee: '5',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P4:\n                return {\n                    topupFee,\n                    atmFee: '10',\n                    atmDeclineFee: '1',\n                    fx: '1.25',\n                    declineTransaction: '10',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P5:\n                return {\n                    topupFee,\n                    atmFee: '8',\n                    atmDeclineFee: '0.5',\n                    fx: '3.25',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0.25',\n                    posFee: '0.25',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.QNET:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '2.00',\n                    declineTransaction: '0',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.SGPMX_GOLD:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '2.95',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.SGPMX_SILVER:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '3.50',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            default:\n                return {\n                    topupFee,\n                    atmFee: null,\n                    atmDeclineFee: null,\n                    fx: null,\n                    declineTransaction: null,\n                    replacementFee: null,\n                    ecomFee: null,\n                    posFee: null,\n                    annualLoadingLimit: null,\n                    monthlySpendingLimit: null,\n                    dailyPosEcomLimit: null,\n                    dailyAtmLimit: null,\n                    unloadFundsFee: null,\n                }\n        }\n    }\n\n    public isZeroFee(fee: string): boolean {\n        return new BigNumber(fee).isZero()\n    }\n\n    public determineFees(type: keyof CardFeeSchedule): string {\n        let result = ''\n        const fee = this.cardFees[type] as IFee\n        if (\n            (fee && fee.fixed && !this.isZeroFee(fee.fixed || '0')) ||\n            (fee && fee.relative && !this.isZeroFee(fee.relative))\n        ) {\n            if (fee.fixed && !this.isZeroFee(fee.fixed)) {\n                result += new BigNumber(fee.fixed).toFixed(2) + ' USD'\n            }\n            if (fee.fixed && !this.isZeroFee(fee.fixed) && fee.relative && !this.isZeroFee(fee.relative)) {\n                result += ' + '\n            }\n            if (fee.relative && !this.isZeroFee(fee.relative)) {\n                result += new BigNumber(fee.relative).times(100).toFixed(2) + '%'\n            }\n        } else {\n            result = this.translate.instant('common.free').toUpperCase()\n        }\n        return result\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita'\nimport { ICurrency } from '../../common/api-interfaces'\n\nexport interface CurrenciesState extends EntityState<ICurrency, string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'currencies', idKey: 'code' })\nexport class CurrenciesStore extends EntityStore<CurrenciesState> {\n    constructor() {\n        super()\n    }\n}\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable, of, NEVER } from 'rxjs'\nimport { mergeMap, switchMap } from 'rxjs/operators'\nimport { LogoutService } from './services/logout.service'\nimport { SessionService } from './services/session.service'\n\n@Injectable()\nexport class TokenRequestInterceptor implements HttpInterceptor {\n    public readonly unauthorizedRoutes = ['/token']\n    constructor(private session: SessionService, private logout: LogoutService) {}\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return of(undefined).pipe(\n            switchMap(() => {\n                if (this.session.hasValidRefreshToken() && this.session.getExpiryTimeInSeconds() < 15) {\n                    return this.logout.logout().pipe(mergeMap(() => NEVER))\n                }\n                let headers = req.headers || new HttpHeaders()\n                if (req.url !== '/token' && this.session.hasValidToken() && !headers.has('Authorization')) {\n                    headers = headers.set('Authorization', 'Bearer ' + this.session.token)\n                }\n                return next.handle(req.clone({ headers, url: 'https://app.staging.aerapass.io/.api' + req.url }))\n            })\n        )\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'truncate' })\nexport class TruncatePipe implements PipeTransform {\n    public transform(value: string | null | undefined, wordwise = true, max = 100, tail = '...'): string {\n        if (!value) {\n            return ''\n        }\n        if (value.length <= max) {\n            return value\n        }\n        value = value.substr(0, max)\n        if (wordwise) {\n            const lastSpace = value.lastIndexOf(' ')\n            if (lastSpace !== -1) {\n                value = value.substr(0, lastSpace)\n                if (value[value.length - 1] === ',') {\n                    value = value.substr(0, value.length - 1)\n                }\n            }\n        }\n        return value + tail\n    }\n}\n","import { Component, Input } from '@angular/core'\nimport { IUser } from '../api-interfaces'\n\n@Component({\n    selector: 'account-number',\n    templateUrl: 'account-number.component.html',\n})\nexport class AccountNumberComponent {\n    @Input()\n    public user: IUser\n}\n","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { TokenService } from 'src/app/common/services/token.service'\nimport { LogoutService } from '../../../common/services/logout.service'\nimport { ToastrService } from '../../../common/services/toastr.service'\n\n@Component({ selector: 'logout-timer-modal', templateUrl: 'logout-timer-modal.component.html' })\nexport class LogoutTimerModalComponent {\n    constructor(\n        public activeModal: NgbActiveModal,\n        private logoutService: LogoutService,\n        private toastr: ToastrService,\n        public session: SessionService,\n        private tokenService: TokenService,\n        public translate: TranslateService\n    ) {}\n\n    public logout(): void {\n        this.logoutService.logout().subscribe(() => {\n            this.toastr.success(this.translate.instant('common.you-have-been-logged-out'))\n        })\n    }\n\n    public refresh(): void {\n        this.tokenService.refresh().subscribe(() => {\n            this.toastr.success(this.translate.instant('logout-timer.your-session-has-been-refreshed'))\n        })\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core'\nimport { CopyIconComponent } from '../copy-icon/copy-icon.component'\n\n@Component({\n    selector: 'copy-wrap',\n    templateUrl: 'copy-wrap.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyWrapComponent extends CopyIconComponent {}\n","import { IContact } from '../../api-interfaces'\nimport { User } from './user.model'\n\nexport class Contact implements IContact {\n    public id: string\n    public baseUser: User\n    public counterUser: User\n\n    constructor(data: IContact = {} as IContact) {\n        Object.assign(this, data)\n        if (data.baseUser) {\n            this.baseUser = new User(data.baseUser)\n        }\n        if (data.counterUser) {\n            this.counterUser = new User(data.counterUser)\n        }\n    }\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\nimport { enableAkitaProdMode, persistState } from '@datorama/akita'\nimport BigNumber from 'bignumber.js'\nimport { AppModule } from './app/app.module'\n\nfunction logSelfXssMessage(): void {\n    /* eslint-disable no-console */\n    console.log('%cStop!', 'color: red; font-size: x-large')\n    console.log(\n        `%cThis is a browser feature intended for developers only. If someone told you to copy-paste something here, it is a scam and will give them access to your account.`,\n        'font-size: large'\n    )\n    console.log('%cAre you a developer seeking a job? Ask hire() for more information.', 'color: orange')\n    /* eslint-enable no-console */\n}\n\n;(window as any).hire = () => {\n    // eslint-disable-next-line no-console\n    console.log('%cHey there! For job inquiries, contact us at jobs@aerapass.com', 'color:green')\n}\n\nBigNumber.config({ EXPONENTIAL_AT: [-6, 18] })\nif (!window.DEBUG) {\n    enableProdMode()\n    enableAkitaProdMode()\n    logSelfXssMessage()\n}\n\nconst storage = persistState()\n\nconst providers = [{ provide: 'persistStorage', useValue: storage }]\n\nplatformBrowserDynamic(providers)\n    .bootstrapModule(AppModule)\n    // eslint-disable-next-line no-console\n    .catch(error => console.error(error))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}