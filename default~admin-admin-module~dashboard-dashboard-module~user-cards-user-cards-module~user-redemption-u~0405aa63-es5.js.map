{"version":3,"sources":["webpack:///src/app/common/card-view/modal-unload/modal-unload.page.html","webpack:///src/app/common/card-dummy/card-dummy.component.ts","webpack:///src/app/common/card-view/modal-fees/modal-fees.page.ts","webpack:///src/app/common/card-view/card-view.page.html","webpack:///src/app/common/card-view/modal-change-pin/modal-change-pin.page.html","webpack:///src/app/user-cards/card-order-confirmation/card-order-confirmation.component.html","webpack:///src/app/common/models/accounting/fee.model.ts","webpack:///src/app/common/card-view/modal-download-transactions/modal-download-transactions.page.html","webpack:///src/app/common/card-view/modal-offledger/modal-offledger.page.ts","webpack:///src/app/common/card-view/modal-fees/modal-fees.page.scss","webpack:///src/app/common/card-view/modal-change-pin/modal-change-pin.page.ts","webpack:///src/app/common/card-view/modal-topup/modal-topup.page.ts","webpack:///src/app/common/card-view/modal-topup/modal-topup.page.html","webpack:///src/app/common/card-view/modal-change-pin/modal-change-pin.page.scss","webpack:///src/app/common/card-view/modal-offledger/modal-offledger.page.html","webpack:///src/app/common/card-view/modal-fees/modal-fees.page.html","webpack:///src/app/common/card-view/modal-swap/modal-swap.page.ts","webpack:///src/app/common/card-view/card-view-modal.scss","webpack:///node_modules/ease-component/index.js","webpack:///src/app/common/card-dummy/card-dummy.component.html","webpack:///src/app/common/card-view/card-details/card-details.page.html","webpack:///src/app/common/security-check/security-check.service.ts","webpack:///src/app/user-cards/card-order/card-order-terms/card-order-terms.component.ts","webpack:///src/app/common/services/accounting/fee.service.ts","webpack:///src/app/common/card-view/modal-download-transactions/modal-download-transactions.page.ts","webpack:///src/app/common/card-view/card-view.page.ts","webpack:///src/app/common/card-view/modal-swap/modal-swap.page.html","webpack:///src/app/common/card-view/card-details/card-details.page.ts","webpack:///src/app/user-cards/card-order/card-order-terms/card-order-terms.component.html","webpack:///src/app/user-cards/card-order-confirmation/card-order-confirmation.component.ts","webpack:///src/app/common/card-dummy/card-dummy.module.ts","webpack:///node_modules/scroll/index.js","webpack:///src/app/common/card-view/modal-unload/modal-unload.page.ts","webpack:///src/app/common/card-view/card-view.page.scss"],"names":["CardDummyComponent","appName","backgroundImage","styles","height","width","backgroundSize","zIndex","border","boxShadow","selector","template","ModalFeesPage","modalController","dismiss","feeTypeMap","deposit","withdrawal","transfer","conversion","investment","trade","redeem","service","gst","payment","feeMethodMap","internal","card","crypto","local","swift","Fee","data","Object","assign","currency","user","beneficiary","code","id","includes","type","getFeeType","transactionType","feeMap","invoice","ModalOffledgerPage","http","session","translate","load","sourceCurrencyCode","amount","destinationCurrencyCode","unload","currencyCode","comments","isLoading","niumCurrencies","offLedgerForm","invalid","post","item","pipe","subscribe","response","ModalChangePinPage","pinBlock","changePinForm","put","pin","ModalTopupPage","walletsQuery","currenciesQuery","feeService","from","topup","isGettingExchangeRate","exchangeRate","subcriptions","add","fetch","method","cardTopupFee","selectEntity","usd","preferredCurrency","unsubscribe","transactionForm","found","balances","find","b","curSymbol","balance","balances$","parseFloat","determineFee","relativeFee","fixedFee","relativeFeeAmount","times","totalFee","plus","toFixed","cardholder","cardProgram","minus","calculateFee","ModalSwapPage","swap","filterSourceCurrencies","filterDestinationCurrencies","filteredDestinationCurrencies","getExchangeRate","filteredCardBalances","filter","isZero","c","a","exports","linear","n","inQuad","outQuad","inOutQuad","inCube","outCube","inOutCube","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","inSine","Math","cos","PI","outSine","sin","inOutSine","inExpo","pow","outExpo","inOutExpo","inCirc","sqrt","outCirc","inOutCirc","inBack","s","outBack","inOutBack","inBounce","outBounce","inOutBounce","SecurityCheckService","ngbModal","scope","hasTokenScope","undefined","modal","open","windowClass","componentInstance","observer","result","then","next","complete","providedIn","ease","scroll","CardOrderTermsComponent","element","toastr","isDown","viewOnly","isLoaded","scrollHandler","modalContainer","scrollTop","scrollHeight","offsetHeight","setTimeout","nativeElement","querySelector","addEventListener","get","terms","removeEventListener","top","clientHeight","duration","warning","instant","close","accept","FeeService","fee","round","random","jsonrpc","params","headers","currentTransaction","transaction","fixed","convert","relative","min","minFee","isLessThan","max","maxFee","isGreaterThan","ModalDownloadTransactionsPage","calendar","faCalendarAlt","subscriptions","fromDate","year","Date","getFullYear","month","day","toDate","getToday","userStream","createSignedUrl","signedUrl","window","parseNgbdate","date","toLocaleString","minimumIntegerDigits","useGrouping","CardViewPage","alertController","securityCheckService","walletsService","transactionService","activeTab","counterWallet","copy","transactions","page","size","isFetching","isBlockUnblockLoading","faEye","fetchBalanceEvent","wallets$","filteredBalances$","digitalCardArtwork","digitalCardArtWorkUrl","limit","map","payload","currencies","details","userDetails","length","selectAll","availableCurrencies","balanceInUsd","toNumber","sort","prev","fetchTransactions","event","reset","content","createdAt","totalElements","concat","target","checked","create","header","message","buttons","text","role","cssClass","handler","status","success","alert","present","getTop","component","presentingElement","componentProps","onWillDismiss","destinationAmount","refreshBalance","getScopePermission","termsModal","backdrop","backdropClass","dismissHeader","dismissMessage","console","log","pan","slice","tx","merchantName","label","labels","feeName","debit","changeEvent","emit","CardDetailsPage","faCopy","cardNumber","CardOrderConfirmationComponent","activeModal","router","subscriptrions","cardOrderConfirmForm","valid","cardOrder","shippingAddress","url","navigate","CardDummyModule","declarations","imports","E_NOSCROLL","Error","E_CANCELLED","ms","now","module","left","make","prop","el","to","opts","cb","noop","start","isNaN","cancelled","requestAnimationFrame","animate","cancel","timestamp","time","eased","ModalUnloadPage","fetchEvent","subscription","destinationCurrency","unloadCardFee","unloadForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFA,kBAAkB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAUpB,mBAAO;AACV,oBAAQ,yEAAYC,OAApB;AACI,mBAAK,OAAL;AACI,uBAAO,4BAAP;;AACJ,mBAAK,cAAL;AACA,mBAAK,KAAL;AACA,mBAAK,OAAL;AACA,mBAAK,SAAL;AACA,mBAAK,WAAL;AACI,uBAAO,qBAAP;;AACJ;AACI,uBAAO,kCAAP;AAVR;AAYH;AAvB0B;AAAA;AAAA,iBAyBpB,mCAA0B;AAC7B,gBAAI,CAAC,KAAKC,eAAV,EAA2B;AACvB;AACH;;AACD,gBAAMC,MAAM,GAAG;AACXD,6BAAe,EAAE,SAAS,KAAKA,eAAd,GAAgC,GADtC;AAEXE,oBAAM,EAAE,OAFG;AAGXC,mBAAK,EAAE,OAHI;AAIXC,4BAAc,EAAE,SAJL;AAKXC,oBAAM,EAAE,MALG;AAMXC,oBAAM,EAAE,MANG;AAOXC,uBAAS,EAAE;AAPA,aAAf;AASA,mBAAON,MAAP;AACH;AAvC0B;;AAAA;AAAA,S;;;;gBAC1B;;;gBAEA;;;gBAEA;;;gBAEA;;;AAPQH,wBAAkB,6DAJ9B,gEAAU;AACPU,gBAAQ,EAAE,YADH;AAEPC,gBAAQ,EAAR;AAFO,OAAV,CAI8B,GAAlBX,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAY,aAAa;AACtB,+BAAoBC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAAoC;;AADlC;AAAA;AAAA,iBAGf,mBAAO;AACV,iBAAKA,eAAL,CAAqBC,OAArB;AACH;AALqB;;AAAA;AAAA,S;;;;gBAPjB;;;;AAOIF,mBAAa,6DALzB,gEAAU;AACPF,gBAAQ,EAAE,gBADH;AAEPC,gBAAQ,EAAR,wEAFO;;AAAA,OAAV,CAKyB,GAAbC,aAAa,CAAb;;;;;;;;;;;;;;;;ACRb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,UAAMG,UAAU,GAA+B;AAClD,uBAAe,aADmC;AAElD,sBAAc,gBAFoC;AAGlD,qBAAa,sBAHqC;AAIlDC,eAAO,EAAE,SAJyC;AAKlDC,kBAAU,EAAE,YALsC;AAMlDC,gBAAQ,EAAE,UANwC;AAOlDC,kBAAU,EAAE,YAPsC;AAQlDC,kBAAU,EAAE,YARsC;AASlDC,aAAK,EAAE,OAT2C;AAUlDC,cAAM,EAAE,QAV0C;AAWlDC,eAAO,EAAE,YAXyC;AAYlDC,WAAG,EAAE,KAZ6C;AAalDC,eAAO,EAAE;AAbyC,OAA/C;AAgBA,UAAMC,YAAY,GAAyC;AAC9DC,gBAAQ,EAAE,UADoD;AAE9DC,YAAI,EAAE,YAFwD;AAG9DC,cAAM,EAAE,QAHsD;AAI9DC,aAAK,EAAE,OAJuD;AAK9DC,aAAK,EAAE;AALuD,OAA3D;;UAQMC,G;AAeT,qBAAmBC,IAAnB,EAAyC;AAAA;;AACrC,cAAIA,IAAJ,EAAU;AACNC,kBAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;;AACA,gBAAIA,IAAI,CAACG,QAAT,EAAmB;AACf,mBAAKA,QAAL,GAAgB,IAAI,wDAAJ,CAAaH,IAAI,CAACG,QAAlB,CAAhB;AACH;;AACD,gBAAIH,IAAI,CAACI,IAAT,EAAe;AACX,mBAAKA,IAAL,GAAY,IAAI,qDAAJ,CAASJ,IAAI,CAACI,IAAd,CAAZ;AACH;;AACD,gBAAIJ,IAAI,CAACK,WAAT,EAAsB;AAClB,mBAAKA,WAAL,GAAmB,IAAI,8DAAJ,CAAgBL,IAAI,CAACK,WAArB,CAAnB;AACH;AACJ;AACJ;;;;iBAEM,oBAAQ;AACX,mBAAO,KAAKD,IAAL,KAAc,IAArB;AACH;;;iBAEM,oBAAWD,QAAX,EAA6B;AAChC,mBAAO,KAAKA,QAAL,CAAcG,IAAd,KAAuBH,QAAQ,CAACG,IAAvC;AACH;;;iBAEM,0BAAiBF,IAAjB,EAAkC;AACrC,mBAAO,CAAC,CAAC,KAAKA,IAAP,IAAe,CAAC,CAACA,IAAjB,IAAyB,KAAKA,IAAL,CAAUG,EAAV,KAAiBH,IAAI,CAACG,EAAtD;AACH;;;iBAEM,uBAAW;AACd,mBAAO,CAAC,CAAC,WAAD,EAAc,SAAd,EAAyB,KAAzB,EAAgCC,QAAhC,CAAyC,KAAKC,IAA9C,CAAR;AACH;;;iBAEM,0BAAc;AACjB,mBAAO,CAAC,CAAC,aAAD,EAAgBD,QAAhB,CAAyB,KAAKC,IAA9B,CAAR;AACH;;;iBAEM,uBAAW;AACd,mBAAO,CAAC,CAAC,aAAD,EAAgB,WAAhB,EAA6BD,QAA7B,CAAsC,KAAKC,IAA3C,CAAR;AACH;;;iBAEM,uBAAW;AACd,mBAAO,CAAC,UAAD,EAAa,SAAb,EAAwB,YAAxB,EAAsCD,QAAtC,CAA+C,KAAKC,IAApD,CAAP;AACH;;;;;;AAGE,eAASC,UAAT,CAAoBC,eAApB,EAA2C;AAC9C,YAAMC,MAAM,GAA4B;AACpC7B,iBAAO,EAAE,SAD2B;AAEpCC,oBAAU,EAAE,YAFwB;AAGpCC,kBAAQ,EAAE,UAH0B;AAIpCC,oBAAU,EAAE,YAJwB;AAKpCC,oBAAU,EAAE,YALwB;AAMpCC,eAAK,EAAE,OAN6B;AAOpCC,gBAAM,EAAE,QAP4B;AAQpCG,iBAAO,EAAE,SAR2B;AASpC;AACAqB,iBAAO,EAAE,UAV2B;AAWpC,yBAAe,UAXqB;AAYpC,wBAAc,YAZsB;AAapC,yBAAe;AAbqB,SAAxC;AAeA,eAAOD,MAAM,CAACD,eAAD,CAAb;AACH;;;;;;;;;;;;;;;;;ACzGD;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCyCFG,kBAAkB;AA0B3B,oCACYC,IADZ,EAEWC,OAFX,EAGYpC,eAHZ,EAIWqC,SAJX,EAIsC;AAAA;;AAH1B,eAAAF,IAAA,GAAAA,IAAA;AACD,eAAAC,OAAA,GAAAA,OAAA;AACC,eAAApC,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AAvBJ,eAAAC,IAAA,GAAoB;AACvBC,8BAAkB,EAAE,KADG;AAEvBC,kBAAM,EAAE,EAFe;AAGvBC,mCAAuB,EAAE;AAHF,WAApB;AAKA,eAAAC,MAAA,GAAwB;AAC3BC,wBAAY,EAAE,KADa;AAE3BH,kBAAM,EAAE,EAFmB;AAG3BI,oBAAQ,EAAE;AAHiB,WAAxB;AAKA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,cAAA,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAAjB;AAEA,eAAA1D,OAAA,GAAU,yEAAYA,OAAtB;AAUH;;AA/BuB;AAAA;AAAA,iBAiC3B,oBAAW,CAAE;AAjCc;AAAA;AAAA,iBAmCd,+BAAmB;;;;;;;;2BACxB,KAAK2D,aAAL,CAAmBC,O;;;;;;;;AAGvB,2BAAKH,SAAL,GAAiB,IAAjB;;AACA,0BAAI,KAAKhB,IAAL,KAAc,MAAlB,EAA0B;AACtB,6BAAKS,IAAL,CAAUE,MAAV,IAAoB,EAApB;AACA,6BAAKL,IAAL,CACKc,IADL,kBAC8C,KAAKC,IAAL,CAAUvB,EADxD,YACmE,KAAKW,IADxE,EAEKa,IAFL,CAGQ,gEAAS,YAAM;AACX,+BAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,yBAFD,CAHR,EAOKO,SAPL,CAOe,UAAAC,QAAQ,EAAI;AACnB,+BAAI,CAACrD,eAAL,CAAqBC,OAArB,CAA6BoD,QAA7B;AACH,yBATL;AAUH,uBAZD,MAYO;AACH,6BAAKX,MAAL,CAAYF,MAAZ,IAAsB,EAAtB;AACA,6BAAKL,IAAL,CACKc,IADL,kBAC4C,KAAKC,IAAL,CAAUvB,EADtD,cACmE,KAAKe,MADxE,EAEKS,IAFL,CAGQ,gEAAS,YAAM;AACX,+BAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,yBAFD,CAHR,EAOKO,SAPL,CAOe,UAAAC,QAAQ,EAAI;AACnB,+BAAI,CAACrD,eAAL,CAAqBC,OAArB,CAA6BoD,QAA7B;AACH,yBATL;AAUH;;;;;;;;;AACJ;AAjE0B;AAAA;AAAA,iBAmEpB,mBAAO;AACV,iBAAKrD,eAAL,CAAqBC,OAArB;AACH;AArE0B;;AAAA;AAAA,S;;;;gBAzCtB;;gBAQA;;gBALA;;gBACA;;;;;;gBA4DJ,uD;AAAS,iBAAC,eAAD;;;AAvBDiC,wBAAkB,6DAJ9B,gEAAU;AACPrC,gBAAQ,EAAE,qBADH;AAEPC,gBAAQ,EAAR;AAFO,OAAV,CAI8B,GAAlBoC,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACzCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFoB,kBAAkB;AAS3B,oCAAoBnB,IAApB,EAA6CC,OAA7C,EAA8EpC,eAA9E,EAAgH;AAAA;;AAA5F,eAAAmC,IAAA,GAAAA,IAAA;AAAyB,eAAAC,OAAA,GAAAA,OAAA;AAAiC,eAAApC,eAAA,GAAAA,eAAA;AAPvE,eAAAuD,QAAA,GAAW,EAAX;AAEA,eAAAV,SAAA,GAAY,KAAZ;AAK2G;;AATvF;AAAA;AAAA,iBAW3B,oBAAW,CAAE;AAXc;AAAA;AAAA,iBAad,qBAAS;;;;;;;;2BACd,KAAKW,aAAL,CAAmBR,O;;;;;;;;AAGvB,2BAAKH,SAAL,GAAiB,IAAjB;AACA,2BAAKV,IAAL,CACKsB,GADL,kBAC0B,KAAKP,IAAL,CAAUvB,EADpC,WAC8C;AAAE+B,2BAAG,EAAE,KAAKH;AAAZ,uBAD9C,EAEKJ,IAFL,CAGQ,gEAAS,YAAM;AACX,8BAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,uBAFD,CAHR,EAOKO,SAPL,CAOe,UAAAC,QAAQ,EAAI;AACnB,8BAAI,CAACrD,eAAL,CAAqBC,OAArB,CAA6BoD,QAA7B;AACH,uBATL;;;;;;;;;AAUH;AA5B0B;AAAA;AAAA,iBA8BpB,mBAAO;AACV,iBAAKrD,eAAL,CAAqBC,OAArB;AACH;AAhC0B;;AAAA;AAAA,S;;;;gBAbtB;;gBAMA;;gBAHA;;;;;;gBAgBJ,uD;AAAS,iBAAC,eAAD;;;AANDqD,wBAAkB,6DAL9B,gEAAU;AACPzD,gBAAQ,EAAE,sBADH;AAEPC,gBAAQ,EAAR,8EAFO;;AAAA,OAAV,CAK8B,GAAlBwD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgCAK,cAAc;AAyBvB,gCACYxB,IADZ,EAEWC,OAFX,EAGYpC,eAHZ,EAIY4D,YAJZ,EAKYC,eALZ,EAMYC,UANZ,EAMkC;AAAA;;AALtB,eAAA3B,IAAA,GAAAA,IAAA;AACD,eAAAC,OAAA,GAAAA,OAAA;AACC,eAAApC,eAAA,GAAAA,eAAA;AACA,eAAA4D,YAAA,GAAAA,YAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AA3BL,eAAAC,IAAA,GAAkB;AAAErC,gBAAI,EAAE;AAAR,WAAlB;AACA,eAAAsC,KAAA,GAAsB;AACzBzB,8BAAkB,EAAE,KADK;AAEzBC,kBAAM,EAAE,EAFiB;AAGzBC,mCAAuB,EAAE;AAHA,WAAtB;AAKA,eAAAI,SAAA,GAAY,KAAZ;AACA,eAAAoB,qBAAA,GAAwB,KAAxB;AAEA,eAAAC,YAAA,GAAe,GAAf;AAEA,eAAApB,cAAA,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAAjB;AAEA,eAAA1D,OAAA,GAAU,0EAAYA,OAAtB;AAGA,eAAA+E,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAYH;;AAhCmB;AAAA;AAAA,iBAkChB,oBAAW;AAAA;;AACd,iBAAKA,YAAL,CAAkBC,GAAlB,CACI,KAAKN,UAAL,CACKO,KADL,CACW;AACHxC,kBAAI,EAAE,YADH;AAEHyC,oBAAM,EAAE,MAFL;AAGH/C,sBAAQ,EAAE,KAAKwC,IAHZ;AAIHvC,kBAAI,EAAE,IAAI,6DAAJ,CAAS,KAAKY,OAAL,CAAaZ,IAAtB;AAJH,aADX,EAOK4B,SAPL,CAOe,UAAAmB,YAAY;AAAA,qBAAK,MAAI,CAACA,YAAL,GAAoBA,YAAzB;AAAA,aAP3B,CADJ;AAUA,iBAAKJ,YAAL,CAAkBC,GAAlB,CACI,KAAKP,eAAL,CACKW,YADL,CACkB,KADlB,EAEKrB,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGKC,SAHL,CAGe,UAAAqB,GAAG,EAAI;AACd,oBAAI,CAAClD,QAAL,GAAgBkD,GAAhB;AACH,aALL,CADJ;;AASA,gBAAI,KAAK3B,cAAL,CAAoBlB,QAApB,CAA6B,KAAKQ,OAAL,CAAaZ,IAAb,CAAkBkD,iBAAlB,CAAoChD,IAAjE,CAAJ,EAA4E;AACxE,mBAAKsC,KAAL,CAAWvB,uBAAX,GAAqC,KAAKL,OAAL,CAAaZ,IAAb,CAAkBkD,iBAAlB,CAAoChD,IAAzE;AACH;AACJ;AAzDsB;AAAA;AAAA,iBA2DhB,uBAAc;AACjB,iBAAKyC,YAAL,CAAkBQ,WAAlB;AACH;AA7DsB;AAAA;AAAA,iBA+DV,qBAAS;;;;;;;;2BACd,KAAKC,eAAL,CAAqB5B,O;;;;;;;;AAGzB,2BAAKH,SAAL,GAAiB,IAAjB;AACA,2BAAKmB,KAAL,CAAWzB,kBAAX,GAAgC,KAAKwB,IAAL,CAAUrC,IAA1C;AACA,2BAAKsC,KAAL,CAAWxB,MAAX,IAAqB,EAArB;AACA,2BAAKL,IAAL,CACKc,IADL,kBAC4C,KAAKC,IAAL,CAAUvB,EADtD,aACkE,KAAKqC,KADvE,EAEKb,IAFL,CAGQ,gEAAS,YAAM;AACX,8BAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,uBAFD,CAHR,EAOKO,SAPL,CAOe,UAAAC,QAAQ,EAAI;AACnB,8BAAI,CAACrD,eAAL,CAAqBC,OAArB,CAA6BoD,QAA7B;AACH,uBATL;;;;;;;;;AAUH;AAhFsB;AAAA;AAAA,iBAkFhB,wBAAe3B,IAAf,EAA2B;AAC9B,gBAAMmD,KAAK,GAAG,KAAKC,QAAL,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,SAAF,KAAgBvD,IAApB;AAAA,aAApB,CAAd;;AACA,gBAAImD,KAAJ,EAAW;AACP,qBAAOA,KAAK,CAACK,OAAN,GAAgB,EAAvB;AACH;;AACD,mBAAO,MAAP;AACH;AAxFsB;AAAA;AAAA,iBA0FhB,kBAAM;AAAA;;AACT,iBAAKf,YAAL,CAAkBC,GAAlB,CACI,KAAKR,YAAL,CAAkBuB,SAAlB,CAA4B/B,SAA5B,CAAsC,UAAA0B,QAAQ,EAAI;AAC9C,kBAAMD,KAAK,GAAGC,QAAQ,CAACC,IAAT,CAAc,UAAAG,OAAO;AAAA,uBAAIA,OAAO,CAAC3D,QAAR,CAAiBG,IAAjB,KAA0B,MAAI,CAACqC,IAAL,CAAUrC,IAAxC;AAAA,eAArB,CAAd;;AACA,kBAAImD,KAAJ,EAAW;AACP,sBAAI,CAACb,KAAL,CAAWxB,MAAX,GAAoB4C,UAAU,CAACP,KAAK,CAACK,OAAP,CAA9B;AACH;AACJ,aALD,CADJ;AAQH;AAnGsB;AAAA;AAAA,iBAqGhB,wBAAY;AACf,wCAAkC,KAAKpB,UAAL,CAAgBuB,YAAhB,CAC9B;AACI7C,oBAAM,EAAE,KAAKwB,KAAL,CAAWxB,MAAX,GAAoB,EAApB,IAA0B,GADtC;AAEIjB,sBAAQ,EAAE,KAAKA;AAFnB,aAD8B,EAK9B,KAAKgD,YALyB,CAAlC;AAAA,gBAAQe,WAAR,yBAAQA,WAAR;AAAA,gBAAqBC,QAArB,yBAAqBA,QAArB;;AAOA,gBAAMC,iBAAiB,GAAG,IAAI,mDAAJ,CAAc,KAAKxB,KAAL,CAAWxB,MAAX,IAAqB,CAAnC,EAAsCiD,KAAtC,CAA4CH,WAAW,IAAI,CAA3D,CAA1B;AACA,gBAAMI,QAAQ,GAAG,IAAI,mDAAJ,CAAcH,QAAQ,IAAI,CAA1B,EAA6BI,IAA7B,CAAkCH,iBAAlC,CAAjB;AAEA,mBAAOE,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoB,CAApB,CAAP;AACH;AAjHsB;AAAA;AAAA,iBAmHhB,wBAAY;AACf,mBAAO,KAAK7B,IAAL,CAAUrC,IAAV,KAAmB,KAAKsC,KAAL,CAAWvB,uBAArC;AACH;AArHsB;AAAA;AAAA,iBAuHhB,2BAAe;AAAA;;;;AAClB,iBAAKwB,qBAAL,GAA6B,IAA7B;;AACA,gBAAI,KAAKF,IAAL,CAAUrC,IAAV,KAAmB,KAAKsC,KAAL,CAAWvB,uBAAlC,EAA2D;AACvD,mBAAKN,IAAL,CACKc,IADL,0BAE0B,iBAAKC,IAAL,CAAU2C,UAAV,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,WAAtB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEnE,EAF7D,yBAGQ;AACIY,kCAAkB,EAAE,KAAKwB,IAAL,CAAUrC,IADlC;AAEIe,uCAAuB,EAAE,KAAKuB,KAAL,CAAWvB;AAFxC,eAHR,EAQKU,IARL,CASQ,gEAAS,YAAM;AACX,sBAAI,CAACc,qBAAL,GAA6B,KAA7B;AACH,eAFD,CATR,EAaKb,SAbL,CAae,UAAAC,QAAQ,EAAI;AACnB,sBAAI,CAACa,YAAL,GAAoBb,QAAQ,CAACa,YAA7B;AACH,eAfL;AAgBH,aAjBD,MAiBO;AACH,mBAAKA,YAAL,GAAoB,GAApB;AACA,mBAAKD,qBAAL,GAA6B,KAA7B;AACH;AACJ;AA9IsB;AAAA;AAAA,iBAgJhB,2BAAe;AAClB,gBAAI,CAAC,KAAKD,KAAL,CAAWxB,MAAhB,EAAwB;AACpB,qBAAO,GAAP;AACH;;AAED,mBAAO,IAAI,mDAAJ,CAAc,KAAKwB,KAAL,CAAWxB,MAAX,IAAqB,CAAnC,EACFuD,KADE,CACI,IAAI,mDAAJ,CAAc,KAAKC,YAAL,EAAd,CADJ,EAEFP,KAFE,CAEI,KAAKvB,YAFT,EAGF0B,OAHE,CAGM,CAHN,CAAP;AAIH;AAzJsB;AAAA;AAAA,iBA2JhB,mBAAO;AACV,iBAAK5F,eAAL,CAAqBC,OAArB;AACH;AA7JsB;;AAAA;AAAA,S;;;;gBA7ClB;;gBAcA;;gBAXA;;gBAKA;;gBADA;;gBAMA;;;;;;gBAsDJ,uD;AAAS,iBAAC,iBAAD;;;AAtBD0D,oBAAc,6DAL1B,gEAAU;AACP9D,gBAAQ,EAAE,iBADH;AAEPC,gBAAQ,EAAR,yEAFO;;AAAA,OAAV,CAK0B,GAAd6D,cAAc,CAAd;;;;;;;;;;;;;;;;AC7Cb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCyCFsC,aAAa;AA0BtB,+BACY9D,IADZ,EAEWC,OAFX,EAGYpC,eAHZ,EAIY8D,UAJZ,EAIkC;AAAA;;AAHtB,eAAA3B,IAAA,GAAAA,IAAA;AACD,eAAAC,OAAA,GAAAA,OAAA;AACC,eAAApC,eAAA,GAAAA,eAAA;AACA,eAAA8D,UAAA,GAAAA,UAAA;AA1BL,eAAAoC,IAAA,GAAoB;AACvB3D,8BAAkB,EAAE,EADG;AAEvBC,kBAAM,EAAE,EAFe;AAGvBC,mCAAuB,EAAE;AAHF,WAApB;AAKA,eAAAI,SAAA,GAAY,KAAZ;AACA,eAAAoB,qBAAA,GAAwB,KAAxB;AAEA,eAAAC,YAAA,GAAe,GAAf;AAEA,eAAApB,cAAA,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAAjB;AAIA,eAAA1D,OAAA,GAAU,yEAAYA,OAAtB;AAGA,eAAA+E,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAUH;;AA/BkB;AAAA;AAAA,iBAiCf,oBAAW;AACd,iBAAKgC,sBAAL;AACA,iBAAKD,IAAL,CAAU3D,kBAAV,GAA+B,KAA/B;AACA,iBAAK6D,2BAAL;AACA,iBAAKF,IAAL,CAAUzD,uBAAV,GAAoC,KAAK4D,6BAAL,CAAmC,CAAnC,CAApC;AACA,iBAAKC,eAAL;AACH;AAvCqB;AAAA;AAAA,iBAyCf,uBAAc;AACjB,iBAAKnC,YAAL,CAAkBQ,WAAlB;AACH;AA3CqB;AAAA;AAAA,iBA6CT,qBAAS;;;;;;;;2BACd,KAAKC,eAAL,CAAqB5B,O;;;;;;;;AAGzB,2BAAKH,SAAL,GAAiB,IAAjB;AAEA,2BAAKqD,IAAL,CAAU1D,MAAV,GAAmB,KAAK0D,IAAL,CAAU1D,MAAV,GAAmB,EAAtC;AAEA,2BAAKL,IAAL,CACKc,IADL,kBAC4C,KAAKC,IAAL,CAAUvB,EADtD,YACiE,KAAKuE,IADtE,EAEK/C,IAFL,CAGQ,gEAAS,YAAM;AACX,8BAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,uBAFD,CAHR,EAOKO,SAPL,CAOe,UAAAC,QAAQ,EAAI;AACnB,8BAAI,CAACrD,eAAL,CAAqBC,OAArB,CAA6BoD,QAA7B;AACH,uBATL;;;;;;;;;AAUH;AA/DqB;AAAA;AAAA,iBAiEf,kCAAyB;AAC5B,iBAAKkD,oBAAL,GAA4B,KAAKzB,QAAL,CAAc0B,MAAd,CAAqB,UAAAxB,CAAC;AAAA,qBAAI,CAAC,IAAI,mDAAJ,CAAcA,CAAC,CAACE,OAAhB,EAAyBuB,MAAzB,EAAL;AAAA,aAAtB,CAA5B;AACH;AAnEqB;AAAA;AAAA,iBAqEf,uCAA8B;AAAA;;AACjC,iBAAKJ,6BAAL,GAAqC,KAAKvD,cAAL,CAAoB0D,MAApB,CAA2B,UAAAE,CAAC;AAAA,qBAAIA,CAAC,KAAK,MAAI,CAACR,IAAL,CAAU3D,kBAApB;AAAA,aAA5B,CAArC;AACH;AAvEqB;AAAA;AAAA,iBAyEf,wBAAeb,IAAf,EAA2B;AAC9B,gBAAMmD,KAAK,GAAG,KAAKC,QAAL,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,SAAF,KAAgBvD,IAApB;AAAA,aAApB,CAAd;;AACA,gBAAImD,KAAJ,EAAW;AACP,qBAAOA,KAAK,CAACK,OAAN,GAAgB,EAAvB;AACH;;AACD,mBAAO,MAAP;AACH;AA/EqB;AAAA;AAAA,iBAiFf,kBAAM;AAAA;;AACT,gBAAML,KAAK,GAAG,KAAKC,QAAL,CAAcC,IAAd,CAAmB,UAAAG,OAAO;AAAA,qBAAIA,OAAO,CAACD,SAAR,KAAsB,MAAI,CAACiB,IAAL,CAAU3D,kBAApC;AAAA,aAA1B,CAAd;;AACA,gBAAIsC,KAAJ,EAAW;AACP,mBAAKqB,IAAL,CAAU1D,MAAV,GAAmB4C,UAAU,CAACP,KAAK,CAACK,OAAP,CAA7B;AACH;AACJ;AAtFqB;AAAA;AAAA,iBAwFf,wBAAY;AACf,yCAAkC,KAAKpB,UAAL,CAAgBuB,YAAhB,CAC9B;AACI7C,oBAAM,EAAE,KAAK0D,IAAL,CAAU1D,MAAV,GAAmB,EAAnB,IAAyB,GADrC;AAEIjB,sBAAQ,EAAE,KAAKA;AAFnB,aAD8B,EAK9B,KAAKgD,YALyB,CAAlC;AAAA,gBAAQe,WAAR,0BAAQA,WAAR;AAAA,gBAAqBC,QAArB,0BAAqBA,QAArB;;AAOA,gBAAMC,iBAAiB,GAAG,IAAI,mDAAJ,CAAc,KAAKU,IAAL,CAAU1D,MAAV,IAAoB,CAAlC,EAAqCiD,KAArC,CAA2CH,WAAW,IAAI,CAA1D,CAA1B;AACA,gBAAMI,QAAQ,GAAG,IAAI,mDAAJ,CAAcH,QAAQ,IAAI,CAA1B,EAA6BI,IAA7B,CAAkCH,iBAAlC,CAAjB;AAEA,mBAAOE,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoB,CAApB,CAAP;AACH;AApGqB;AAAA;AAAA,iBAsGf,wBAAY;AACf,mBAAO,KAAKM,IAAL,CAAU3D,kBAAV,KAAiC,KAAK2D,IAAL,CAAUzD,uBAAlD;AACH;AAxGqB;AAAA;AAAA,iBA0Gf,2BAAe;AAAA;;;;AAClB,iBAAKwB,qBAAL,GAA6B,IAA7B;;AACA,gBAAI,KAAKiC,IAAL,CAAU3D,kBAAV,KAAiC,KAAK2D,IAAL,CAAUzD,uBAA/C,EAAwE;AACpE,mBAAKN,IAAL,CACKc,IADL,0BAE0B,iBAAKC,IAAL,CAAU2C,UAAV,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,WAAtB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEnE,EAF7D,yBAGQ;AACIY,kCAAkB,EAAE,KAAK2D,IAAL,CAAU3D,kBADlC;AAEIE,uCAAuB,EAAE,KAAKyD,IAAL,CAAUzD;AAFvC,eAHR,EAQKU,IARL,CASQ,gEAAS,YAAM;AACX,uBAAI,CAACc,qBAAL,GAA6B,KAA7B;AACH,eAFD,CATR,EAaKb,SAbL,CAae,UAAAC,QAAQ,EAAI;AACnB,uBAAI,CAACa,YAAL,GAAoBb,QAAQ,CAACa,YAA7B;AACH,eAfL;AAgBH,aAjBD,MAiBO;AACH,mBAAKA,YAAL,GAAoB,GAApB;AACA,mBAAKD,qBAAL,GAA6B,KAA7B;AACH;AACJ;AAjIqB;AAAA;AAAA,iBAmIf,2BAAe;AAClB,gBAAI,CAAC,KAAKiC,IAAL,CAAU1D,MAAf,EAAuB;AACnB,qBAAO,GAAP;AACH;;AAED,mBAAO,IAAI,mDAAJ,CAAc,KAAK0D,IAAL,CAAU1D,MAAV,IAAoB,CAAlC,EACFuD,KADE,CACI,IAAI,mDAAJ,CAAc,KAAKC,YAAL,EAAd,CADJ,EAEFP,KAFE,CAEI,KAAKvB,YAFT,EAGF0B,OAHE,CAGM,CAHN,CAAP;AAIH;AA5IqB;AAAA;AAAA,iBA8If,2BAAkBe,CAAlB,EAA0B3B,CAA1B,EAAmC;AACtC,mBAAO2B,CAAC,CAAC1B,SAAF,KAAgBD,CAAvB;AACH;AAhJqB;AAAA;AAAA,iBAkJf,mBAAO;AACV,iBAAKhF,eAAL,CAAqBC,OAArB;AACH;AApJqB;;AAAA;AAAA,S;;;;gBAzCjB;;gBAWA;;gBARA;;gBAOA;;;;;;gBAsDJ,uD;AAAS,iBAAC,iBAAD;;;AAvBDgG,mBAAa,6DAJzB,gEAAU;AACPpG,gBAAQ,EAAE,gBADH;AAEPC,gBAAQ,EAAR;AAFO,OAAV,CAIyB,GAAbmG,aAAa,CAAb;;;;;;;;;;;;;;;;ACzCb;AAAe;;;AAAA;;;;;;;;;;;;;;ACCf;AAEAW,aAAO,CAACC,MAAR,GAAiB,UAASC,CAAT,EAAW;AAC1B,eAAOA,CAAP;AACD,OAFD;;AAIAF,aAAO,CAACG,MAAR,GAAiB,UAASD,CAAT,EAAW;AAC1B,eAAOA,CAAC,GAAGA,CAAX;AACD,OAFD;;AAIAF,aAAO,CAACI,OAAR,GAAkB,UAASF,CAAT,EAAW;AAC3B,eAAOA,CAAC,IAAI,IAAIA,CAAR,CAAR;AACD,OAFD;;AAIAF,aAAO,CAACK,SAAR,GAAoB,UAASH,CAAT,EAAW;AAC7BA,SAAC,IAAI,CAAL;AACA,YAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,MAAMA,CAAN,GAAUA,CAAjB;AACX,eAAO,CAAE,GAAF,IAAS,EAAEA,CAAF,IAAOA,CAAC,GAAG,CAAX,IAAgB,CAAzB,CAAP;AACD,OAJD;;AAMAF,aAAO,CAACM,MAAR,GAAiB,UAASJ,CAAT,EAAW;AAC1B,eAAOA,CAAC,GAAGA,CAAJ,GAAQA,CAAf;AACD,OAFD;;AAIAF,aAAO,CAACO,OAAR,GAAkB,UAASL,CAAT,EAAW;AAC3B,eAAO,EAAEA,CAAF,GAAMA,CAAN,GAAUA,CAAV,GAAc,CAArB;AACD,OAFD;;AAIAF,aAAO,CAACQ,SAAR,GAAoB,UAASN,CAAT,EAAW;AAC7BA,SAAC,IAAI,CAAL;AACA,YAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,MAAMA,CAAN,GAAUA,CAAV,GAAcA,CAArB;AACX,eAAO,OAAO,CAACA,CAAC,IAAI,CAAN,IAAYA,CAAZ,GAAgBA,CAAhB,GAAoB,CAA3B,CAAP;AACD,OAJD;;AAMAF,aAAO,CAACS,OAAR,GAAkB,UAASP,CAAT,EAAW;AAC3B,eAAOA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYA,CAAnB;AACD,OAFD;;AAIAF,aAAO,CAACU,QAAR,GAAmB,UAASR,CAAT,EAAW;AAC5B,eAAO,IAAK,EAAEA,CAAF,GAAMA,CAAN,GAAUA,CAAV,GAAcA,CAA1B;AACD,OAFD;;AAIAF,aAAO,CAACW,UAAR,GAAqB,UAAST,CAAT,EAAW;AAC9BA,SAAC,IAAI,CAAL;AACA,YAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,MAAMA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CAAzB;AACX,eAAO,CAAC,GAAD,IAAQ,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuB,CAA/B,CAAP;AACD,OAJD;;AAMAF,aAAO,CAACY,OAAR,GAAkB,UAASV,CAAT,EAAW;AAC3B,eAAOA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAAvB;AACD,OAFD;;AAIAF,aAAO,CAACa,QAAR,GAAmB,UAASX,CAAT,EAAW;AAC5B,eAAO,EAAEA,CAAF,GAAMA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsB,CAA7B;AACD,OAFD;;AAIAF,aAAO,CAACc,UAAR,GAAqB,UAASZ,CAAT,EAAW;AAC9BA,SAAC,IAAI,CAAL;AACA,YAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,MAAMA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsBA,CAA7B;AACX,eAAO,OAAO,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuBA,CAAvB,GAA2B,CAAlC,CAAP;AACD,OAJD;;AAMAF,aAAO,CAACe,MAAR,GAAiB,UAASb,CAAT,EAAW;AAC1B,eAAO,IAAIc,IAAI,CAACC,GAAL,CAASf,CAAC,GAAGc,IAAI,CAACE,EAAT,GAAc,CAAvB,CAAX;AACD,OAFD;;AAIAlB,aAAO,CAACmB,OAAR,GAAkB,UAASjB,CAAT,EAAW;AAC3B,eAAOc,IAAI,CAACI,GAAL,CAASlB,CAAC,GAAGc,IAAI,CAACE,EAAT,GAAc,CAAvB,CAAP;AACD,OAFD;;AAIAlB,aAAO,CAACqB,SAAR,GAAoB,UAASnB,CAAT,EAAW;AAC7B,eAAO,MAAM,IAAIc,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAUhB,CAAnB,CAAV,CAAP;AACD,OAFD;;AAIAF,aAAO,CAACsB,MAAR,GAAiB,UAASpB,CAAT,EAAW;AAC1B,eAAO,KAAKA,CAAL,GAAS,CAAT,GAAac,IAAI,CAACO,GAAL,CAAS,IAAT,EAAerB,CAAC,GAAG,CAAnB,CAApB;AACD,OAFD;;AAIAF,aAAO,CAACwB,OAAR,GAAkB,UAAStB,CAAT,EAAW;AAC3B,eAAO,KAAKA,CAAL,GAASA,CAAT,GAAa,IAAIc,IAAI,CAACO,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMrB,CAAlB,CAAxB;AACD,OAFD;;AAIAF,aAAO,CAACyB,SAAR,GAAoB,UAASvB,CAAT,EAAW;AAC7B,YAAI,KAAKA,CAAT,EAAY,OAAO,CAAP;AACZ,YAAI,KAAKA,CAAT,EAAY,OAAO,CAAP;AACZ,YAAI,CAACA,CAAC,IAAI,CAAN,IAAW,CAAf,EAAkB,OAAO,KAAKc,IAAI,CAACO,GAAL,CAAS,IAAT,EAAerB,CAAC,GAAG,CAAnB,CAAZ;AAClB,eAAO,MAAM,CAACc,IAAI,CAACO,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,IAAOrB,CAAC,GAAG,CAAX,CAAZ,CAAD,GAA8B,CAApC,CAAP;AACD,OALD;;AAOAF,aAAO,CAAC0B,MAAR,GAAiB,UAASxB,CAAT,EAAW;AAC1B,eAAO,IAAIc,IAAI,CAACW,IAAL,CAAU,IAAIzB,CAAC,GAAGA,CAAlB,CAAX;AACD,OAFD;;AAIAF,aAAO,CAAC4B,OAAR,GAAkB,UAAS1B,CAAT,EAAW;AAC3B,eAAOc,IAAI,CAACW,IAAL,CAAU,IAAK,EAAEzB,CAAF,GAAMA,CAArB,CAAP;AACD,OAFD;;AAIAF,aAAO,CAAC6B,SAAR,GAAoB,UAAS3B,CAAT,EAAW;AAC7BA,SAAC,IAAI,CAAL;AACA,YAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,CAAC,GAAD,IAAQc,IAAI,CAACW,IAAL,CAAU,IAAIzB,CAAC,GAAGA,CAAlB,IAAuB,CAA/B,CAAP;AACX,eAAO,OAAOc,IAAI,CAACW,IAAL,CAAU,IAAI,CAACzB,CAAC,IAAI,CAAN,IAAWA,CAAzB,IAA8B,CAArC,CAAP;AACD,OAJD;;AAMAF,aAAO,CAAC8B,MAAR,GAAiB,UAAS5B,CAAT,EAAW;AAC1B,YAAI6B,CAAC,GAAG,OAAR;AACA,eAAO7B,CAAC,GAAGA,CAAJ,IAAS,CAAE6B,CAAC,GAAG,CAAN,IAAY7B,CAAZ,GAAgB6B,CAAzB,CAAP;AACD,OAHD;;AAKA/B,aAAO,CAACgC,OAAR,GAAkB,UAAS9B,CAAT,EAAW;AAC3B,YAAI6B,CAAC,GAAG,OAAR;AACA,eAAO,EAAE7B,CAAF,GAAMA,CAAN,IAAW,CAAC6B,CAAC,GAAG,CAAL,IAAU7B,CAAV,GAAc6B,CAAzB,IAA8B,CAArC;AACD,OAHD;;AAKA/B,aAAO,CAACiC,SAAR,GAAoB,UAAS/B,CAAT,EAAW;AAC7B,YAAI6B,CAAC,GAAG,UAAU,KAAlB;AACA,YAAK,CAAE7B,CAAC,IAAI,CAAP,IAAa,CAAlB,EAAsB,OAAO,OAAQA,CAAC,GAAGA,CAAJ,IAAU,CAAE6B,CAAC,GAAG,CAAN,IAAY7B,CAAZ,GAAgB6B,CAA1B,CAAR,CAAP;AACtB,eAAO,OAAQ,CAAE7B,CAAC,IAAI,CAAP,IAAaA,CAAb,IAAmB,CAAE6B,CAAC,GAAG,CAAN,IAAY7B,CAAZ,GAAgB6B,CAAnC,IAAyC,CAAjD,CAAP;AACD,OAJD;;AAMA/B,aAAO,CAACkC,QAAR,GAAmB,UAAShC,CAAT,EAAW;AAC5B,eAAO,IAAIF,OAAO,CAACmC,SAAR,CAAkB,IAAIjC,CAAtB,CAAX;AACD,OAFD;;AAIAF,aAAO,CAACmC,SAAR,GAAoB,UAASjC,CAAT,EAAW;AAC7B,YAAKA,CAAC,GAAK,IAAI,IAAf,EAAwB;AACtB,iBAAO,SAASA,CAAT,GAAaA,CAApB;AACD,SAFD,MAEO,IAAKA,CAAC,GAAK,IAAI,IAAf,EAAwB;AAC7B,iBAAO,UAAWA,CAAC,IAAM,MAAM,IAAxB,IAAmCA,CAAnC,GAAuC,IAA9C;AACD,SAFM,MAEA,IAAKA,CAAC,GAAK,MAAM,IAAjB,EAA0B;AAC/B,iBAAO,UAAWA,CAAC,IAAM,OAAO,IAAzB,IAAoCA,CAApC,GAAwC,MAA/C;AACD,SAFM,MAEA;AACL,iBAAO,UAAWA,CAAC,IAAM,QAAQ,IAA1B,IAAqCA,CAArC,GAAyC,QAAhD;AACD;AACF,OAVD;;AAYAF,aAAO,CAACoC,WAAR,GAAsB,UAASlC,CAAT,EAAW;AAC/B,YAAIA,CAAC,GAAG,EAAR,EAAY,OAAOF,OAAO,CAACkC,QAAR,CAAiBhC,CAAC,GAAG,CAArB,IAA0B,EAAjC;AACZ,eAAOF,OAAO,CAACmC,SAAR,CAAkBjC,CAAC,GAAG,CAAJ,GAAQ,CAA1B,IAA+B,EAA/B,GAAoC,EAA3C;AACD,OAHD,C,CAKA;;;AAEAF,aAAO,CAAC,SAAD,CAAP,GAAqBA,OAAO,CAACG,MAA7B;AACAH,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACI,OAA9B;AACAJ,aAAO,CAAC,aAAD,CAAP,GAAyBA,OAAO,CAACK,SAAjC;AACAL,aAAO,CAAC,SAAD,CAAP,GAAqBA,OAAO,CAACM,MAA7B;AACAN,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACO,OAA9B;AACAP,aAAO,CAAC,aAAD,CAAP,GAAyBA,OAAO,CAACQ,SAAjC;AACAR,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACS,OAA9B;AACAT,aAAO,CAAC,WAAD,CAAP,GAAuBA,OAAO,CAACU,QAA/B;AACAV,aAAO,CAAC,cAAD,CAAP,GAA0BA,OAAO,CAACW,UAAlC;AACAX,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACY,OAA9B;AACAZ,aAAO,CAAC,WAAD,CAAP,GAAuBA,OAAO,CAACa,QAA/B;AACAb,aAAO,CAAC,cAAD,CAAP,GAA0BA,OAAO,CAACc,UAAlC;AACAd,aAAO,CAAC,SAAD,CAAP,GAAqBA,OAAO,CAACe,MAA7B;AACAf,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACmB,OAA9B;AACAnB,aAAO,CAAC,aAAD,CAAP,GAAyBA,OAAO,CAACqB,SAAjC;AACArB,aAAO,CAAC,SAAD,CAAP,GAAqBA,OAAO,CAACsB,MAA7B;AACAtB,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACwB,OAA9B;AACAxB,aAAO,CAAC,aAAD,CAAP,GAAyBA,OAAO,CAACyB,SAAjC;AACAzB,aAAO,CAAC,SAAD,CAAP,GAAqBA,OAAO,CAAC0B,MAA7B;AACA1B,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAAC4B,OAA9B;AACA5B,aAAO,CAAC,aAAD,CAAP,GAAyBA,OAAO,CAAC6B,SAAjC;AACA7B,aAAO,CAAC,SAAD,CAAP,GAAqBA,OAAO,CAAC8B,MAA7B;AACA9B,aAAO,CAAC,UAAD,CAAP,GAAsBA,OAAO,CAACgC,OAA9B;AACAhC,aAAO,CAAC,aAAD,CAAP,GAAyBA,OAAO,CAACiC,SAAjC;AACAjC,aAAO,CAAC,WAAD,CAAP,GAAuBA,OAAO,CAACkC,QAA/B;AACAlC,aAAO,CAAC,YAAD,CAAP,GAAwBA,OAAO,CAACmC,SAAhC;AACAnC,aAAO,CAAC,eAAD,CAAP,GAA2BA,OAAO,CAACoC,WAAnC;;;;;;;;;;;;;;;;ACzKA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFC,oBAAoB;AAC7B,sCAAoBC,QAApB,EAAgD9G,OAAhD,EAAyE;AAAA;;AAArD,eAAA8G,QAAA,GAAAA,QAAA;AAA4B,eAAA9G,OAAA,GAAAA,OAAA;AAA2B;AAE3E;;;;;;;AAH6B;AAAA;AAAA,iBAQtB,4BAAmB+G,KAAnB,EAAoC;AACvC;AACA,gBAAI,KAAK/G,OAAL,CAAagH,aAAb,CAA2BD,KAA3B,CAAJ,EAAuC;AACnC,qBAAO,gDAAGE,SAAH,CAAP;AACH;;AACD,gBAAMC,KAAK,GAAG,KAAKJ,QAAL,CAAcK,IAAd,CAAmB,qFAAnB,EAAkD;AAC5DC,yBAAW,EAAE;AAD+C,aAAlD,CAAd;AAGEF,iBAAK,CAACG,iBAAN,CAA0DN,KAA1D,GAAkEA,KAAlE;AACF,mBAAO,IAAI,+CAAJ,CAAe,UAAAO,QAAQ,EAAI;AAC9BJ,mBAAK,CAACK,MAAN,CACKC,IADL,CACU,YAAM;AACRF,wBAAQ,CAACG,IAAT;AACAH,wBAAQ,CAACI,QAAT;AACH,eAJL,WAKW,YAAM;AACTJ,wBAAQ,CAACI,QAAT;AACH,eAPL;AAQH,aATM,CAAP;AAUH;AA3B4B;;AAAA;AAAA,S;;;;gBARxB;;gBAEA;;;;AAMIb,0BAAoB,6DAHhC,iEAAW;AACRc,kBAAU,EAAE;AADJ,OAAX,CAGgC,GAApBd,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAMe,IAAI,GAAG,mBAAO;AAAC;AAAA,YAAD,CAApB;;AACA,UAAMC,MAAM,GAAG,mBAAO;AAAC;AAAA,YAAD,CAAtB;;UAYaC,uBAAuB;AAQhC,yCACYC,OADZ,EAEYC,MAFZ,EAGYjI,IAHZ,EAIWmH,KAJX,EAKWjH,SALX,EAKsC;AAAA;;AAAA;;AAJ1B,eAAA8H,OAAA,GAAAA,OAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAjI,IAAA,GAAAA,IAAA;AACD,eAAAmH,KAAA,GAAAA,KAAA;AACA,eAAAjH,SAAA,GAAAA,SAAA;AAXJ,eAAAgI,MAAA,GAAS,KAAT;AACA,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,QAAA,GAAW,KAAX;;AAoDC,eAAAC,aAAA,GAAgB,YAAM;AAC1B;AACA,gBACI,OAAI,CAACD,QAAL,IACA,CAAC,OAAI,CAACF,MADN,IAEA,OAAI,CAACI,cAAL,CAAoBC,SAApB,IAAiC,OAAI,CAACD,cAAL,CAAoBE,YAApB,GAAmC,OAAI,CAACF,cAAL,CAAoBG,YAAvD,GAAsE,EAH3G,EAIE;AACEC,wBAAU,CAAC,YAAM;AACb,uBAAI,CAACR,MAAL,GAAc,IAAd;AACH,eAFS,CAAV;AAGH;AACJ,WAXO;AA1CJ;;AAd4B;AAAA;AAAA,iBAgBzB,oBAAQ;AAAA;;AACX,iBAAKI,cAAL,GAAsB,KAAKN,OAAL,CAAaW,aAAb,CAA2BC,aAA3B,CAAyC,uBAAzC,CAAtB;AACA,iBAAKN,cAAL,CAAoBO,gBAApB,CAAqC,QAArC,EAA+C,KAAKR,aAApD;AAEA,iBAAKrI,IAAL,CACK8I,GADL,CACgB,aADhB,EAEK9H,IAFL,CAGQ,2DAAI,UAAA+H,KAAK,EAAI;AACT,qBAAI,CAACA,KAAL,GAAaA,KAAb;AACA,qBAAI,CAACX,QAAL,GAAgB,IAAhB;AACAM,wBAAU,CAAC,YAAM;AACb,uBAAI,CAACL,aAAL;AACH,eAFS,CAAV;AAGH,aAND,CAHR,EAWKpH,SAXL,CAWe;AAAA,qBAAMiG,SAAN;AAAA,aAXf;AAYH;AAhC+B;AAAA;AAAA,iBAkCzB,uBAAW;AACd,iBAAKoB,cAAL,CAAoBU,mBAApB,CAAwC,QAAxC,EAAkD,KAAKX,aAAvD;AACH;AApC+B;AAAA;AAAA,iBAsCzB,sBAAU;AACbP,kBAAM,CAACmB,GAAP,CAAW,KAAKX,cAAhB,EAAgC,KAAKA,cAAL,CAAoBE,YAApB,GAAmC,KAAKF,cAAL,CAAoBY,YAAvF,EAAqG;AACjGC,sBAAQ,EAAE,IADuF;AAEjGtB,kBAAI,EAAEA,IAAI,CAAC3B;AAFsF,aAArG;AAIH;AA3C+B;AAAA;AAAA,iBA6CzB,kBAAM;AACT,gBAAI,CAAC,KAAKgC,MAAV,EAAkB;AACd,mBAAKD,MAAL,CAAYmB,OAAZ,CACI,KAAKlJ,SAAL,CAAemJ,OAAf,CAAuB,gCAAvB,CADJ,EAEI,KAAKnJ,SAAL,CAAemJ,OAAf,CAAuB,cAAvB,CAFJ;AAIA;AACH;;AACD,iBAAKlC,KAAL,CAAWmC,KAAX,CAAiB,MAAD,OAAC,CAAD,kBAAM,KAAKP,KAAX,CAAC,EAAe;AAAEQ,oBAAM,EAAE;AAAV,aAAf,CAAjB;AACH;AAtD+B;;AAAA;AAAA,S;;;;gBAnBhB;;gBAIX;;gBALA;;gBAEA;;gBACA;;;;AAiBIxB,6BAAuB,6DAJnC,gEAAU;AACPrK,gBAAQ,EAAE,kBADH;AAEPC,gBAAQ,EAAR;AAFO,OAAV,CAImC,GAAvBoK,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAyB,UAAU;AACnB,4BAAoBxJ,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAoB;;AADrB;AAAA;AAAA,iBAGZ,eAAMyJ,GAAN,EAMN;AACG,mBAAO,KAAKzJ,IAAL,CACFc,IADE,CAEC,OAFD,EAGC;AACItB,gBAAE,EAAEiG,IAAI,CAACiE,KAAL,CAAWjE,IAAI,CAACkE,MAAL,KAAgB,KAA3B,CADR;AAEIC,qBAAO,EAAE,KAFb;AAGIzH,oBAAM,EAAE,yBAHZ;AAII0H,oBAAM,EAAE;AACJnK,oBAAI,EAAE+J,GAAG,CAAC/J,IADN;AAEJyC,sBAAM,EAAEsH,GAAG,CAACtH,MAFR;AAGJ9B,sBAAM,EAAEoJ,GAAG,CAACpJ,MAAJ,GAAaoJ,GAAG,CAACpJ,MAAjB,GAA0B,GAH9B;AAIJjB,wBAAQ,EAAEqK,GAAG,CAACrK,QAJV;AAKJC,oBAAI,EAAEoK,GAAG,CAACpK;AALN;AAJZ,aAHD,EAeC;AACIyK,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACrB,gCAAgB;AADK,eAAhB;AADb,aAfD,EAqBF9I,IArBE,CAqBG,2DAAI,UAAAE,QAAQ;AAAA,qBAAKA,QAAQ,CAACsG,MAAT,GAAkB,IAAI,gEAAJ,CAAQtG,QAAQ,CAACsG,MAAjB,CAAlB,GAA6C,IAAlD;AAAA,aAAZ,CArBH,CAAP;AAsBH;AAhCkB;AAAA;AAAA,iBAkCZ,sBAAauC,kBAAb,EAAuDN,GAAvD,EAA+E;AAClF,gBAAMO,WAAW,GAAGD,kBAApB;AACA,gBAAM3G,QAAQ,GACVqG,GAAG,IAAIA,GAAG,CAACQ,KAAX,IAAoBD,WAAW,CAAC5K,QAAhC,GACM,2EAAS8K,OAAT,CAAiBT,GAAG,CAACQ,KAArB,EAA4BR,GAAG,CAACrK,QAAhC,EAA2C4K,WAAW,CAAC5K,QAAvD,CADN,GAEM,GAHV;AAIA,gBAAM+D,WAAW,GAAGsG,GAAG,IAAIA,GAAG,CAACU,QAAX,GAAsBV,GAAG,CAACU,QAA1B,GAAqC,GAAzD;AAEAH,uBAAW,CAAC5G,QAAZ,GAAuBA,QAAQ,IAAI8D,SAAnC;AACA8C,uBAAW,CAAC7G,WAAZ,GAA0BA,WAAW,IAAI+D,SAAzC;;AAEA,gBAAIuC,GAAG,IAAIA,GAAG,CAACW,GAAf,EAAoB;AAChB,kBAAMC,MAAM,GAAG,2EAASH,OAAT,CAAiBT,GAAG,CAACW,GAArB,EAA0BX,GAAG,CAACrK,QAA9B,EAAyC4K,WAAW,CAAC5K,QAArD,CAAf;;AACA,kBAAI,IAAI,mDAAJ,CAAc,0EAAa4K,WAAb,CAAd,EAAwDM,UAAxD,CAAmED,MAAnE,CAAJ,EAAgF;AAC5EL,2BAAW,CAAC5G,QAAZ,GAAuBiH,MAAvB;AACAL,2BAAW,CAAC7G,WAAZ,GAA0B,GAA1B;AACH;AACJ;;AACD,gBAAIsG,GAAG,IAAIA,GAAG,CAACc,GAAf,EAAoB;AAChB,kBAAMC,MAAM,GAAG,2EAASN,OAAT,CAAiBT,GAAG,CAACc,GAArB,EAA0Bd,GAAG,CAACrK,QAA9B,EAAyC4K,WAAW,CAAC5K,QAArD,CAAf;;AACA,kBAAI,IAAI,mDAAJ,CAAc,0EAAa4K,WAAb,CAAd,EAAwDS,aAAxD,CAAsED,MAAtE,CAAJ,EAAmF;AAC/ER,2BAAW,CAAC5G,QAAZ,GAAuBoH,MAAvB;AACAR,2BAAW,CAAC7G,WAAZ,GAA0B,GAA1B;AACH;AACJ;;AACD,mBAAO6G,WAAP;AACH;AA5DkB;;AAAA;AAAA,S;;;;gBAbd;;;;AAaIR,gBAAU,6DAHtB,iEAAW;AACR5B,kBAAU,EAAE;AADJ,OAAX,CAGsB,GAAV4B,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAkB,6BAA6B;AAUtC,+CACWzK,OADX,EAEYpC,eAFZ,EAGW8M,QAHX,EAGgC;AAAA;;AAFrB,eAAA1K,OAAA,GAAAA,OAAA;AACC,eAAApC,eAAA,GAAAA,eAAA;AACD,eAAA8M,QAAA,GAAAA,QAAA;AAXJ,eAAAjK,SAAA,GAAY,KAAZ;AAEA,eAAAkK,aAAA,GAAgB,gFAAhB;AAIC,eAAAC,aAAA,GAAgB,IAAI,iDAAJ,EAAhB;AAOJ,eAAKC,QAAL,GAAgB;AAAEC,gBAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAAR;AAAkCC,iBAAK,EAAE,CAAzC;AAA4CC,eAAG,EAAE;AAAjD,WAAhB;AACA,eAAKC,MAAL,GAAc,KAAKT,QAAL,CAAcU,QAAd,EAAd;AACH;;AAjBqC;AAAA;AAAA,iBAmB/B,0BAAc;AAAA;;AACjB,iBAAKR,aAAL,CAAmB5I,GAAnB,CACI,KAAKhC,OAAL,CAAaqL,UAAb,CACKtK,IADL,CAEQ,+DAAQ,UAAA3B,IAAI;AAAA,qBACR,OAAI,CAACY,OAAL,CAAasL,eAAb,kBAAuClM,IAAI,CAACG,EAA5C,oBAAwD,OAAI,CAACuB,IAAL,CAAUvB,EAAlE,0BADQ;AAAA,aAAZ,CAFR,EAMKyB,SANL,CAMe,UAAAuK,SAAS,EAAI;AACpBC,oBAAM,CAACrE,IAAP,WACOoE,SADP,mBACyB,OAAI,CAACE,YAAL,CAAkB,OAAI,CAACZ,QAAvB,CADzB,iBACgE,OAAI,CAACY,YAAL,CAAkB,OAAI,CAACN,MAAvB,CADhE,GAEI,QAFJ,EAGI,UAHJ;;AAKA,qBAAI,CAACtN,OAAL;AACH,aAbL,CADJ;AAiBA,iBAAKmC,OAAL,CAAasL,eAAb,kBAAuC,KAAKxK,IAAL,CAAUvB,EAAjD;AACH;AAtCqC;AAAA;AAAA,iBAwC/B,mBAAO;AACV,iBAAK3B,eAAL,CAAqBC,OAArB;AACH;AA1CqC;AAAA;AAAA,iBA4C5B,sBAAa6N,IAAb,EAAuC;AAC7C,6BAAUA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEZ,IAAhB,cAAwBY,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAET,KAAN,CAAYU,cAAZ,CAA2B,OAA3B,EAAoC;AACxDC,kCAAoB,EAAE,CADkC;AAExDC,yBAAW,EAAE;AAF2C,aAApC,CAAxB,cAGMH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAER,GAAN,CAAUS,cAAV,CAAyB,OAAzB,EAAkC;AAAEC,kCAAoB,EAAE,CAAxB;AAA2BC,yBAAW,EAAE;AAAxC,aAAlC,CAHN;AAIH;AAjDqC;;AAAA;AAAA,S;;;;gBAPjC;;gBALA;;gBACA;;;;AAWIpB,mCAA6B,6DALzC,gEAAU;AACPhN,gBAAQ,EAAE,iCADH;AAEPC,gBAAQ,EAAR,yFAFO;;AAAA,OAAV,CAKyC,GAA7B+M,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCuBAqB,YAAY;AA+BrB,8BACW9L,OADX,EAEYD,IAFZ,EAGYiI,MAHZ,EAIYxG,YAJZ,EAKY5D,eALZ,EAMWmO,eANX,EAOYC,oBAPZ,EAQYlF,QARZ,EASYrF,eATZ,EAUYwK,cAVZ,EAWYC,kBAXZ,EAYWjM,SAZX,EAYsC;AAAA;;AAX3B,eAAAD,OAAA,GAAAA,OAAA;AACC,eAAAD,IAAA,GAAAA,IAAA;AACA,eAAAiI,MAAA,GAAAA,MAAA;AACA,eAAAxG,YAAA,GAAAA,YAAA;AACA,eAAA5D,eAAA,GAAAA,eAAA;AACD,eAAAmO,eAAA,GAAAA,eAAA;AACC,eAAAC,oBAAA,GAAAA,oBAAA;AACA,eAAAlF,QAAA,GAAAA,QAAA;AACA,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAwK,cAAA,GAAAA,cAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACD,eAAAjM,SAAA,GAAAA,SAAA;AA1CJ,eAAAkM,SAAA,GAAiC,SAAjC;AACA,eAAApC,WAAA,GAA2B;AAC9BtK,gBAAI,EAAE,YADwB;AAE9ByC,kBAAM,EAAE,MAFsB;AAG9BkK,yBAAa,EAAE;AACXhN,kBAAI,EAAE;AADK;AAHe,WAA3B;AASA,eAAAiN,IAAA,GAAuB,EAAvB;AAIA,eAAAC,YAAA,GAAsB,EAAtB;AACA,eAAAC,IAAA,GAAO,CAAP;AACA,eAAAC,IAAA,GAAO,CAAP;AAGA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,qBAAA,GAAwB,KAAxB;AACA,eAAAC,KAAA,GAAQ,sEAAR;AAGA,eAAAC,iBAAA,GAAoB,IAAI,6CAAJ,EAApB;AAEA,eAAA5P,OAAA,GAAU,0EAAYA,OAAtB;AAEC,eAAA4N,aAAA,GAAgB,IAAI,kDAAJ,EAAhB;AAgBJ,eAAKiC,QAAL,GAAgB,KAAKrL,YAAL,CAAkBsL,iBAAlC;AACH;;AA9CoB;AAAA;AAAA,iBAgDd,oBAAQ;AAAA;;;;AACX,iBAAK/M,IAAL,CAAU8I,GAAV,kBAA+B,KAAK/H,IAAL,CAAUvB,EAAzC,GAA+CyB,SAA/C,CAAyD,UAAArC,IAAI,EAAI;;;AAC7D,kBAAIA,IAAJ,EAAU;AACNM,sBAAM,CAACC,MAAP,CAAc,OAAI,CAAC4B,IAAnB,EAAyBnC,IAAzB;AACA,uBAAI,CAAC0N,IAAL,GAAY,0DAAU,OAAI,CAACvL,IAAf,CAAZ;AACA,uBAAI,CAACiJ,WAAL,CAAiBpL,IAAjB,GAAwBA,IAAxB;;AAEA,oBAAI,CAAJ,WAAIA,IAAI,CAAC8E,UAAT,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEC,WAAjB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEqJ,kBAAlC,EAAsD;AAClD,yBAAI,CAACC,qBAAL,GAA6B,4DAAarO,IAAI,CAAC8E,UAAL,CAAgBC,WAAhB,CAA4BqJ,kBAAzC,CAA7B;AACH;AACJ;AACJ,aAVD;AAYA,iBAAKhN,IAAL,CACK8I,GADL,CAC+B,aAD/B,EAC8C;AAAEe,oBAAM,EAAE;AAAEqD,qBAAK,EAAE,MAAM;AAAf;AAAV,aAD9C,EAEKlM,IAFL,CAEU,4DAAI,UAAAE,QAAQ;AAAA,qBAAIA,QAAQ,CAACjC,IAAT,CAAckO,GAAd,CAAkB,UAAAC,OAAO;AAAA,uBAAI,IAAI,yFAAJ,CAAaA,OAAb,CAAJ;AAAA,eAAzB,CAAJ;AAAA,aAAZ,CAFV,EAGKnM,SAHL,CAGe,UAAAoM,UAAU,EAAI;AACrB,qBAAI,CAACA,UAAL,GAAkBA,UAAlB;AACH,aALL;AAOA,iBAAKrN,IAAL,CAAU8I,GAAV,kBAAqC,WAAK/H,IAAL,CAAU2C,UAAV,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAElE,EAA3D,eAAyEyB,SAAzE,CAAmF,UAAAqM,OAAO,EAAI;AAC1F,qBAAI,CAACC,WAAL,GAAmBD,OAAnB;AACH,aAFD;AAIA,iBAAKtK,SAAL,GAAiB,oDAAM,iDAAGkE,SAAH,CAAN,EAAqB,KAAK2F,iBAA1B,EAA6C7L,IAA7C,CACb,kEAAU;AAAA,qBAAM,OAAI,CAAChB,IAAL,CAAU8I,GAAV,kBAA+B,OAAI,CAAC/H,IAAL,CAAUvB,EAAzC,cAAN;AAAA,aAAV,CADa,EAEb,4DAAI,UAAAuD,OAAO;AAAA,qBAAIA,OAAO,CAACsB,MAAR,CAAe,UAAAjF,QAAQ;AAAA,uBAAIA,QAAQ,CAAC2D,OAAT,KAAqB,CAAzB;AAAA,eAAvB,CAAJ;AAAA,aAAX,CAFa,EAGb,4DAAI,UAAAA,OAAO;AAAA,qBAAKA,OAAO,CAACyK,MAAR,GAAiBzK,OAAjB,GAA2B,CAAC;AAAED,yBAAS,EAAE,KAAb;AAAoBC,uBAAO,EAAE;AAA7B,eAAD,CAAhC;AAAA,aAAX,CAHa,EAIb,uEAAe,KAAKrB,eAAL,CAAqB+L,SAArB,EAAf,CAJa,EAKb,4DAAI;AAAA;AAAA,kBAAE1K,OAAF;AAAA,kBAAW2K,mBAAX;;AAAA,qBACA3K,OAAO,CAACoK,GAAR,CAAY,UAAAtK,CAAC,EAAI;;;AACb3D,sBAAM,CAACC,MAAP,CAAc0D,CAAd,EAAiB;AACb8K,8BAAY,EAAE,IAAI,mDAAJ,CAAc9K,CAAC,CAACE,OAAhB,EACTO,KADS,CAEN,OAAAoK,mBAAmB,CAAC9K,IAApB,CAAyB,UAAAxD,QAAQ;AAAA,2BAAIA,QAAQ,CAACG,IAAT,KAAkBsD,CAAC,CAACC,SAAxB;AAAA,mBAAjC,OAAmE,IAAnE,IAAmE,aAAnE,GAAmE,MAAnE,GAAmE,GAAEf,YAArE,KAAqF,CAF/E,EAIT6L,QAJS;AADD,iBAAjB;AAQA,uBAAO/K,CAAP;AACH,eAVD,CADA;AAAA,aAAJ,CALa,EAkBb,4DAAI,UAAAE,OAAO,EAAI;AACX,qBAAI,CAACJ,QAAL,GAAgBI,OAAO,CAAC8K,IAAR,CAAa,UAACC,IAAD,EAAYpG,IAAZ;AAAA,uBAA0BA,IAAI,CAACiG,YAAL,GAAoBG,IAAI,CAACH,YAAnD;AAAA,eAAb,CAAhB;AACH,aAFD,CAlBa,CAAjB;AAuBA,iBAAKrB,IAAL,GAAY,0DAAU,KAAKvL,IAAf,CAAZ;AACA,iBAAKgN,iBAAL;AACH;AAjGoB;AAAA;AAAA,iBAmGd,uBAAW;AACd,iBAAKlD,aAAL,CAAmBrI,WAAnB;AACH;AArGoB;AAAA;AAAA,iBAuGd,2BAAkBwL,KAAlB,EAA+BC,KAA/B,EAA8C;AAAA;;AACjD,iBAAKvB,UAAL,GAAkB,IAAlB;;AACA,gBAAIuB,KAAJ,EAAW;AACP,mBAAKzB,IAAL,GAAY,CAAZ;AACH;;AAED,iBAAKxM,IAAL,CACK8I,GADL,kBACwB,KAAK/H,IAAL,CAAUvB,EADlC,oBACqD;AAC7CqK,oBAAM,EAAE;AAAE2C,oBAAI,EAAE,KAAKA,IAAL,GAAY,CAAZ,GAAgB,EAAxB;AAA4BC,oBAAI,EAAE,KAAKA,IAAL,GAAY;AAA9C;AADqC,aADrD,EAIKxL,SAJL,CAIe,UAAAC,QAAQ,EAAI;AACnB,qBAAI,CAACwL,UAAL,GAAkB,KAAlB;;AACA,kBAAIxL,QAAQ,CAACgN,OAAb,EAAsB;AAClB,oBAAM3B,YAAY,GAAGrL,QAAQ,CAACgN,OAAT,CAAiBf,GAAjB,CAAqB,UAACe,OAAD;AAAA,yBAAmB,MAAD,OAAC,CAAD,kBACrDA,OADqD,CAAC,EAC/C;AACVC,6BAAS,EAAE,2DAASD,OAAO,CAACC,SAAjB;AADD,mBAD+C,CAAnB;AAAA,iBAArB,CAArB;AAIA,uBAAI,CAACC,aAAL,GAAqBlN,QAAQ,CAACkN,aAAT,IAA0B,GAA/C;AACA,uBAAI,CAAC7B,YAAL,GAAoB0B,KAAK,GAAG1B,YAAH,GAAkB,OAAI,CAACA,YAAL,CAAkB8B,MAAlB,CAAyB9B,YAAzB,CAA3C;AACA,uBAAI,CAACC,IAAL,IAAa,CAAb;AACH;;AACD,kBAAIwB,KAAJ,EAAW;AACPA,qBAAK,CAACM,MAAN,CAAa3G,QAAb;AACH;AACJ,aAlBL;AAmBH;AAhIoB;AAAA;AAAA,iBAkId,2BAAkBpI,IAAlB,EAA8B;AACjC,mBAAO,KAAK8N,UAAL,CAAgBzK,IAAhB,CAAqB,UAAAxD,QAAQ;AAAA,qBAAIA,QAAQ,CAACG,IAAT,KAAkBA,IAAtB;AAAA,aAA7B,CAAP;AACH;AApIoB;AAAA;AAAA,iBAsIR,0BAAiBgP,OAAjB,EAAiC;;;;;;;;;;AAC5B,6BAAM,KAAKvC,eAAL,CAAqBwC,MAArB,CAA4B;AAC5CC,8BAAM,EAAEF,OAAO,GACT,KAAKrO,SAAL,CAAemJ,OAAf,CAAuB,wBAAvB,CADS,GAET,KAAKnJ,SAAL,CAAemJ,OAAf,CAAuB,0BAAvB,CAHsC;AAI5CqF,+BAAO,EAAE,KAAKxO,SAAL,CAAemJ,OAAf,CAAuB,uBAAvB,CAJmC;AAK5CsF,+BAAO,EAAE,CACL;AACIC,8BAAI,EAAE,KAAK1O,SAAL,CAAemJ,OAAf,CAAuB,eAAvB,CADV;AAEIwF,8BAAI,EAAE;AAFV,yBADK,EAKL;AACID,8BAAI,EAAEL,OAAO,GAAG,KAAKrO,SAAL,CAAemJ,OAAf,CAAuB,cAAvB,CAAH,GAA4C,KAAKnJ,SAAL,CAAemJ,OAAf,CAAuB,gBAAvB,CAD7D;AAEIyF,kCAAQ,EAAE,aAFd;AAGIC,iCAAO,EAAE;AAAA,mCAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjB,2CAAKpC,qBAAL,GAA6B,IAA7B;AACA,2CAAK3M,IAAL,CACKsB,GADL,kBAC0B,KAAKP,IAAL,CAAUvB,EADpC,cACiD;AACzCwP,8CAAM,EAAET,OAAO,GAAG,OAAH,GAAa;AADa,uCADjD,EAIKvN,IAJL,CAKQ,iEAAS,YAAM;AACX,+CAAI,CAAC2L,qBAAL,GAA6B,KAA7B;AACH,uCAFD,CALR,EASK1L,SATL,CASe,UAAArC,IAAI,EAAI;AACfM,8CAAM,CAACC,MAAP,CAAc,OAAI,CAAC4B,IAAnB,EAAyBnC,IAAzB;AACA,+CAAI,CAAC0N,IAAL,GAAY,0DAAU,OAAI,CAACvL,IAAf,CAAZ;AACA,+CAAI,CAACiJ,WAAL,CAAiBpL,IAAjB,GAAwBA,IAAxB;;AACA,+CAAI,CAACqJ,MAAL,CAAYgH,OAAZ,WACO,OAAI,CAAC/O,SAAL,CAAemJ,OAAf,CAAuB,aAAvB,CADP,cAEQkF,OAAO,GACD,OAAI,CAACrO,SAAL,CAAemJ,OAAf,CAAuB,cAAvB,CADC,GAED,OAAI,CAACnJ,SAAL,CAAemJ,OAAf,CAAuB,gBAAvB,CAJd;AAOH,uCApBL;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;AAAA;AAHb,yBALK;AALmC,uBAA5B,CAAN;;;AAAR6F,2B;;AAwCN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACH;AAhLoB;AAAA;AAAA,iBAkLR,6BAAiB;;;;;;;;;qCACN,KAAKtR,e;qCACV,6E;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;qCACH;AACZrO,4BAAI,EAAE,KAAKA,IADC;AAEZ4B,gCAAQ,EAAE,KAAKA;AAFH,uB;;AAHhB0M,iC;AACAP,gC,EAAU,iB;AACVQ,yC;AACAC,sC;;;AAJU,0CAA2Bf,MAA3B;;;AAARrH,2B;;AASN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;AACAhI,2BAAK,CAACqI,aAAN,GAAsB/H,IAAtB,CAA2B;AAAA,4BAASxI,IAAT,SAASA,IAAT;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C,uCAAK8O,iBAAL,CAAuB,IAAvB,EAA6B,IAA7B;AACA,uCAAKlB,iBAAL,CAAuBnF,IAAvB;;AAF2C,sCAItCzI,IAJsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAO7B,yCAAM,KAAK+M,eAAL,CAAqBwC,MAArB,CAA4B;AAC5CC,0CAAM,EAAE,KAAKvO,SAAL,CAAemJ,OAAf,CAAuB,wBAAvB,CADoC;AAE5CqF,2CAAO,YAAK,KAAKxO,SAAL,CAAemJ,OAAf,CACR,mCADQ,CAAL,cAEFpK,IAAI,CAACwQ,iBAAL,CAAuBhM,OAAvB,CAA+B,CAA/B,CAFE,cAEmCxE,IAAI,CAACqB,uBAFxC,MAFqC;AAK5CqO,2CAAO,EAAE,CAAC,IAAD;AALmC,mCAA5B,CAAN;;AAP6B;AAOrCO,uCAPqC;AAAA;AAc3C,yCAAMA,KAAK,CAACC,OAAN,EAAN;;AAd2C;AAe3C,uCAAKO,cAAL;;AAf2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB;AAAA,uBAA3B;;;;;;;;;AAiBH;AA9MoB;AAAA;AAAA,iBAgNR,8BAAkB;;;;;;;;;sCACP,KAAK7R,e;sCACV,2F;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;sCACH;AACZrO,4BAAI,EAAE,KAAKA;AADC,uB;;AAHhBsO,iC;AACAP,gC,EAAU,kB;AACVQ,yC;AACAC,sC;;;AAJU,2CAA2Bf,MAA3B;;;AAARrH,2B;;AAQN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;AACAhI,2BAAK,CAACqI,aAAN,GAAsB/H,IAAtB,CAA2B;AAAA,4BAASxI,IAAT,SAASA,IAAT;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACtCA,IADsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAI7B,yCAAM,KAAK+M,eAAL,CAAqBwC,MAArB,CAA4B;AAC5CC,0CAAM,EAAE,KAAKvO,SAAL,CAAemJ,OAAf,CAAuB,oBAAvB,CADoC;AAE5CqF,2CAAO,EAAE,KAAKxO,SAAL,CAAemJ,OAAf,CAAuB,yCAAvB,CAFmC;AAG5CsF,2CAAO,EAAE,CAAC,IAAD;AAHmC,mCAA5B,CAAN;;AAJ6B;AAIrCO,uCAJqC;AAAA;AAS3C,yCAAMA,KAAK,CAACC,OAAN,EAAN;;AAT2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB;AAAA,uBAA3B;;;;;;;;;AAWH;AArOoB;AAAA;AAAA,iBAuOR,yBAAa;;;;;;;sCACF,KAAKtR,e;sCACV,0E;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;sCACH;AACZrO,4BAAI,EAAE,KAAKA;AADC,uB;;AAHhBsO,iC;AACAP,gC,EAAU,Y;AACVQ,yC;AACAC,sC;;;AAJU,2CAA2Bf,MAA3B;;;AAARrH,2B;;AAQN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;;;;;;;AACH;AAjPoB;AAAA;AAAA,iBAmPR,mCAAuB;;;;;;;sCACZ,KAAKtR,e;sCACV,4H;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;sCACH;AACZrO,4BAAI,EAAE,KAAKA;AADC,uB;;AAHhBsO,iC;AACAP,gC,EAAU,uB;AACVQ,yC;AACAC,sC;;;AAJU,2CAA2Bf,MAA3B;;;AAARrH,2B;;AAQN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;;;;;;;AACH;AA7PoB;AAAA;AAAA,iBA+PR,8BAAkB;;;;;;;;4BACvB,KAAKpO,IAAL,CAAUrB,IAAV,KAAmB,S;;;;;;;;AAGvB,2BAAKmL,aAAL,CAAmB5I,GAAnB,CACI,KAAKgK,oBAAL,CAA0B0D,kBAA1B,CAA6C,SAA7C,EAAwD1O,SAAxD,CAAkE;AAAA,+BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACtD,KAAKpD,eADiD;AAAA,kDAE3D,gFAF2D;AAAA;AAInD,yCAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;AAJmD;AAAA;AAAA,kDAKtD;AACZrO,wCAAI,EAAE,KAAKA,IADC;AAEZ7D,mDAAe,EAAE,KAAK+P;AAFV,mCALsD;AAAA;AAEtEoC,6CAFsE;AAGtEP,4CAHsE,EAG5D,YAH4D;AAItEQ,qDAJsE;AAKtEC,kDALsE;AAAA;AAAA;AAC5D,uDAA2Bf,MAA3B;;AAD4D;AACpErH,uCADoE;AAAA;AAU1E,yCAAMA,KAAK,CAACgI,OAAN,EAAN;;AAV0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAZ;AAAA,uBAAlE,CADJ;;;;;;;;;AAcH;AAjRoB;AAAA;AAAA,iBAmRd,kCAAsB;AACzB,gBAAMS,UAAU,GAAG,KAAK7I,QAAL,CAAcK,IAAd,CAAmB,kIAAnB,EAA4C;AAC3DC,yBAAW,EAAE,gCAD8C;AAE3DwI,sBAAQ,EAAE,QAFiD;AAG3DC,2BAAa,EAAE;AAH4C,aAA5C,CAAnB;AAKAF,sBAAU,CAACtI,iBAAX,CAA6Ba,QAA7B,GAAwC,IAAxC;AACH;AA1RoB;AAAA;AAAA,iBA4RR,wBAAezI,IAAf,EAA2B;;;;;;;;;sCAChB,KAAK7B,e;sCACV,yF;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;sCACH;AACZrO,4BAAI,EAAE,KAAKA,IADC;AAEZ4B,gCAAQ,EAAE,KAAKA,QAFH;AAGZjD,4BAAI,EAAJA;AAHY,uB;;AAHhB2P,iC;AACAP,gC,EAAU,iB;AACVQ,yC;AACAC,sC;;;AAJU,2CAA2Bf,MAA3B;;;AAARrH,2B;;AAUN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;AACAhI,2BAAK,CAACqI,aAAN,GAAsB/H,IAAtB,CAA2B;AAAA,4BAASxI,IAAT,SAASA,IAAT;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACtCA,IADsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAI3C,uCAAK8O,iBAAL,CAAuB,IAAvB,EAA6B,IAA7B;AACA,uCAAKlB,iBAAL,CAAuBnF,IAAvB;;AAGA,sCAAIhI,IAAI,KAAK,MAAb,EAAqB;AACjBqQ,iDAAa,GAAG,KAAK7P,SAAL,CAAemJ,OAAf,CAAuB,wBAAvB,CAAhB;AACA2G,kDAAc,8HAEG/Q,IAAI,CAACwQ,iBAAL,CAAuBhM,OAAvB,CAA+B,CAA/B,CAFH,cAEwCxE,IAAI,CAACqB,uBAF7C,MAAd;AAGH,mCALD,MAKO;AACHyP,iDAAa,GAAG,KAAK7P,SAAL,CAAemJ,OAAf,CAAuB,8BAAvB,CAAhB;AACA2G,kDAAc,aAAM,KAAK9P,SAAL,CAAemJ,OAAf,CAAuB,oBAAvB,CAAN,cAAsDpK,IAAI,CAACyP,OAA3D,CAAd;AACH;;AAhB0C,sCAkBtCzP,IAlBsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAqB7B,yCAAM,KAAK+M,eAAL,CAAqBwC,MAArB,CAA4B;AAC5CC,0CAAM,EAAEsB,aADoC;AAE5CrB,2CAAO,EAAEsB,cAFmC;AAG5CrB,2CAAO,EAAE,CAAC,IAAD;AAHmC,mCAA5B,CAAN;;AArB6B;AAqBrCO,uCArBqC;AAAA;AA0B3C,yCAAMA,KAAK,CAACC,OAAN,EAAN;;AA1B2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB;AAAA,uBAA3B;;;;;;;;;AA4BH;AApUoB;AAAA;AAAA,iBAsUR,2BAAe;;;;;;;;;sCACJ,KAAKtR,e;sCACV,gF;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;sCACH;AACZxQ,4BAAI,EAAE,KAAKmC,IADC;AAEZ4B,gCAAQ,EAAE,KAAKA;AAFH,uB;;AAHhB0M,iC;AACAP,gC,EAAU,iB;AACVQ,yC;AACAC,sC;;;AAJU,2CAA2Bf,MAA3B;;;AAARrH,2B;;AASN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;AACAhI,2BAAK,CAACqI,aAAN,GAAsB/H,IAAtB,CAA2B;AAAA,4BAASxI,IAAT,SAASA,IAAT;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C,uCAAK8O,iBAAL,CAAuB,IAAvB,EAA6B,IAA7B;AACA,uCAAKlB,iBAAL,CAAuBnF,IAAvB;;AAF2C,sCAItCzI,IAJsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAO7B,yCAAM,KAAK+M,eAAL,CAAqBwC,MAArB,CAA4B;AAC5CC,0CAAM,EAAE,KAAKvO,SAAL,CAAemJ,OAAf,CAAuB,8BAAvB,CADoC;AAE5CqF,2CAAO,YAAK,KAAKxO,SAAL,CAAemJ,OAAf,CAAuB,oBAAvB,CAAL,cAAqDpK,IAAI,CAACyP,OAA1D,CAFqC;AAG5CC,2CAAO,EAAE,CAAC,IAAD;AAHmC,mCAA5B,CAAN;;AAP6B;AAOrCO,uCAPqC;AAAA;AAY3C,yCAAMA,KAAK,CAACC,OAAN,EAAN;;AAZ2C;AAa3C,uCAAKO,cAAL;;AAb2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB;AAAA,uBAA3B;;;;;;;;;AAeH;AAhWoB;AAAA;AAAA,iBAkWR,yBAAa;;;;;;;;;sCACF,KAAK7R,e;sCACV,0E;;AAEQ,6BAAM,KAAKA,eAAL,CAAqBuR,MAArB,EAAN;;;;sCACH;AACZrO,4BAAI,EAAE,KAAKA,IADC;AAEZ4B,gCAAQ,EAAE,KAAKA;AAFH,uB;;AAHhB0M,iC;AACAP,gC,EAAU,iB;AACVQ,yC;AACAC,sC;;;AAJU,2CAA2Bf,MAA3B;;;AAARrH,2B;;AASN,6BAAMA,KAAK,CAACgI,OAAN,EAAN;;;AACAhI,2BAAK,CAACqI,aAAN,GAAsB/H,IAAtB,CAA2B;AAAA,4BAASxI,IAAT,SAASA,IAAT;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C,uCAAK8O,iBAAL,CAAuB,IAAvB,EAA6B,IAA7B;AACA,uCAAKlB,iBAAL,CAAuBnF,IAAvB;;AAF2C,sCAItCzI,IAJsC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAO3CgR,yCAAO,CAACC,GAAR,CAAYjR,IAAZ;AAP2C;AAQ7B,yCAAM,KAAK+M,eAAL,CAAqBwC,MAArB,CAA4B;AAC5CC,0CAAM,EAAE,KAAKvO,SAAL,CAAemJ,OAAf,CAAuB,2BAAvB,CADoC;AAE5CqF,2CAAO,YAAKzP,IAAI,CAACwQ,iBAAV,cAA+BxQ,IAAI,CAACqB,uBAApC,cAA+D,KAAKJ,SAAL,CAAemJ,OAAf,CAClE,0BADkE,CAA/D,CAFqC;AAK5CsF,2CAAO,EAAE,CAAC,IAAD;AALmC,mCAA5B,CAAN;;AAR6B;AAQrCO,uCARqC;AAAA;AAe3C,yCAAMA,KAAK,CAACC,OAAN,EAAN;;AAf2C;AAgB3C,uCAAKO,cAAL;;AAhB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB;AAAA,uBAA3B;;;;;;;;;AAkBH;AA/XoB;AAAA;AAAA,iBAiYd,mBAAO;AACV,iBAAK7R,eAAL,CAAqBC,OAArB;AACH;AAnYoB;AAAA;AAAA,iBAqYd,mBAAUqS,GAAV,EAAqB;AACxB,6BAAUA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAV,cAA6BD,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAA7B,cAAgDD,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAhD,cAAoED,GAAG,CAACC,KAAJ,CAAU,EAAV,CAApE;AACH;AAvYoB;AAAA;AAAA,iBAyYd,wBAAeC,EAAf,EAAsB;AACzB,gBAAIA,EAAE,CAACC,YAAP,EAAqB;AACjB,sBAAQD,EAAE,CAACzQ,eAAX;AACI,qBAAK,YAAL;AACI,yBAAO,aAAM,KAAKM,SAAL,CAAemJ,OAAf,CAAuB,sBAAvB,CAAN,cAA+DgH,EAAE,CAACC,YAAzE;;AACJ,qBAAK,WAAL;AACI,sBAAIC,KAAK,GAAG,EAAZ;;AACA,0BAAQF,EAAE,CAACG,MAAH,CAAUC,OAAlB;AACI,yBAAK,uBAAL;AACA,yBAAK,SAAL;AACIF,2BAAK,GAAG,SAAR;AACA;;AACJ,yBAAK,oBAAL;AACIA,2BAAK,aAAM,KAAKrQ,SAAL,CAAemJ,OAAf,CAAuB,kBAAvB,CAAN,CAAL;AACA;;AACJ,yBAAK,iBAAL;AACIkH,2BAAK,GAAG,iBAAR;AACA;;AACJ,yBAAK,qBAAL;AACIA,2BAAK,GAAG,KAAKrQ,SAAL,CAAemJ,OAAf,CAAuB,oBAAvB,CAAR;AACA;;AACJ,yBAAK,UAAL;AACIkH,2BAAK,aAAM,KAAKrQ,SAAL,CAAemJ,OAAf,CAAuB,yBAAvB,CAAN,CAAL;AACA;AAhBR;;AAkBA,yBAAOkH,KAAK,GAAG,IAAR,GAAeF,EAAE,CAACC,YAAzB;;AACJ;AACI,yBAAOD,EAAE,CAACC,YAAV;AAzBR;AA2BH;;AACD,oBAAQD,EAAE,CAACzQ,eAAX;AACI,mBAAK,WAAL;AACA,mBAAK,YAAL;AACI,oBAAI2Q,MAAK,GAAG,EAAZ;;AACA,wBAAQF,EAAE,CAACG,MAAH,CAAUC,OAAlB;AACI,uBAAK,yBAAL;AACIF,0BAAK,aAAM,KAAKrQ,SAAL,CAAemJ,OAAf,CAAuB,2BAAvB,CAAN,CAAL;AACA;;AACJ,uBAAK,sBAAL;AACIkH,0BAAK,aAAM,KAAKrQ,SAAL,CAAemJ,OAAf,CAAuB,0BAAvB,CAAN,CAAL;AACA;AANR;;AAQA,uBAAOkH,MAAP;AAZR;;AAcA,gBAAIF,EAAE,CAACzQ,eAAH,CAAmBH,QAAnB,CAA4B,4BAA5B,CAAJ,EAA+D;AAC3D,+BAAU,KAAKS,SAAL,CAAemJ,OAAf,CAAuB,6BAAvB,CAAV;AACH;;AACD,gBAAIgH,EAAE,CAACzQ,eAAH,CAAmBH,QAAnB,CAA4B,eAA5B,CAAJ,EAAkD;AAC9C,+BAAU,KAAKS,SAAL,CAAemJ,OAAf,CAAuB,4BAAvB,CAAV;AACH;;AACD,gBAAIgH,EAAE,CAACzQ,eAAH,CAAmBH,QAAnB,CAA4B,sBAA5B,CAAJ,EAAyD;AACrD,+BAAU,KAAKS,SAAL,CAAemJ,OAAf,CAAuB,0BAAvB,CAAV;AACH;;AACD,mBAAOgH,EAAE,CAACzQ,eAAV;AACH;AA/boB;AAAA;AAAA,iBAicd,6BAAoByQ,EAApB,EAA2B;AAC9B,gBAAIA,EAAE,CAACrB,MAAH,KAAc,UAAlB,EAA8B;AAC1B,qBAAO,QAAP;AACH;;AACD,oBAAQqB,EAAE,CAACzQ,eAAX;AACI,mBAAK,YAAL;AACI,uBAAO,SAAP;;AACJ,mBAAK,WAAL;AACI,uBAAO,YAAP;;AACJ,mBAAK,sBAAL;AACI,uBAAO,SAAP;;AACJ;AACI,uBAAOyQ,EAAE,CAACK,KAAH,GAAW,QAAX,GAAsB,SAA7B;AARR;AAUH;AA/coB;AAAA;AAAA,iBAidd,4BAAmBL,EAAnB,EAA0B;AAC7B,oBAAQA,EAAE,CAACzQ,eAAX;AACI,mBAAK,YAAL;AACI,uBAAO,iBAAP;;AACJ,mBAAK,WAAL;AACI,uBAAO,mBAAP;;AACJ,mBAAK,sBAAL;AACI,uBAAO,yBAAP;;AACJ;AACI,uBAAOyQ,EAAE,CAACK,KAAH,GAAW,YAAX,GAA0B,UAAjC;AARR;AAUH;AA5doB;AAAA;AAAA,iBA8db,0BAAc;AAClB,iBAAKxE,cAAL,CAAoBhK,KAApB;AACA,iBAAKiK,kBAAL,CAAwBwE,WAAxB,CAAoCC,IAApC;AACH;AAjeoB;;AAAA;AAAA,S;;;;gBAhBhB;;gBArBA;;gBAaA;;gBAEA;;gBAZiB;;gBAAjB;;gBAiBA;;gBAhBA;;gBAUA;;gBAEA;;gBAMA;;gBAjBA;;;;AAgCI7E,kBAAY,6DALxB,gEAAU;AACPrO,gBAAQ,EAAE,eADH;AAEPC,gBAAQ,EAAR,uEAFO;;AAAA,OAAV,CAKwB,GAAZoO,YAAY,CAAZ;;;;;;;;;;;;;;;;ACrCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBF8E,eAAe;AAOxB,iCAAoBhT,eAApB,EAA8DmC,IAA9D,EAAgF;AAAA;;AAA5D,eAAAnC,eAAA,GAAAA,eAAA;AAA0C,eAAAmC,IAAA,GAAAA,IAAA;AAHvD,eAAA8Q,MAAA,GAAS,uEAAT;AAG2E;;AAP1D;AAAA;AAAA,iBASjB,oBAAQ;AAAA;;AACX,iBAAK9Q,IAAL,CAAU8I,GAAV,kBAAqC,KAAK/H,IAAL,CAAUvB,EAA/C,eAA6DyB,SAA7D,CAAuE,UAAAqM,OAAO;AAAA,qBAAK,OAAI,CAACA,OAAL,GAAeA,OAApB;AAAA,aAA9E;AACH;AAXuB;AAAA;AAAA,iBAajB,mBAAO;AACV,iBAAKzP,eAAL,CAAqBC,OAArB;AACH;AAfuB;AAAA;AAAA,iBAiBjB,0BAAiBiT,UAAjB,EAAmC;AACtC,6BAAUA,UAAU,CAACX,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAV,cAAoCW,UAAU,CAACX,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAApC,cAA8DW,UAAU,CAACX,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAA9D,cAAyFW,UAAU,CAACX,KAAX,CAAiB,EAAjB,CAAzF;AACH;AAnBuB;AAAA;AAAA,iBAqBjB,mCAA0B;AAC7B,gBAAI,CAAC,KAAKlT,eAAV,EAA2B;AACvB;AACH;;AACD,gBAAMC,MAAM,GAAG;AACXD,6BAAe,EAAE,SAAS,KAAKA,eAAd,GAAgC,GADtC;AAEXI,4BAAc,EAAE;AAFL,aAAf;AAIA,mBAAOH,MAAP;AACH;AA9BuB;;AAAA;AAAA,S;;;;gBAbnB;;gBAHA;;;;AAgBI0T,qBAAe,6DAJ3B,gEAAU;AACPnT,gBAAQ,EAAE,cADH;AAEPC,gBAAQ,EAAR;AAFO,OAAV,CAI2B,GAAfkT,eAAe,CAAf;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmBFG,8BAA8B;AAWvC,gDACWC,WADX,EAEYlK,QAFZ,EAGY/G,IAHZ,EAIYkR,MAJZ,EAKYjF,oBALZ,EAMYhE,MANZ,EAOWhI,OAPX,EAQWC,SARX,EAQsC;AAAA;;AAP3B,eAAA+Q,WAAA,GAAAA,WAAA;AACC,eAAAlK,QAAA,GAAAA,QAAA;AACA,eAAA/G,IAAA,GAAAA,IAAA;AACA,eAAAkR,MAAA,GAAAA,MAAA;AACA,eAAAjF,oBAAA,GAAAA,oBAAA;AACA,eAAAhE,MAAA,GAAAA,MAAA;AACD,eAAAhI,OAAA,GAAAA,OAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AAZJ,eAAAQ,SAAA,GAAY,KAAZ;AAEC,eAAAyQ,cAAA,GAAiB,IAAI,iDAAJ,EAAjB;AAWJ;;AApBmC;AAAA;AAAA,iBAsBhC,uBAAW;AACd,iBAAKA,cAAL,CAAoB3O,WAApB;AACH;AAxBsC;AAAA;AAAA,iBA0BhC,kBAAM;AAAA;;AACT,gBAAI,CAAC,KAAK4O,oBAAL,CAA0BC,KAA/B,EAAsC;AAClC;AACH;;AACD,iBAAKF,cAAL,CAAoBlP,GAApB,CACI,KAAKgK,oBAAL,CAA0B0D,kBAA1B,CAA6C,SAA7C,EAAwD1O,SAAxD,CAAkE,YAAM;AACpE,qBAAI,CAAC8F,QAAL,CACKK,IADL,CACU,gHADV,EACmC;AAC3BC,2BAAW,EAAE,eADc;AAE3BwI,wBAAQ,EAAE;AAFiB,eADnC,EAKKrI,MALL,CAKYC,IALZ,CAMQ,UAAAsB,KAAK,EAAI;AACL,uBAAI,CAACrI,SAAL,GAAiB,IAAjB;;AACA,uBAAI,CAACV,IAAL,CACKc,IADL,CACsB,cADtB,EACsC;AAC9BtB,oBAAE,EAAE,OAAI,CAAC8R,SAAL,CAAe9R,EADW;AAE9BE,sBAAI,EAAE,OAAI,CAAC4R,SAAL,CAAe5R,IAFS;AAG9BN,0BAAQ,EAAE;AAAEG,wBAAI,EAAE,OAAI,CAAC+R,SAAL,CAAelS,QAAf,CAAwBG;AAAhC,mBAHoB;AAI9ByK,6BAAW,EAAE;AAAE5K,4BAAQ,EAAE;AAAEG,0BAAI,EAAE,OAAI,CAAC+R,SAAL,CAAelS,QAAf,CAAwBG;AAAhC;AAAZ,mBAJiB;AAK9BF,sBAAI,EAAE;AAAEG,sBAAE,EAAE,OAAI,CAAC8R,SAAL,CAAejS,IAAf,CAAoBG;AAA1B,mBALwB;AAM9B+R,iCAAe,EAAE,OAAI,CAACD,SAAL,CAAeC,eANF;AAO9BxI,uBAAK,EAAE,oDAAKA,KAAL,EAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,CAAZ;AAPuB,iBADtC,EAUK/H,IAVL,CAWQ,gEAAS,YAAM;AACX,yBAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,iBAFD,CAXR,EAeKO,SAfL,CAee;AAAA,yBAAY;AAAA;AAAA;AAAA;AAAA;AACnB,iCAAKgH,MAAL,CAAYgH,OAAZ,CACI,KAAK/O,SAAL,CAAemJ,OAAf,CAAuB,8CAAvB,CADJ;AAGA,iCAAK4H,WAAL,CAAiB3H,KAAjB;;AAJmB,gCAKd,KAAK4H,MAAL,CAAYM,GAAZ,CAAgB/R,QAAhB,CAAyB,OAAzB,CALc;AAAA;AAAA;AAAA;;AAAA;AAMf,mCAAM,KAAKyR,MAAL,CAAYO,QAAZ,CAAqB,CAAC,eAAD,CAArB,CAAN;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAZ;AAAA,iBAff;AAwBH,eAhCT,EAiCQ;AAAA,uBAAMvK,SAAN;AAAA,eAjCR;AAmCH,aApCD,CADJ;AAuCH;AArEsC;;AAAA;AAAA,S;;;;gBAflC;;gBAAgB;;gBAJhB;;gBAGA;;gBAOA;;gBAEA;;gBADA;;gBANA;;;;;;gBAeJ,uD;AAAS,iBAAC,sBAAD;;;gBAGT;;;AAJQ8J,oCAA8B,6DAJ1C,gEAAU;AACPtT,gBAAQ,EAAE,yBADH;AAEPC,gBAAQ,EAAR;AAFO,OAAV,CAI0C,GAA9BqT,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTAU,eAAe;AAAA;AAAA,Q;;AAAfA,qBAAe,6DAL3B,+DAAS;AACNC,oBAAY,EAAE,CAAC,wEAAD,CADR;AAENC,eAAO,EAAE,CAAC,2DAAD,EAAe,0DAAf,CAFH;AAGNnN,eAAO,EAAE,CAAC,wEAAD;AAHH,OAAT,CAK2B,GAAfiN,eAAe,CAAf;;;;;;;;;;;;;;ACVb,UAAIG,UAAU,GAAG,IAAIC,KAAJ,CAAU,2CAAV,CAAjB;AACA,UAAIC,WAAW,GAAG,IAAID,KAAJ,CAAU,kBAAV,CAAlB;AACA,UAAI1H,GAAG,GAAG3E,IAAI,CAAC2E,GAAf;AACA,UAAI4H,EAAE,GAAGhH,IAAI,CAACiH,GAAd;AAEAC,YAAM,CAACzN,OAAP,GAAiB;AACf0N,YAAI,EAAEC,IAAI,CAAC,YAAD,CADK;AAEfnJ,WAAG,EAAEmJ,IAAI,CAAC,WAAD;AAFM,OAAjB;;AAKA,eAASA,IAAT,CAAeC,IAAf,EAAqB;AACnB,eAAO,SAASvK,MAAT,CAAiBwK,EAAjB,EAAqBC,EAArB,EAAyBC,IAAzB,EAA+BC,EAA/B,EAAmC;AACxCD,cAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,cAAI,OAAOA,IAAP,IAAe,UAAnB,EAA+BC,EAAE,GAAGD,IAAL,EAAWA,IAAI,GAAG,EAAlB;AAC/B,cAAI,OAAOC,EAAP,IAAa,UAAjB,EAA6BA,EAAE,GAAGC,IAAL;AAE7B,cAAIC,KAAK,GAAGX,EAAE,EAAd;AACA,cAAIpQ,IAAI,GAAG0Q,EAAE,CAACD,IAAD,CAAb;AACA,cAAIxK,IAAI,GAAG2K,IAAI,CAAC3K,IAAL,IAAa/B,SAAxB;AACA,cAAIqD,QAAQ,GAAG,CAACyJ,KAAK,CAACJ,IAAI,CAACrJ,QAAN,CAAN,GAAwB,CAACqJ,IAAI,CAACrJ,QAA9B,GAAyC,GAAxD;AACA,cAAI0J,SAAS,GAAG,KAAhB;AAEA,iBAAOjR,IAAI,KAAK2Q,EAAT,GACLE,EAAE,CAACZ,UAAD,EAAaS,EAAE,CAACD,IAAD,CAAf,CADG,GAELS,qBAAqB,CAACC,OAAD,CAFhB,EAE2BC,MAFlC;;AAIA,mBAASA,MAAT,GAAmB;AACjBH,qBAAS,GAAG,IAAZ;AACD;;AAED,mBAASE,OAAT,CAAkBE,SAAlB,EAA6B;AAC3B,gBAAIJ,SAAJ,EAAe,OAAOJ,EAAE,CAACV,WAAD,EAAcO,EAAE,CAACD,IAAD,CAAhB,CAAT;AAEf,gBAAIJ,GAAG,GAAGD,EAAE,EAAZ;AACA,gBAAIkB,IAAI,GAAG9I,GAAG,CAAC,CAAD,EAAK,CAAC6H,GAAG,GAAGU,KAAP,IAAgBxJ,QAArB,CAAd;AACA,gBAAIgK,KAAK,GAAGtL,IAAI,CAACqL,IAAD,CAAhB;AAEAZ,cAAE,CAACD,IAAD,CAAF,GAAYc,KAAK,IAAIZ,EAAE,GAAG3Q,IAAT,CAAN,GAAwBA,IAAnC;AAEAsR,gBAAI,GAAG,CAAP,GACEJ,qBAAqB,CAACC,OAAD,CADvB,GAEED,qBAAqB,CAAC,YAAY;AAChCL,gBAAE,CAAC,IAAD,EAAOH,EAAE,CAACD,IAAD,CAAT,CAAF;AACD,aAFoB,CAFvB;AAKD;AACF,SAnCD;AAoCD;;AAED,eAASvM,SAAT,CAAoBnB,CAApB,EAAuB;AACrB,eAAO,OAAO,IAAIc,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAUhB,CAAnB,CAAX,CAAP;AACD;;AAED,eAAS+N,IAAT,GAAiB,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3BNU,eAAe;AAsBxB,iCACYpT,IADZ,EAEWC,OAFX,EAGYpC,eAHZ,EAIY8D,UAJZ,EAKYD,eALZ,EAK4C;AAAA;;AAJhC,eAAA1B,IAAA,GAAAA,IAAA;AACD,eAAAC,OAAA,GAAAA,OAAA;AACC,eAAApC,eAAA,GAAAA,eAAA;AACA,eAAA8D,UAAA,GAAAA,UAAA;AACA,eAAAD,eAAA,GAAAA,eAAA;AArBL,eAAAtB,kBAAA,GAAmC,KAAnC;AAIA,eAAA2B,YAAA,GAAe,GAAf;AAEA,eAAApB,cAAA,GAAiC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAAjC;AACA,eAAAD,SAAA,GAAY,KAAZ;AACA,eAAAgM,UAAA,GAAa,KAAb;AAKA,eAAA2G,UAAA,GAAa,IAAI,4CAAJ,EAAb;AACC,eAAAC,YAAA,GAAe,IAAI,iDAAJ,EAAf;AAQJ;;AA5BoB;AAAA;AAAA,iBA8BjB,oBAAW;AAAA;;AACd,iBAAK5R,eAAL,CACKW,YADL,CACkB,KADlB,EAEKrB,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGKC,SAHL,CAGe,UAAAqB,GAAG,EAAI;AACd,kBAAIA,GAAJ,EAAS;AACL,uBAAI,CAACiR,mBAAL,GAA2BjR,GAA3B;AACH;AACJ,aAPL;AAQA,iBAAKgR,YAAL,CAAkBrR,GAAlB,CACI,KAAKoR,UAAL,CACKrS,IADL,CAEQ,2DAAI,YAAM;AACN,qBAAI,CAAC0L,UAAL,GAAkB,IAAlB;AACH,aAFD,CAFR,EAKQ,iEAAU,YAAK;;;AACX,2EAAS,CACL,OAAI,CAAC/K,UAAL,CAAgBO,KAAhB,CAAsB;AAClBxC,oBAAI,EAAE,SADY;AAElByC,sBAAM,EAAE,MAFU;AAGlB/C,wBAAQ,EAAE;AAAEG,sBAAI,EAAE,OAAI,CAACgU,mBAAL,CAAyBhU;AAAjC,iBAHQ;AAIlBF,oBAAI,EAAE;AAAEG,oBAAE,EAAE,OAAI,CAACS,OAAL,CAAaZ,IAAb,CAAkBG;AAAxB;AAJY,eAAtB,CADK,EAOL,OAAI,CAACY,kBAAL,KAA4B,OAAI,CAACmT,mBAAL,CAAyBhU,IAArD,GACM,OAAI,CAACS,IAAL,CACKc,IADL,0BAE0B,mBAAI,CAAClC,IAAL,CAAU8E,UAAV,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,WAAtB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEnE,EAF7D,yBAGQ;AACIc,uCAAuB,EAAE,OAAI,CAACiT,mBAAL,CAAyBhU,IADtD;AAEIa,kCAAkB,EAAE,OAAI,CAACA;AAF7B,eAHR,EAQKY,IARL,CAQU,2DAAI,UAAAE,QAAQ;AAAA,uBAAIA,QAAQ,CAACa,YAAb;AAAA,eAAZ,CARV,CADN,GAUM,gDAAG,GAAH,CAjBD,CAAT,EAkBGf,IAlBH,CAmBI,gEAAS,YAAM;AACX,uBAAI,CAAC0L,UAAL,GAAkB,KAAlB;AACH,eAFD,CAnBJ;AAsBC,aAvBL,CALR,EA+BKzL,SA/BL,CA+Be,iBAAyB;AAAA;AAAA,kBAAvBwI,GAAuB;AAAA,kBAAlB1H,YAAkB;;AAChC,qBAAI,CAACyR,aAAL,GAAqB/J,GAArB;AACA,qBAAI,CAAC1H,YAAL,GAAoBA,YAApB;AACH,aAlCL,CADJ;AAqCA,iBAAKsR,UAAL,CAAgB3L,IAAhB;AACH;AA7EuB;AAAA;AAAA,iBA+EjB,uBAAc;AACjB,iBAAK4L,YAAL,CAAkB9Q,WAAlB;AACH;AAjFuB;AAAA;AAAA,iBAmFX,kBAAM;;;;;;;;2BACX,KAAKiR,UAAL,CAAgB5S,O;;;;;;;;AAGpB,2BAAKH,SAAL,GAAiB,IAAjB;AACA,2BAAKV,IAAL,CACKc,IADL,kBAC8C,KAAKlC,IAAL,CAAUY,EADxD,cACqE;AAC7DY,0CAAkB,EAAE,KAAKA,kBADoC;AAE7DC,8BAAM,EAAE,KAAKA,MAAL,GAAc,EAFuC;AAG7DC,+CAAuB,EAAE,KAAKiT,mBAAL,CAAyBhU;AAHW,uBADrE,EAMKyB,IANL,CAOQ,gEAAS,YAAM;AACX,+BAAI,CAACN,SAAL,GAAiB,KAAjB;AACH,uBAFD,CAPR,EAWKO,SAXL,CAWe,UAAAC,QAAQ,EAAI;AACnB,+BAAI,CAACrD,eAAL,CAAqBC,OAArB,CAA6BoD,QAA7B;AACH,uBAbL;;;;;;;;;AAcH;AAtGuB;AAAA;AAAA,iBAwGjB,mBAAO;AACV,iBAAKrD,eAAL,CAAqBC,OAArB;AACH;AA1GuB;AAAA;AAAA,iBA4GjB,wBAAeyB,IAAf,EAA2B;AAC9B,gBAAMmD,KAAK,GAAG,KAAKC,QAAL,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,SAAF,KAAgBvD,IAApB;AAAA,aAApB,CAAd;;AACA,gBAAImD,KAAJ,EAAW;AACP,qBAAOA,KAAK,CAACK,OAAN,GAAgB,EAAvB;AACH;;AACD,mBAAO,MAAP;AACH;AAlHuB;AAAA;AAAA,iBAoHjB,wBAAY;;;AACf,gBAAIM,iBAAiB,GAAG,IAAI,mDAAJ,CAAc,CAAd,CAAxB;;AACA,gBAAI,CAAJ,KAAI,KAAKmQ,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAErJ,QAAxB,EAAkC;AAC9B9G,+BAAiB,GAAG,IAAI,mDAAJ,CAAc,KAAKhD,MAAL,IAAe,CAA7B,EACfiD,KADe,CACT,KAAKvB,YADI,EAEfuB,KAFe,CAET,KAAKkQ,aAAL,CAAmBrJ,QAAnB,IAA+B,CAFtB,CAApB;;AAIA,kBAAI,KAAKqJ,aAAL,CAAmBpJ,GAAnB,IAA0B/G,iBAAiB,CAACiH,UAAlB,CAA6B,KAAKkJ,aAAL,CAAmBpJ,GAAhD,CAA9B,EAAoF;AAChF/G,iCAAiB,GAAG,IAAI,mDAAJ,CAAc,KAAKmQ,aAAL,CAAmBpJ,GAAjC,CAApB;AACH,eAFD,MAEO,IAAI,KAAKoJ,aAAL,CAAmBjJ,GAAnB,IAA0BlH,iBAAiB,CAACoH,aAAlB,CAAgC,KAAK+I,aAAL,CAAmBjJ,GAAnD,CAA9B,EAAuF;AAC1FlH,iCAAiB,GAAG,IAAI,mDAAJ,CAAc,KAAKmQ,aAAL,CAAmBjJ,GAAjC,CAApB;AACH;AACJ;;AACD,mBAAO,IAAI,mDAAJ,CAAc,YAAKiJ,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEvJ,KAApB,KAA6B,CAA3C,EAA8CzG,IAA9C,CAAmDH,iBAAnD,EAAsEI,OAAtE,CAA8E,CAA9E,EAAiF,CAAjF,CAAP;AACH;AAlIuB;AAAA;AAAA,iBAoIjB,2BAAe;AAClB,gBAAI,CAAC,KAAKpD,MAAV,EAAkB;AACd,qBAAO,GAAP;AACH;;AACD,mBAAO,IAAI,mDAAJ,CAAc,KAAKA,MAAnB,EAA2BiD,KAA3B,CAAiC,KAAKvB,YAAtC,EAAoD6B,KAApD,CAA0D,KAAKC,YAAL,EAA1D,EAA+EJ,OAA/E,CAAuF,CAAvF,EAA0F,CAA1F,CAAP;AACH;AAzIuB;;AAAA;AAAA,S;;;;gBA1BnB;;gBAWA;;gBARA;;gBAOA;;gBAHA;;;;;;gBAoBJ;;;gBAEA;;;gBAaA,uD;AAAS,iBAAC,YAAD;;;AAhBD2P,qBAAe,6DAL3B,gEAAU;AACP1V,gBAAQ,EAAE,kBADH;AAEPC,gBAAQ,EAAR,0EAFO;;AAAA,OAAV,CAK2B,GAAfyV,eAAe,CAAf;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA","file":"default~admin-admin-module~dashboard-dashboard-module~user-cards-user-cards-module~user-redemption-u~0405aa63-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.unload-card' | translate}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #unloadForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': unloadForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"submit()\\\"\\n            novalidate\\n        >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"source\\\">{{ 'common.source' | translate }} ({{ 'common.card' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"sourceCurrencyCode\\\"\\n                        (ngModelChange)=\\\"fetchEvent.next()\\\"\\n                        name=\\\"sourceCurrencyCode\\\"\\n                        [items]=\\\"niumCurrencies\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"true\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                        </div>\\n                    </div>\\n                    <input\\n                        type=\\\"number\\\"\\n                        class=\\\"form-control form-control-lg\\\"\\n                        id=\\\"amount\\\"\\n                        name=\\\"amount\\\"\\n                        [placeholder]=\\\"'0.00'\\\"\\n                        [(ngModel)]=\\\"amount\\\"\\n                        #amountInput=\\\"ngModel\\\"\\n                        required\\n                    />\\n                    <div *ngIf=\\\"amountInput.invalid && (unloadForm.submitted || amountInput.dirty)\\\" class=\\\"error-messages\\\">\\n                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amountInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"destination\\\"> {{ 'common.destination' | translate }} ({{ 'common.wallet' | translate }}) </label>\\n                    <currency-select\\n                        [(currency)]=\\\"destinationCurrency\\\"\\n                        [user]=\\\"session.user\\\"\\n                        [isLarge]=\\\"true\\\"\\n                        [required]=\\\"true\\\"\\n                        [salesProceeds]=\\\"true\\\"\\n                        [filterBy]=\\\"['USD']\\\"\\n                        (currencyChange)=\\\"fetchEvent.next()\\\"\\n                    >\\n                    </currency-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"calculateFee()\\\">\\n                            <td>{{ 'common.service-fee' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <span class=\\\"font-weight-bold\\\" *ngIf=\\\"!isFetching; else spinner\\\"\\n                                    >{{ calculateFee() | amount: 2 }} {{ destinationCurrency.code }}\\n                                </span>\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"sourceCurrencyCode !== destinationCurrency.code\\\">\\n                            <td>Exchange rate</td>\\n                            <td class=\\\"text-right\\\">\\n                                <span class=\\\"font-weight-bold\\\" *ngIf=\\\"!isFetching; else spinner\\\">\\n                                    1 {{ sourceCurrencyCode }} = {{ exchangeRate | amount: 4 }} {{destinationCurrency.code}}\\n                                </span>\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.amount-to-be-credited' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateAmount() | amount: 2 }} {{ destinationCurrency.code }}</b></td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n<ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n\";","import { Component, Input } from '@angular/core'\nimport { environment } from 'src/environments/environment'\nimport { ICard } from '../api-interfaces'\n\n@Component({\n    selector: 'card-dummy',\n    templateUrl: 'card-dummy.component.html',\n})\nexport class CardDummyComponent {\n    @Input()\n    public card: Partial<ICard>\n    @Input()\n    public disabled: boolean\n    @Input()\n    public backgroundImage: string\n    @Input()\n    public isLoading: boolean\n\n    public getLogo(): string {\n        switch (environment.appName) {\n            case 'sgpmx':\n                return '/img/brand/logo-symbol.svg'\n            case 'premiertrust':\n            case 'ubk':\n            case 'birex':\n            case 'usunpay':\n            case 'etransfer':\n                return '/img/brand/logo.svg'\n            default:\n                return '/img/brand/logo-symbol-white.svg'\n        }\n    }\n\n    public getBackgroundImageStyle() {\n        if (!this.backgroundImage) {\n            return\n        }\n        const styles = {\n            backgroundImage: 'url(' + this.backgroundImage + ')',\n            height: '190px',\n            width: '300px',\n            backgroundSize: 'contain',\n            zIndex: 'auto',\n            border: 'none',\n            boxShadow: 'none',\n        }\n        return styles\n    }\n}\n","import { Component } from '@angular/core'\nimport { ModalController } from '@ionic/angular'\n\n@Component({\n    selector: 'app-modal-fees',\n    templateUrl: './modal-fees.page.html',\n    styleUrls: ['./modal-fees.page.scss'],\n})\nexport class ModalFeesPage {\n    constructor(private modalController: ModalController) {}\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"<div class=\\\"background\\\"></div>\\n\\n<ion-content>\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"dismiss()\\\">\\n            <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n    <ion-fab horizontal=\\\"end\\\" vertical=\\\"top\\\" slot=\\\"fixed\\\" class=\\\"change-pin\\\">\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\n            <ion-fab-button\\n                size=\\\"small\\\"\\n                class=\\\"bg-primary\\\"\\n                placement=\\\"bottom-right\\\"\\n                ngbDropdownToggle\\n                closeIcon=\\\"chevron-up-outline\\\"\\n                [disabled]=\\\"!( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n            >\\n                <ion-icon name=\\\"ellipsis-horizontal\\\"></ion-icon>\\n            </ion-fab-button>\\n            <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\n                <button ngbDropdownItem (click)=\\\"openDownloadReportModal()\\\">{{ 'common.download-report' | translate }}</button>\\n                <button *ngIf=\\\"item.type === 'physical'\\\" ngbDropdownItem (click)=\\\"openChangePinModal()\\\">{{ 'common.change-pin' | translate }}</button>\\n                <button ngbDropdownItem (click)=\\\"openUnloadModal()\\\">{{ 'common.unload-card' | translate}}</button>\\n                <button ngbDropdownItem (click)=\\\"openViewNiumTermsModal()\\\">{{'card-view.view-terms' | translate}}</button>\\n                <button ngbDropdownItem (click)=\\\"openFeesModal()\\\">{{'card-view.view-fee-schedule' | translate}}</button>\\n                <ng-container *ngIf=\\\"['admin'].includes(session.user?.role)\\\">\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <div class=\\\"dropdown-item font-sm font-weight-bold text-gray\\\">{{'card-view.admin-functions' | translate}}</div>\\n                    <button ngbDropdownItem (click)=\\\"offLedgerModal('load')\\\">\\n                        {{ 'common.load-card' | translate }} ({{ 'common.off-ledger' | translate }})\\n                    </button>\\n                    <button ngbDropdownItem (click)=\\\"offLedgerModal('unload')\\\">\\n                        {{ 'common.unload-card' | translate }} ({{ 'common.off-ledger' | translate }})\\n                    </button>\\n                </ng-container>\\n            </div>\\n        </div>\\n    </ion-fab>\\n    <ion-grid [fixed]=\\\"true\\\">\\n        <div class=\\\"top-card ion-text-center\\\">\\n            <ion-chip (click)=\\\"presentCardDetails()\\\" color=\\\"light\\\" [ngClass]=\\\"item.type === 'virtual' ? 'clickable' : 'cursor-default'\\\">\\n                <ion-label class=\\\"text-monospace text-white\\\">{{ formatPan(item.maskedPan) }}</ion-label>\\n                <fa-icon *ngIf=\\\"item.type === 'virtual'\\\" class=\\\"ml-1\\\" [icon]=\\\"faEye\\\"></fa-icon>\\n            </ion-chip>\\n            <div class=\\\"balances\\\">\\n                <ng-container *ngIf=\\\"balances$ | async; else loading\\\">\\n                    <div\\n                        (mouseenter)=\\\"balances.length <= 1 ? null : popoverBalance.toggle()\\\"\\n                        (mouseleave)=\\\"balances.length <= 1 ? null : popoverBalance.toggle()\\\"\\n                    >\\n                        <h1 class=\\\"text-white mb-0\\\">\\n                            {{ balances[0].balance | amount: 2 }}\\n                            <ion-text color=\\\"primary\\\">{{ balances[0].curSymbol }}</ion-text>\\n                        </h1>\\n                        <ion-row [ngClass]=\\\"{ 'd-none': balances.length <= 1 }\\\">\\n                            <ion-col size=\\\"12\\\" size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n                                <ion-button\\n                                    fill=\\\"clear\\\"\\n                                    [ngbPopover]=\\\"balancesTemplate\\\"\\n                                    popoverClass=\\\"popover-flex popover-dark\\\"\\n                                    placement=\\\"bottom\\\"\\n                                    size=\\\"small\\\"\\n                                    #popoverBalance=\\\"ngbPopover\\\"\\n                                >\\n                                    <ion-icon name=\\\"eye\\\"></ion-icon>&nbsp;view all balances\\n                                </ion-button>\\n                                <ng-template #balancesTemplate>\\n                                    <table class=\\\"table table-dark table-striped table-borderless mb-0\\\">\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let balance of balances.slice(1)\\\">\\n                                                <td>{{ balance.balance }}</td>\\n                                                <td class=\\\"text-primary text-right\\\">{{ balance.curSymbol }}</td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </ng-template>\\n                            </ion-col>\\n                        </ion-row>\\n                    </div>\\n                </ng-container>\\n                <ng-template #loading>\\n                    <div class=\\\"loader\\\">\\n                        <ion-spinner name=\\\"dots\\\" color=\\\"light\\\"></ion-spinner>\\n                    </div>\\n                </ng-template>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <ul class=\\\"ion-text-left\\\">\\n                    <li><span class=\\\"title\\\">{{ 'common.name-on-card' | translate }}</span></li>\\n                    <li>\\n                        <p>{{ userDetails?.firstName }} {{ userDetails?.lastName }}</p>\\n                    </li>\\n                </ul>\\n                <ul class=\\\"ion-text-right\\\">\\n                    <li><span class=\\\"title\\\">{{ 'common.status' | translate }}</span></li>\\n                    <li>\\n                        <p>\\n                            <span\\n                                class=\\\"text-capitalize\\\"\\n                                [ngClass]=\\\"{\\n                                    'text-success': item.status === 'active',\\n                                    'text-danger': item.status === 'blocked',\\n                                    'text-warning': item.status === 'inactive'\\n                                }\\\"\\n                            >\\n                                {{ item.status }}\\n                            </span>\\n                        </p>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <ion-row class=\\\"primary-actions\\\">\\n                <ion-col>\\n                    <ion-button\\n                        expand=\\\"block\\\"\\n                        (click)=\\\"presentTopupModal()\\\"\\n                        [disabled]=\\\"!this.balances || !( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n                    >\\n                        {{ 'common.top-up' | translate | titlecase }}\\n                    </ion-button>\\n                </ion-col>\\n                <ion-col>\\n                    <div class=\\\"btn-group w-100 custom-actions\\\">\\n                        <button\\n                            class=\\\"btn btn-block success-actions\\\"\\n                            (click)=\\\"openSwapModal()\\\"\\n                            [disabled]=\\\"!this.balances || !( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n                        >\\n                            <span class=\\\"text-uppercase\\\">{{ 'common.exchange' | translate }}</span>\\n                        </button>\\n                        <button\\n                            class=\\\"btn btn-block danger-actions m-0\\\"\\n                            (click)=\\\"blockUnblockCard(copy.status === 'active')\\\"\\n                            [disabled]=\\\"isBlockUnblockLoading || !( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n                        >\\n                            <ng-template #spinner><ion-spinner name=\\\"crescent\\\"></ion-spinner></ng-template>\\n                            <span class=\\\"text-uppercase\\\" *ngIf=\\\"!isBlockUnblockLoading; else spinner\\\"\\n                                >{{ (copy.status === 'active' ? 'common.block' : 'common.unblock') | translate }}</span\\n                            >\\n                        </button>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </div>\\n        <div class=\\\"section-list\\\">\\n            <ion-item *ngFor=\\\"let tx of transactions\\\">\\n                <div\\n                    class=\\\"thumb\\\"\\n                    [ngClass]=\\\"getTransactionColor(tx)\\\"\\n                    slot=\\\"start\\\"\\n                    placement=\\\"right\\\"\\n                    [ngbTooltip]=\\\"tx.retrievalReferenceNumber\\\"\\n                    triggers=\\\"click:blur\\\"\\n                >\\n                    <ion-icon [name]=\\\"getTransactionIcon(tx)\\\"></ion-icon>\\n                </div>\\n                <ion-label>\\n                    <h4><span [innerHtml]=\\\"getDescription(tx)\\\"></span></h4>\\n                    <p>{{ tx.createdAt | date: 'medium' }}</p>\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.merchantCategory\\\">{{ tx.merchantCategory }}</span>\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.transactionType.includes('Wallet_Credit_Mode_Prefund')\\\"\\n                        >{{ 'common.top-up' | translate }}</span\\n                    >\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.transactionType.includes('Wallet_Refund')\\\"\\n                        >{{ 'common.top-up' | translate | titlecase }}</span\\n                    >\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.transactionType.includes('Wallet_Fund_Transfer')\\\"\\n                        >{{ 'common.forex' | translate }}</span\\n                    >\\n                </ion-label>\\n                <div slot=\\\"end\\\">\\n                    <div\\n                        [ngClass]=\\\"{\\n                            'text-green': ['Approved', 'Pending'].includes(tx.status) && !tx.debit,\\n                            'text-danger': ['Approved', 'Pending'].includes(tx.status) && tx.debit,\\n                            'text-muted': tx.status === 'Declined'\\n                        }\\\"\\n                    >\\n                        {{ tx.debit ? '-' : '+' }}{{ tx.authAmount | amount }} {{ tx.authCurrencyCode || tx.transactionCurrencyCode }}\\n                    </div>\\n                    <small\\n                        class=\\\"text-muted\\\"\\n                        *ngIf=\\\"tx.transactionType !== 'Auto_Sweep' && tx.transactionType !== 'Wallet_Fund_Transfer' && tx.authCurrencyCode !== tx.transactionCurrencyCode\\\"\\n                    >\\n                        {{ tx.debit ? '-' : '+' }}{{ tx.cardTransactionAmount | amount }} {{ tx.transactionCurrencyCode }}\\n                    </small>\\n                    <small\\n                        class=\\\"text-green\\\"\\n                        *ngIf=\\\"(tx.transactionType === 'Auto_Sweep' || tx.transactionType === 'Wallet_Fund_Transfer') && tx.authCurrencyCode !== tx.transactionCurrencyCode\\\"\\n                    >\\n                        +{{ tx.cardTransactionAmount | amount }} {{ tx.transactionCurrencyCode }}\\n                    </small>\\n                </div>\\n            </ion-item>\\n            <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"!isFetching && transactions.length === 0\\\">\\n                <ion-label color=\\\"medium\\\"> {{ 'no-history-found' | translate }} </ion-label>\\n            </ion-item>\\n            <ion-infinite-scroll (ionInfinite)=\\\"fetchTransactions($event)\\\" class=\\\"ion-padding-top\\\">\\n                <ion-infinite-scroll-content loadingSpinner=\\\"crescent\\\"> </ion-infinite-scroll-content>\\n            </ion-infinite-scroll>\\n        </div>\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.change-pin' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<div class=\\\"ion-padding p-3\\\">\\n    <form\\n        class=\\\"form-validation\\\"\\n        #changePinForm=\\\"ngForm\\\"\\n        [ngClass]=\\\"{ 'ng-submitted': changePinForm.submitted }\\\"\\n        autocomplete=\\\"false\\\"\\n        (ngSubmit)=\\\"changePin()\\\"\\n        novalidate\\n    >\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col\\\">\\n                <label class=\\\"font-md\\\" for=\\\"pin\\\">{{'modal-change-pin.choose-your-new-pin' | translate}}</label>\\n                <input\\n                    type=\\\"password\\\"\\n                    class=\\\"form-control form-control-lg\\\"\\n                    [(ngModel)]=\\\"pinBlock\\\"\\n                    id=\\\"pin\\\"\\n                    name=\\\"pin\\\"\\n                    #pin=\\\"ngModel\\\"\\n                    pattern=\\\"^[0-9]+$\\\"\\n                    minlength=\\\"6\\\"\\n                    maxlength=\\\"6\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"pin.invalid && (changePinForm.submitted || pin.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.pattern\\\">{{ 'common.only-digits-allowed' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.minlength\\\">{{ 'common.must-six-digits' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.maxlength\\\">{{ 'common.cannot-be-longer' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col\\\">\\n                <label class=\\\"font-md\\\" for=\\\"pin\\\">{{ 'common.repeat-pin' | translate }}</label>\\n                <input\\n                    type=\\\"password\\\"\\n                    class=\\\"form-control form-control-lg\\\"\\n                    [(ngModel)]=\\\"repeatedPin\\\"\\n                    id=\\\"repeatedPin\\\"\\n                    name=\\\"repeatedPin\\\"\\n                    #repeatedPinInput=\\\"ngModel\\\"\\n                    pattern=\\\"^[0-9]+$\\\"\\n                    minlength=\\\"6\\\"\\n                    maxlength=\\\"6\\\"\\n                    [matchPassword]=\\\"pinBlock\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"repeatedPinInput.invalid && (changePinForm.submitted || repeatedPinInput.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.pattern\\\">{{ 'common.only-digits-allowed' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.minlength\\\">{{ 'common.must-six-digits' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.maxlength\\\">{{ 'common.cannot-be-longer' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.matchPassword\\\">\\n                        {{ 'common.pin-do-not-match' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n            <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n            <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n        </button>\\n    </form>\\n</div>\\n\";","export default \"<form\\n    #cardOrderConfirmForm=\\\"ngForm\\\"\\n    [ngClass]=\\\"{ 'ng-submitted': cardOrderConfirmForm.submitted }\\\"\\n    (ngSubmit)=\\\"submit()\\\"\\n    autocomplete=\\\"false\\\"\\n    novalidate\\n>\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'common.confirm-shipping-address' | translate }}</h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"callout callout-success mt-0\\\">\\n            <h6 class=\\\"text-success mb-0\\\">{{ 'common.your-card-is-waiting-for-you' | translate }}</h6>\\n            <p class=\\\"text-gray\\\">\\n                {{ 'common.you-have-been-assigned-card-order-by' }} <span class=\\\"text-primary\\\"> {{ session.user?.association?.name }} </span>.\\n                {{ 'common.confirm' | translate }}\\n                <ng-container *ngIf=\\\"cardOrder.type === 'physical'\\\">{{ 'common.your-shipping-address' | translate }} </ng-container\\n                >{{ 'common.to-proceed' | translate }}\\n            </p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"cardOrderId\\\">{{ 'common.order-id' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardOrderId\\\" name=\\\"cardOrderId\\\" [value]=\\\"cardOrder.id\\\" disabled />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"cardOrderType\\\">{{ 'common.card-type' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardOrderType\\\" name=\\\"cardOrderType\\\" [value]=\\\"cardOrder.type | uppercase\\\" disabled />\\n        </div>\\n        <div class=\\\"py-1\\\"></div>\\n        <ng-container *ngIf=\\\"cardOrder.type === 'physical'\\\">\\n            <h6 class=\\\"text-primary\\\">{{ 'common.shipping-address' | translate }}</h6>\\n            <textarea\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"cardOrder.shippingAddress\\\"\\n                name=\\\"shippingAddress\\\"\\n                rows=\\\"4\\\"\\n                required\\n                #shippingAddressField=\\\"ngModel\\\"\\n            ></textarea>\\n            <div *ngIf=\\\"shippingAddressField.invalid && (cardOrderConfirmForm.submitted || shippingAddressField.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"shippingAddressField?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </ng-container>\\n    </div>\\n    <div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n        <button class=\\\"btn btn-default btn-w-sm ml-1\\\" (click)=\\\"activeModal.dismiss()\\\" [disabled]=\\\"isLoading\\\">\\n            {{ 'common.i-will-do-it-later' | translate }}\\n        </button>\\n        <button class=\\\"btn btn-success btn-w-sm ml-1\\\" type=\\\"submit\\\" [ngClass]=\\\"{ loading: isLoading }\\\" [disabled]=\\\"isLoading\\\">\\n            {{ 'common.confirm' | translate }}\\n        </button>\\n    </div>\\n</form>\\n\";","import { FeeType, IFee, TransactionMethod } from '../../api-interfaces'\nimport { User } from '../core/user.model'\nimport { Beneficiary } from './beneficiary.model'\nimport { Currency } from './currency.model'\n\nexport const feeTypeMap: { [K in FeeType]: string } = {\n    'account-fee': 'Account Fee',\n    'card-order': 'Card Order Fee',\n    'fx-spread': 'Exchange Rate Spread',\n    deposit: 'Deposit',\n    withdrawal: 'Withdrawal',\n    transfer: 'Transfer',\n    conversion: 'Conversion',\n    investment: 'Investment',\n    trade: 'Trade',\n    redeem: 'Redeem',\n    service: 'Buy & Sell',\n    gst: 'GST',\n    payment: 'Payment',\n}\n\nexport const feeMethodMap: { [K in TransactionMethod]: string } = {\n    internal: 'Internal',\n    card: 'Topup Card',\n    crypto: 'Crypto',\n    local: 'LOCAL',\n    swift: 'SWIFT',\n}\n\nexport class Fee implements IFee {\n    public id: string\n    public type: FeeType\n    public method: TransactionMethod\n    public fixed: string | null\n    public relative: string | null\n    public max: string | null\n    public min: string | null\n    public minValue: string | null\n    public currency: Currency\n    public user: User | null\n    public beneficiary: Beneficiary | null\n    public createdAt: string\n    public updatedAt: string\n\n    public constructor(data?: Partial<IFee>) {\n        if (data) {\n            Object.assign(this, data)\n            if (data.currency) {\n                this.currency = new Currency(data.currency)\n            }\n            if (data.user) {\n                this.user = new User(data.user)\n            }\n            if (data.beneficiary) {\n                this.beneficiary = new Beneficiary(data.beneficiary)\n            }\n        }\n    }\n\n    public isGlobal(): boolean {\n        return this.user === null\n    }\n\n    public isFallback(currency: Currency): boolean {\n        return this.currency.code !== currency.code\n    }\n\n    public isAssociationFee(user: User | null): boolean {\n        return !!this.user && !!user && this.user.id !== user.id\n    }\n\n    public hasFixedFee(): boolean {\n        return !['fx-spread', 'service', 'gst'].includes(this.type)\n    }\n\n    public hasRelativeFee(): boolean {\n        return !['account-fee'].includes(this.type)\n    }\n\n    public hasMaxOrMin(): boolean {\n        return !['account-fee', 'fx-spread'].includes(this.type)\n    }\n\n    public hasMinValue(): boolean {\n        return ['transfer', 'deposit', 'withdrawal'].includes(this.type)\n    }\n}\n\nexport function getFeeType(transactionType: string): FeeType {\n    const feeMap: Record<string, FeeType> = {\n        deposit: 'deposit',\n        withdrawal: 'withdrawal',\n        transfer: 'transfer',\n        conversion: 'conversion',\n        investment: 'investment',\n        trade: 'trade',\n        redeem: 'redeem',\n        payment: 'payment',\n        // Use transfer fee for invoice\n        invoice: 'transfer',\n        'invoice-p2p': 'transfer',\n        'card-order': 'card-order',\n        'account-fee': 'account-fee',\n    }\n    return feeMap[transactionType]\n}\n","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.download-report' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"fromDate\\\">{{ 'common.from' | translate }}</label>\\n            <div class=\\\"input-group\\\">\\n                <input\\n                    class=\\\"form-control form-control-lg\\\"\\n                    placeholder=\\\"yyyy-mm-dd\\\"\\n                    name=\\\"fromDate\\\"\\n                    [(ngModel)]=\\\"fromDate\\\"\\n                    ngbDatepicker\\n                    #dfromDate=\\\"ngbDatepicker\\\"\\n                />\\n                <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-lg btn-default calendar\\\" (click)=\\\"dfromDate.toggle()\\\" type=\\\"button\\\">\\n                        <fa-icon [icon]=\\\"faCalendarAlt\\\"></fa-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"toDate\\\">{{ 'common.to' | translate | titlecase }}</label>\\n            <div class=\\\"input-group\\\">\\n                <input\\n                    class=\\\"form-control form-control-lg\\\"\\n                    placeholder=\\\"yyyy-mm-dd\\\"\\n                    name=\\\"toDate\\\"\\n                    [(ngModel)]=\\\"toDate\\\"\\n                    ngbDatepicker\\n                    #dtoDate=\\\"ngbDatepicker\\\"\\n                />\\n                <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-lg btn-default calendar\\\" (click)=\\\"dtoDate.toggle()\\\" type=\\\"button\\\">\\n                        <fa-icon [icon]=\\\"faCalendarAlt\\\"></fa-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-primary btn-block mt-3\\\" (click)=\\\"downloadReport()\\\">{{ 'common.download' | translate }}</button>\\n    </div>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport { TranslateService } from '@ngx-translate/core'\nimport { finalize } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICard } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\ninterface LoadPayload {\n    sourceCurrencyCode: string\n    amount: number | string\n    destinationCurrencyCode: string\n}\n\ninterface UnloadPayload {\n    currencyCode: string\n    comments: string\n    amount: string\n}\n\ninterface NiumFundWalletResponse {\n    systemReferenceNumber: string\n    sourceAmount: number\n    sourceCurrencyCode: string\n    destinationAmount: number\n    destinationCurrencyCode: string\n    status: 'Pending' | 'Approved' | 'Declined'\n    paymentMethods: string[]\n}\n\ninterface NiumRefundWalletResponse {\n    message: string\n    systemReferenceNumber: string\n}\n\n@Component({\n    selector: 'app-modal-offledger',\n    templateUrl: './modal-offledger.page.html',\n})\nexport class ModalOffledgerPage implements OnInit {\n    public item: ICard\n    public balances: any[]\n    public type: string\n    public apiUrl: string\n    public body: LoadPayload | UnloadPayload\n\n    public load: LoadPayload = {\n        sourceCurrencyCode: 'USD',\n        amount: '',\n        destinationCurrencyCode: 'USD',\n    }\n    public unload: UnloadPayload = {\n        currencyCode: 'USD',\n        amount: '',\n        comments: '',\n    }\n    public isLoading = false\n\n    public niumCurrencies = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n\n    public appName = environment.appName\n\n    @ViewChild('offLedgerForm')\n    public offLedgerForm: NgForm\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        public translate: TranslateService\n    ) {}\n\n    ngOnInit() {}\n\n    public async submitOffLedgerForm(): Promise<void> {\n        if (this.offLedgerForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        if (this.type === 'load') {\n            this.load.amount += ''\n            this.http\n                .post<NiumRefundWalletResponse>(`/cards/${this.item.id}/load`, this.load)\n                .pipe(\n                    finalize(() => {\n                        this.isLoading = false\n                    })\n                )\n                .subscribe(response => {\n                    this.modalController.dismiss(response)\n                })\n        } else {\n            this.unload.amount += ''\n            this.http\n                .post<NiumFundWalletResponse>(`/cards/${this.item.id}/unload`, this.unload)\n                .pipe(\n                    finalize(() => {\n                        this.isLoading = false\n                    })\n                )\n                .subscribe(response => {\n                    this.modalController.dismiss(response)\n                })\n        }\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"ion-header ion-toolbar {\\n  --background: transparent;\\n}\\n\\nh1.title {\\n  font-weight: 600;\\n  font-size: 28px;\\n  line-height: 34px;\\n  color: #151522;\\n  padding: 0;\\n  margin-top: 0;\\n  margin-bottom: 16px;\\n}\\n\\nion-text {\\n  font-weight: 300;\\n  font-size: 17px;\\n  line-height: 24px;\\n  color: #151522;\\n}\\n\\nion-item {\\n  --background: transparent;\\n  --inner-padding-end: 0;\\n}\\n\\nion-item ion-input {\\n  border: 1px solid rgba(228, 228, 228, 0.6);\\n  box-sizing: border-box;\\n  border-radius: 5px;\\n  background: #ffffff;\\n  --padding-start: 16px;\\n  margin-bottom: 8px;\\n  min-height: 48px;\\n}\\n\\nion-item ion-toggle {\\n  --background: rgba(153, 153, 153, 0.8);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n\\n.mb {\\n  margin-bottom: 16px;\\n}\\n\\n.link {\\n  text-decoration: none !important;\\n  font-weight: normal;\\n  font-size: 15px;\\n  line-height: 20px;\\n}\\n\\n.input-label {\\n  font-weight: 600;\\n  color: #151522;\\n  margin-bottom: 16px;\\n}\\n\\n.caption {\\n  color: #151522;\\n}\\n\\n.basic::after {\\n  content: \\\"\\\";\\n  width: 48px;\\n  height: auto;\\n  padding-top: 24px;\\n}\\n\\n.errors-container {\\n  font-size: 12px;\\n  font-weight: 500;\\n  color: var(--ion-color-danger);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n\\n.modal-change-pin .modal-wrapper {\\n  margin: 1rem;\\n  height: 250px;\\n  position: relative;\\n  box-shadow: 0px 1px 150px rgba(0, 0, 0, 0.4);\\n  border-radius: 8px;\\n  --width: 450px;\\n  --max-width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZGFsLWZlZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUNFO0VBQ0UsMENBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFRTtFQUNFLHNDQUFBO0FBQUo7O0FBSUE7RUFDRSxvQkFBQTtFQUNBLDZCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrRkFBQTtBQURGOztBQUdFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSx1QkFBQTtBQURKOztBQUtBO0VBQ0UsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdDQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQUZGOztBQUtBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsOEJBQUE7QUFGRjs7QUFLQTtFQUNFLG9CQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLGtGQUFBO0FBRkY7O0FBSUU7RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBRko7O0FBTUE7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsNENBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUhGIiwiZmlsZSI6Im1vZGFsLWZlZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlciBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmgxLnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAyOHB4O1xuICBsaW5lLWhlaWdodDogMzRweDtcbiAgY29sb3I6ICMxNTE1MjI7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbmlvbi10ZXh0IHtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICMxNTE1MjI7XG59XG5cbmlvbi1pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgLS1pbm5lci1wYWRkaW5nLWVuZDogMDtcblxuICBpb24taW5wdXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjI4LCAyMjgsIDIyOCwgMC42KTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIC0tcGFkZGluZy1zdGFydDogMTZweDtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgbWluLWhlaWdodDogNDhweDtcbiAgfVxuXG4gIGlvbi10b2dnbGUge1xuICAgIC0tYmFja2dyb3VuZDogcmdiYSgxNTMsIDE1MywgMTUzLCAwLjgpO1xuICB9XG59XG5cbi5hY3Rpb24tYnV0dG9uIHtcbiAgLS1ib3JkZXItcmFkaXVzOiA2cHg7XG4gIC0tYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiA0OHB4O1xuICBib3gtc2hhZG93OiAwcHggNHB4IDhweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDYpLCAwcHggNHB4IDRweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDgpO1xuXG4gIHNwYW4ge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICB9XG59XG5cbi5tYiB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbi5saW5rIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG59XG5cbi5pbnB1dC1sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjMTUxNTIyO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xufVxuXG4uY2FwdGlvbiB7XG4gIGNvbG9yOiAjMTUxNTIyO1xufVxuXG4uYmFzaWM6OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xufVxuXG4uZXJyb3JzLWNvbnRhaW5lciB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uYWN0aW9uLWJ1dHRvbiB7XG4gIC0tYm9yZGVyLXJhZGl1czogNnB4O1xuICAtLWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgbWluLWhlaWdodDogNDhweDtcbiAgYm94LXNoYWRvdzogMHB4IDRweCA4cHggcmdiYSg1MCwgNTAsIDcxLCAwLjA2KSwgMHB4IDRweCA0cHggcmdiYSg1MCwgNTAsIDcxLCAwLjA4KTtcblxuICBzcGFuIHtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjJweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcbiAgfVxufVxuXG4ubW9kYWwtY2hhbmdlLXBpbiAubW9kYWwtd3JhcHBlciB7XG4gIG1hcmdpbjogMXJlbTtcbiAgaGVpZ2h0OiAyNTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2hhZG93OiAwcHggMXB4IDE1MHB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAtLXdpZHRoOiA0NTBweDtcbiAgLS1tYXgtd2lkdGg6IDkwJTtcbn1cbiJdfQ== */\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport { finalize } from 'rxjs/operators'\nimport { ICard } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\n@Component({\n    selector: 'app-modal-change-pin',\n    templateUrl: './modal-change-pin.page.html',\n    styleUrls: ['./modal-change-pin.page.scss', '../card-view-modal.scss'],\n})\nexport class ModalChangePinPage implements OnInit {\n    public item: ICard\n    public pinBlock = ''\n    public repeatedPin: string\n    public isLoading = false\n\n    @ViewChild('changePinForm')\n    public changePinForm: NgForm\n\n    constructor(private http: HttpClient, public session: SessionService, private modalController: ModalController) {}\n\n    ngOnInit() {}\n\n    public async changePin(): Promise<void> {\n        if (this.changePinForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        this.http\n            .put<ICard>(`/cards/${this.item.id}/pin`, { pin: this.pinBlock })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { Subscription } from 'rxjs'\nimport { finalize, take } from 'rxjs/operators'\nimport { CurrenciesQuery } from 'src/app/store/currencies/currencies.query'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { environment } from 'src/environments/environment'\nimport { ICard, ICurrency } from '../../api-interfaces'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { User } from '../../models/core/user.model'\nimport { FeeService } from '../../services/accounting/fee.service'\nimport { SessionService } from '../../services/session.service'\n\ninterface TopupPayload {\n    sourceCurrencyCode: string\n    amount: number | string\n    destinationCurrencyCode: string\n}\n\ninterface NiumFundWalletResponse {\n    systemReferenceNumber: string\n    sourceAmount: number\n    sourceCurrencyCode: string\n    destinationAmount: number\n    destinationCurrencyCode: string\n    status: 'Pending' | 'Approved' | 'Declined'\n    paymentMethods: string[]\n}\n\nexport interface GetExchangeRateResponse {\n    sourceCurrencyCode: string\n    sourceAmount?: string\n    destinationCurrencyCode: string\n    destinationAmount?: string\n    exchangeRate: string\n}\n\n@Component({\n    selector: 'app-modal-topup',\n    templateUrl: './modal-topup.page.html',\n    styleUrls: ['../card-view-modal.scss'],\n})\nexport class ModalTopupPage implements OnInit, OnDestroy {\n    public item: ICard\n    public balances: any[]\n\n    public from: ICurrency = { code: 'USD' } as any\n    public topup: TopupPayload = {\n        sourceCurrencyCode: 'USD',\n        amount: '',\n        destinationCurrencyCode: 'USD',\n    }\n    public isLoading = false\n    public isGettingExchangeRate = false\n    public cardTopupFee: Fee | null\n    public exchangeRate = '1'\n\n    public niumCurrencies = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n\n    public appName = environment.appName\n    public currency: ICurrency\n\n    public subcriptions = new Subscription()\n\n    @ViewChild('transactionForm')\n    public transactionForm: NgForm\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        private walletsQuery: WalletsQuery,\n        private currenciesQuery: CurrenciesQuery,\n        private feeService: FeeService\n    ) {}\n\n    public ngOnInit() {\n        this.subcriptions.add(\n            this.feeService\n                .fetch({\n                    type: 'withdrawal',\n                    method: 'card',\n                    currency: this.from,\n                    user: new User(this.session.user),\n                })\n                .subscribe(cardTopupFee => (this.cardTopupFee = cardTopupFee))\n        )\n        this.subcriptions.add(\n            this.currenciesQuery\n                .selectEntity('USD')\n                .pipe(take(1))\n                .subscribe(usd => {\n                    this.currency = usd!\n                })\n        )\n\n        if (this.niumCurrencies.includes(this.session.user.preferredCurrency.code)) {\n            this.topup.destinationCurrencyCode = this.session.user.preferredCurrency.code\n        }\n    }\n\n    public ngOnDestroy() {\n        this.subcriptions.unsubscribe()\n    }\n\n    public async topupCard(): Promise<void> {\n        if (this.transactionForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        this.topup.sourceCurrencyCode = this.from.code\n        this.topup.amount += ''\n        this.http\n            .post<NiumFundWalletResponse>(`/cards/${this.item.id}/topup`, this.topup)\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public getCardBalance(code: string): string {\n        const found = this.balances.find(b => b.curSymbol === code)\n        if (found) {\n            return found.balance + ''\n        }\n        return '0.00'\n    }\n\n    public useMax(): void {\n        this.subcriptions.add(\n            this.walletsQuery.balances$.subscribe(balances => {\n                const found = balances.find(balance => balance.currency.code === this.from.code)\n                if (found) {\n                    this.topup.amount = parseFloat(found.balance)\n                }\n            })\n        )\n    }\n\n    public calculateFee(): string {\n        const { relativeFee, fixedFee } = this.feeService.determineFee(\n            {\n                amount: this.topup.amount + '' || '0',\n                currency: this.currency,\n            },\n            this.cardTopupFee\n        )\n        const relativeFeeAmount = new BigNumber(this.topup.amount || 0).times(relativeFee || 0)\n        const totalFee = new BigNumber(fixedFee || 0).plus(relativeFeeAmount)\n\n        return totalFee.toFixed(2, 1)\n    }\n\n    public isForexTopup(): boolean {\n        return this.from.code !== this.topup.destinationCurrencyCode\n    }\n\n    public getExchangeRate(): void {\n        this.isGettingExchangeRate = true\n        if (this.from.code !== this.topup.destinationCurrencyCode) {\n            this.http\n                .post<GetExchangeRateResponse>(\n                    `/card-programs/${this.item.cardholder?.cardProgram?.id}/get-exchange-rate`,\n                    {\n                        sourceCurrencyCode: this.from.code,\n                        destinationCurrencyCode: this.topup.destinationCurrencyCode,\n                    }\n                )\n                .pipe(\n                    finalize(() => {\n                        this.isGettingExchangeRate = false\n                    })\n                )\n                .subscribe(response => {\n                    this.exchangeRate = response.exchangeRate\n                })\n        } else {\n            this.exchangeRate = '1'\n            this.isGettingExchangeRate = false\n        }\n    }\n\n    public calculateAmount(): string {\n        if (!this.topup.amount) {\n            return '0'\n        }\n\n        return new BigNumber(this.topup.amount || 0)\n            .minus(new BigNumber(this.calculateFee()))\n            .times(this.exchangeRate)\n            .toFixed(2)\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.top-up-card' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #transactionForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': transactionForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"topupCard()\\\"\\n            novalidate\\n        >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"source\\\">\\n                        {{ 'common.source' | translate }} ({{'common.wallet' | translate}}<ng-container *ngIf=\\\"appName === 'sgpmx'\\\">\\n                            - {{ 'common.sales-proceeds' | translate }}</ng-container\\n                        >)\\n                    </label>\\n                    <currency-select\\n                        [(currency)]=\\\"from\\\"\\n                        [user]=\\\"session.user\\\"\\n                        [isLarge]=\\\"true\\\"\\n                        [currencyTypes]=\\\"['fiat']\\\"\\n                        [required]=\\\"true\\\"\\n                        [filterBy]=\\\"['USD']\\\"\\n                        [salesProceeds]=\\\"true\\\"\\n                        [hideZeroBalance]=\\\"appName !== 'sgpmx'\\\"\\n                    >\\n                    </currency-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                        </div>\\n                        <a href (click)=\\\"useMax(); $event.preventDefault()\\\">{{ 'common.use-max' | translate }}</a>\\n                    </div>\\n                    <input\\n                        type=\\\"number\\\"\\n                        class=\\\"form-control form-control-lg\\\"\\n                        id=\\\"amount\\\"\\n                        name=\\\"amount\\\"\\n                        [placeholder]=\\\"'0.00'\\\"\\n                        [(ngModel)]=\\\"topup.amount\\\"\\n                        #amount=\\\"ngModel\\\"\\n                        required\\n                    />\\n                    <div *ngIf=\\\"amount.invalid && (transactionForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"destination\\\">{{ 'common.destination' | translate }} ({{ 'common.card' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"topup.destinationCurrencyCode\\\"\\n                        (ngModelChange)=\\\"getExchangeRate()\\\"\\n                        name=\\\"destinationCurrencyCode\\\"\\n                        [items]=\\\"niumCurrencies\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"true\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.service-fee' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateFee() | amount: 2 }} {{ from.code }}</b></td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"isForexTopup()\\\">\\n                            <td>Exchange rate</td>\\n                            <td class=\\\"text-right\\\">\\n                                <b\\n                                    ><span *ngIf=\\\"!isGettingExchangeRate; else spinner\\\"\\n                                        >1 {{ from.code }} = {{ exchangeRate | amount: 4 }} {{topup.destinationCurrencyCode}}</span\\n                                    ></b\\n                                >\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.amount-to-be-credited' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateAmount() | amount: 2 }} {{ topup.destinationCurrencyCode }}</b></td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n                <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n\";","export default \".modal-change-pin .modal-wrapper {\\n  margin: 1rem;\\n  height: 250px;\\n  position: relative;\\n  box-shadow: 0px 1px 150px rgba(0, 0, 0, 0.4);\\n  border-radius: 8px;\\n  --width: 450px;\\n  --max-width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZGFsLWNoYW5nZS1waW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLDRDQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJtb2RhbC1jaGFuZ2UtcGluLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC1jaGFuZ2UtcGluIC5tb2RhbC13cmFwcGVyIHtcbiAgbWFyZ2luOiAxcmVtO1xuICBoZWlnaHQ6IDI1MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJveC1zaGFkb3c6IDBweCAxcHggMTUwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIC0td2lkdGg6IDQ1MHB4O1xuICAtLW1heC13aWR0aDogOTAlO1xufVxuIl19 */\";","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title\\n            >{{type === 'load' ? ('common.load-card' | translate) + ' (Off-ledger)' : ('common.load-card' | translate) + ' (Off-ledger)'}}</ion-title\\n        >\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #offLedgerForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': offLedgerForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"submitOffLedgerForm()\\\"\\n            novalidate\\n        >\\n            <ng-container *ngIf=\\\"type === 'load'\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <div class=\\\"d-flex justify-content-between\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                            </div>\\n                        </div>\\n                        <input\\n                            type=\\\"number\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            id=\\\"amount\\\"\\n                            name=\\\"amount\\\"\\n                            [placeholder]=\\\"'0.00'\\\"\\n                            [(ngModel)]=\\\"load.amount\\\"\\n                            #amount=\\\"ngModel\\\"\\n                            required\\n                        />\\n                        <div *ngIf=\\\"amount.invalid && (offLedgerForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"sourceCurrencyCode\\\">{{ 'common.source-currency-code' | translate }}</label>\\n                        <ng-select\\n                            class=\\\"ng-select-lg ng-select-topup\\\"\\n                            [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                            [(ngModel)]=\\\"load.sourceCurrencyCode\\\"\\n                            name=\\\"sourceCurrencyCode\\\"\\n                            [items]=\\\"niumCurrencies\\\"\\n                            [required]=\\\"true\\\"\\n                            appendTo=\\\".modal-container\\\"\\n                            [searchable]=\\\"false\\\"\\n                            [clearable]=\\\"false\\\"\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item }} </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"destinationCurrencyCode\\\">{{ 'common.destination-currency-code' | translate }}</label>\\n                        <ng-select\\n                            class=\\\"ng-select-lg ng-select-topup\\\"\\n                            [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                            [(ngModel)]=\\\"load.destinationCurrencyCode\\\"\\n                            name=\\\"destinationCurrencyCode\\\"\\n                            [items]=\\\"niumCurrencies\\\"\\n                            [required]=\\\"true\\\"\\n                            appendTo=\\\".modal-container\\\"\\n                            [searchable]=\\\"false\\\"\\n                            [clearable]=\\\"false\\\"\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item }} </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"type === 'unload'\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <div class=\\\"d-flex justify-content-between\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                            </div>\\n                        </div>\\n                        <input\\n                            type=\\\"number\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            id=\\\"amount\\\"\\n                            name=\\\"amount\\\"\\n                            [placeholder]=\\\"'0.00'\\\"\\n                            [(ngModel)]=\\\"unload.amount\\\"\\n                            #amount=\\\"ngModel\\\"\\n                            required\\n                        />\\n                        <div *ngIf=\\\"amount.invalid && (offLedgerForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"currencyCode\\\">{{ 'common.currency-code' | translate }}</label>\\n                        <ng-select\\n                            class=\\\"ng-select-lg ng-select-topup\\\"\\n                            [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                            [(ngModel)]=\\\"unload.currencyCode\\\"\\n                            name=\\\"currencyCode\\\"\\n                            [items]=\\\"niumCurrencies\\\"\\n                            [required]=\\\"true\\\"\\n                            appendTo=\\\".modal-container\\\"\\n                            [searchable]=\\\"false\\\"\\n                            [clearable]=\\\"false\\\"\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item }} </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <div class=\\\"d-flex justify-content-between\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label class=\\\"font-md\\\"> {{ 'common.comments' | translate }} </label>\\n                            </div>\\n                        </div>\\n                        <textarea\\n                            class=\\\"form-control\\\"\\n                            id=\\\"comments\\\"\\n                            name=\\\"comments\\\"\\n                            maxlength=\\\"300\\\"\\n                            [(ngModel)]=\\\"unload.comments\\\"\\n                            rows=\\\"5\\\"\\n                            emptyToNull\\n                        ></textarea>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n                <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n\";","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.card' | translate }} - {{ 'common.fee-schedule' | translate | titlecase }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding p-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <card-fee-schedule></card-fee-schedule>\\n            </div>\\n        </div>\\n    </div>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICard, ICurrency } from '../../api-interfaces'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { FeeService } from '../../services/accounting/fee.service'\nimport { SessionService } from '../../services/session.service'\n\ninterface SwapPayload {\n    sourceCurrencyCode: string\n    amount: number | string\n    destinationCurrencyCode: string\n}\n\ninterface NiumFundWalletResponse {\n    systemReferenceNumber: string\n    sourceAmount: number\n    sourceCurrencyCode: string\n    destinationAmount: number\n    destinationCurrencyCode: string\n    status: 'Pending' | 'Approved' | 'Declined'\n    paymentMethods: string[]\n}\n\nexport interface GetExchangeRateResponse {\n    sourceCurrencyCode: string\n    sourceAmount?: string\n    destinationCurrencyCode: string\n    destinationAmount?: string\n    exchangeRate: string\n}\n\n@Component({\n    selector: 'app-modal-swap',\n    templateUrl: './modal-swap.page.html',\n})\nexport class ModalSwapPage implements OnInit, OnDestroy {\n    public item: ICard\n    public balances: any[]\n\n    public swap: SwapPayload = {\n        sourceCurrencyCode: '',\n        amount: '',\n        destinationCurrencyCode: '',\n    }\n    public isLoading = false\n    public isGettingExchangeRate = false\n    public cardTopupFee: Fee | null\n    public exchangeRate = '1'\n\n    public niumCurrencies = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n    public filteredCardBalances: Record<string, any>[]\n    public filteredDestinationCurrencies: string[]\n\n    public appName = environment.appName\n    public currency: ICurrency\n\n    public subcriptions = new Subscription()\n\n    @ViewChild('transactionForm')\n    public transactionForm: NgForm\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        private feeService: FeeService\n    ) {}\n\n    public ngOnInit() {\n        this.filterSourceCurrencies()\n        this.swap.sourceCurrencyCode = 'USD'\n        this.filterDestinationCurrencies()\n        this.swap.destinationCurrencyCode = this.filteredDestinationCurrencies[0]\n        this.getExchangeRate()\n    }\n\n    public ngOnDestroy() {\n        this.subcriptions.unsubscribe()\n    }\n\n    public async topupCard(): Promise<void> {\n        if (this.transactionForm.invalid) {\n            return\n        }\n        this.isLoading = true\n\n        this.swap.amount = this.swap.amount + ''\n\n        this.http\n            .post<NiumFundWalletResponse>(`/cards/${this.item.id}/swap`, this.swap)\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public filterSourceCurrencies() {\n        this.filteredCardBalances = this.balances.filter(b => !new BigNumber(b.balance).isZero())\n    }\n\n    public filterDestinationCurrencies() {\n        this.filteredDestinationCurrencies = this.niumCurrencies.filter(c => c !== this.swap.sourceCurrencyCode)\n    }\n\n    public getCardBalance(code: string): string {\n        const found = this.balances.find(b => b.curSymbol === code)\n        if (found) {\n            return found.balance + ''\n        }\n        return '0.00'\n    }\n\n    public useMax(): void {\n        const found = this.balances.find(balance => balance.curSymbol === this.swap.sourceCurrencyCode)\n        if (found) {\n            this.swap.amount = parseFloat(found.balance)\n        }\n    }\n\n    public calculateFee(): string {\n        const { relativeFee, fixedFee } = this.feeService.determineFee(\n            {\n                amount: this.swap.amount + '' || '0',\n                currency: this.currency,\n            },\n            this.cardTopupFee\n        )\n        const relativeFeeAmount = new BigNumber(this.swap.amount || 0).times(relativeFee || 0)\n        const totalFee = new BigNumber(fixedFee || 0).plus(relativeFeeAmount)\n\n        return totalFee.toFixed(2, 1)\n    }\n\n    public isForexTopup(): boolean {\n        return this.swap.sourceCurrencyCode !== this.swap.destinationCurrencyCode\n    }\n\n    public getExchangeRate(): void {\n        this.isGettingExchangeRate = true\n        if (this.swap.sourceCurrencyCode !== this.swap.destinationCurrencyCode) {\n            this.http\n                .post<GetExchangeRateResponse>(\n                    `/card-programs/${this.item.cardholder?.cardProgram?.id}/get-exchange-rate`,\n                    {\n                        sourceCurrencyCode: this.swap.sourceCurrencyCode,\n                        destinationCurrencyCode: this.swap.destinationCurrencyCode,\n                    }\n                )\n                .pipe(\n                    finalize(() => {\n                        this.isGettingExchangeRate = false\n                    })\n                )\n                .subscribe(response => {\n                    this.exchangeRate = response.exchangeRate\n                })\n        } else {\n            this.exchangeRate = '1'\n            this.isGettingExchangeRate = false\n        }\n    }\n\n    public calculateAmount(): string {\n        if (!this.swap.amount) {\n            return '0'\n        }\n\n        return new BigNumber(this.swap.amount || 0)\n            .minus(new BigNumber(this.calculateFee()))\n            .times(this.exchangeRate)\n            .toFixed(2)\n    }\n\n    public compareCurrencies(a: any, b: string): boolean {\n        return a.curSymbol === b\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"ion-header ion-toolbar {\\n  --background: transparent;\\n}\\n\\nh1.title {\\n  font-weight: 600;\\n  font-size: 28px;\\n  line-height: 34px;\\n  color: #151522;\\n  padding: 0;\\n  margin-top: 0;\\n  margin-bottom: 16px;\\n}\\n\\nion-text {\\n  font-weight: 300;\\n  font-size: 17px;\\n  line-height: 24px;\\n  color: #151522;\\n}\\n\\nion-item {\\n  --background: transparent;\\n  --inner-padding-end: 0;\\n}\\n\\nion-item ion-input {\\n  border: 1px solid rgba(228, 228, 228, 0.6);\\n  box-sizing: border-box;\\n  border-radius: 5px;\\n  background: #ffffff;\\n  --padding-start: 16px;\\n  margin-bottom: 8px;\\n  min-height: 48px;\\n}\\n\\nion-item ion-toggle {\\n  --background: rgba(153, 153, 153, 0.8);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n\\n.mb {\\n  margin-bottom: 16px;\\n}\\n\\n.link {\\n  text-decoration: none !important;\\n  font-weight: normal;\\n  font-size: 15px;\\n  line-height: 20px;\\n}\\n\\n.input-label {\\n  font-weight: 600;\\n  color: #151522;\\n  margin-bottom: 16px;\\n}\\n\\n.caption {\\n  color: #151522;\\n}\\n\\n.basic::after {\\n  content: \\\"\\\";\\n  width: 48px;\\n  height: auto;\\n  padding-top: 24px;\\n}\\n\\n.errors-container {\\n  font-size: 12px;\\n  font-weight: 500;\\n  color: var(--ion-color-danger);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NhcmQtdmlldy1tb2RhbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUNFO0VBQ0UsMENBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFRTtFQUNFLHNDQUFBO0FBQUo7O0FBSUE7RUFDRSxvQkFBQTtFQUNBLDZCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrRkFBQTtBQURGOztBQUdFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSx1QkFBQTtBQURKOztBQUtBO0VBQ0UsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdDQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQUZGOztBQUtBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsOEJBQUE7QUFGRjs7QUFLQTtFQUNFLG9CQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLGtGQUFBO0FBRkY7O0FBSUU7RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBRkoiLCJmaWxlIjoiY2FyZC12aWV3LW1vZGFsLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taGVhZGVyIGlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuaDEudGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDI4cHg7XG4gIGxpbmUtaGVpZ2h0OiAzNHB4O1xuICBjb2xvcjogIzE1MTUyMjtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuaW9uLXRleHQge1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDE3cHg7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBjb2xvcjogIzE1MTUyMjtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAtLWlubmVyLXBhZGRpbmctZW5kOiAwO1xuXG4gIGlvbi1pbnB1dCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyMjgsIDIyOCwgMjI4LCAwLjYpO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAxNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICBtaW4taGVpZ2h0OiA0OHB4O1xuICB9XG5cbiAgaW9uLXRvZ2dsZSB7XG4gICAgLS1iYWNrZ3JvdW5kOiByZ2JhKDE1MywgMTUzLCAxNTMsIDAuOCk7XG4gIH1cbn1cblxuLmFjdGlvbi1idXR0b24ge1xuICAtLWJvcmRlci1yYWRpdXM6IDZweDtcbiAgLS1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIG1pbi1oZWlnaHQ6IDQ4cHg7XG4gIGJveC1zaGFkb3c6IDBweCA0cHggOHB4IHJnYmEoNTAsIDUwLCA3MSwgMC4wNiksIDBweCA0cHggNHB4IHJnYmEoNTAsIDUwLCA3MSwgMC4wOCk7XG5cbiAgc3BhbiB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XG4gIH1cbn1cblxuLm1iIHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuLmxpbmsge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbn1cblxuLmlucHV0LWxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMxNTE1MjI7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbi5jYXB0aW9uIHtcbiAgY29sb3I6ICMxNTE1MjI7XG59XG5cbi5iYXNpYzo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDQ4cHg7XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZy10b3A6IDI0cHg7XG59XG5cbi5lcnJvcnMtY29udGFpbmVyIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59XG5cbi5hY3Rpb24tYnV0dG9uIHtcbiAgLS1ib3JkZXItcmFkaXVzOiA2cHg7XG4gIC0tYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiA0OHB4O1xuICBib3gtc2hhZG93OiAwcHggNHB4IDhweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDYpLCAwcHggNHB4IDRweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDgpO1xuXG4gIHNwYW4ge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICB9XG59XG4iXX0= */\";","\n// easing functions from \"Tween.js\"\n\nexports.linear = function(n){\n  return n;\n};\n\nexports.inQuad = function(n){\n  return n * n;\n};\n\nexports.outQuad = function(n){\n  return n * (2 - n);\n};\n\nexports.inOutQuad = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n;\n  return - 0.5 * (--n * (n - 2) - 1);\n};\n\nexports.inCube = function(n){\n  return n * n * n;\n};\n\nexports.outCube = function(n){\n  return --n * n * n + 1;\n};\n\nexports.inOutCube = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n;\n  return 0.5 * ((n -= 2 ) * n * n + 2);\n};\n\nexports.inQuart = function(n){\n  return n * n * n * n;\n};\n\nexports.outQuart = function(n){\n  return 1 - (--n * n * n * n);\n};\n\nexports.inOutQuart = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n;\n  return -0.5 * ((n -= 2) * n * n * n - 2);\n};\n\nexports.inQuint = function(n){\n  return n * n * n * n * n;\n}\n\nexports.outQuint = function(n){\n  return --n * n * n * n * n + 1;\n}\n\nexports.inOutQuint = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n * n;\n  return 0.5 * ((n -= 2) * n * n * n * n + 2);\n};\n\nexports.inSine = function(n){\n  return 1 - Math.cos(n * Math.PI / 2 );\n};\n\nexports.outSine = function(n){\n  return Math.sin(n * Math.PI / 2);\n};\n\nexports.inOutSine = function(n){\n  return .5 * (1 - Math.cos(Math.PI * n));\n};\n\nexports.inExpo = function(n){\n  return 0 == n ? 0 : Math.pow(1024, n - 1);\n};\n\nexports.outExpo = function(n){\n  return 1 == n ? n : 1 - Math.pow(2, -10 * n);\n};\n\nexports.inOutExpo = function(n){\n  if (0 == n) return 0;\n  if (1 == n) return 1;\n  if ((n *= 2) < 1) return .5 * Math.pow(1024, n - 1);\n  return .5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n};\n\nexports.inCirc = function(n){\n  return 1 - Math.sqrt(1 - n * n);\n};\n\nexports.outCirc = function(n){\n  return Math.sqrt(1 - (--n * n));\n};\n\nexports.inOutCirc = function(n){\n  n *= 2\n  if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n  return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n};\n\nexports.inBack = function(n){\n  var s = 1.70158;\n  return n * n * (( s + 1 ) * n - s);\n};\n\nexports.outBack = function(n){\n  var s = 1.70158;\n  return --n * n * ((s + 1) * n + s) + 1;\n};\n\nexports.inOutBack = function(n){\n  var s = 1.70158 * 1.525;\n  if ( ( n *= 2 ) < 1 ) return 0.5 * ( n * n * ( ( s + 1 ) * n - s ) );\n  return 0.5 * ( ( n -= 2 ) * n * ( ( s + 1 ) * n + s ) + 2 );\n};\n\nexports.inBounce = function(n){\n  return 1 - exports.outBounce(1 - n);\n};\n\nexports.outBounce = function(n){\n  if ( n < ( 1 / 2.75 ) ) {\n    return 7.5625 * n * n;\n  } else if ( n < ( 2 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 1.5 / 2.75 ) ) * n + 0.75;\n  } else if ( n < ( 2.5 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 2.25 / 2.75 ) ) * n + 0.9375;\n  } else {\n    return 7.5625 * ( n -= ( 2.625 / 2.75 ) ) * n + 0.984375;\n  }\n};\n\nexports.inOutBounce = function(n){\n  if (n < .5) return exports.inBounce(n * 2) * .5;\n  return exports.outBounce(n * 2 - 1) * .5 + .5;\n};\n\n// aliases\n\nexports['in-quad'] = exports.inQuad;\nexports['out-quad'] = exports.outQuad;\nexports['in-out-quad'] = exports.inOutQuad;\nexports['in-cube'] = exports.inCube;\nexports['out-cube'] = exports.outCube;\nexports['in-out-cube'] = exports.inOutCube;\nexports['in-quart'] = exports.inQuart;\nexports['out-quart'] = exports.outQuart;\nexports['in-out-quart'] = exports.inOutQuart;\nexports['in-quint'] = exports.inQuint;\nexports['out-quint'] = exports.outQuint;\nexports['in-out-quint'] = exports.inOutQuint;\nexports['in-sine'] = exports.inSine;\nexports['out-sine'] = exports.outSine;\nexports['in-out-sine'] = exports.inOutSine;\nexports['in-expo'] = exports.inExpo;\nexports['out-expo'] = exports.outExpo;\nexports['in-out-expo'] = exports.inOutExpo;\nexports['in-circ'] = exports.inCirc;\nexports['out-circ'] = exports.outCirc;\nexports['in-out-circ'] = exports.inOutCirc;\nexports['in-back'] = exports.inBack;\nexports['out-back'] = exports.outBack;\nexports['in-out-back'] = exports.inOutBack;\nexports['in-bounce'] = exports.inBounce;\nexports['out-bounce'] = exports.outBounce;\nexports['in-out-bounce'] = exports.inOutBounce;\n","export default \"<ng-container *ngIf=\\\"isLoading; else cardTemplate\\\">\\n    <div class=\\\"cc d-flex justify-content-center align-items-center\\\" [ngStyle]=\\\"{ backgroundColor: '#e5e5e5' }\\\">\\n        <ion-spinner name=\\\"dots\\\"></ion-spinner>\\n    </div>\\n</ng-container>\\n<ng-template #cardTemplate>\\n    <ng-container *ngIf=\\\"backgroundImage; else noBackground\\\">\\n        <div class=\\\"cc\\\" [ngClass]=\\\"{ disabled: disabled }\\\" [ngStyle]=\\\"getBackgroundImageStyle()\\\"></div>\\n    </ng-container>\\n    <ng-template #noBackground>\\n        <div class=\\\"cc\\\" [ngClass]=\\\"{ disabled: disabled }\\\">\\n            <div class=\\\"cc-content\\\">\\n                <img [src]=\\\"getLogo()\\\" draggable=\\\"false\\\" class=\\\"cc-logo\\\" />\\n                <div class=\\\"cc-title\\\">{{ 'common.card-number' | translate }}</div>\\n                <div class=\\\"cc-digit\\\">{{ card?.maskedPan }}</div>\\n                <div class=\\\"cc-title\\\">{{ 'common.expires' | translate }}</div>\\n                <div class=\\\"cc-digit\\\">{{ card?.expiresAt || '2023-01-01' | date: 'MM/yy' }}</div>\\n            </div>\\n            <div class=\\\"cc-wave\\\"></div>\\n        </div>\\n    </ng-template>\\n</ng-template>\\n\";","export default \"<div class=\\\"close-btn bg-primary d-flex justify-content-center align-items-center\\\" (click)=\\\"dismiss()\\\">\\n    <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n</div>\\n<div *ngIf=\\\"!!details; else loading\\\" class=\\\"modal-card-body\\\" [ngStyle]=\\\"getBackgroundImageStyle()\\\">\\n    <div class=\\\"d-flex justify-content-end mb-2\\\">\\n        <img src=\\\"/img/icons/contactless.svg\\\" class=\\\"card-pay-logo\\\" />\\n    </div>\\n    <div class=\\\"card-text-heading card-text mt-xs-3 mt-lg-4\\\">Virtual Card</div>\\n    <copy-wrap [value]=\\\"details.unMaskedCardNumber\\\">\\n        <p class=\\\"card-number mb-1 text-monospace card-text\\\">{{ formatCardNumber(details.unMaskedCardNumber) }}</p>\\n    </copy-wrap>\\n    <div class=\\\"d-flex mb-2\\\">\\n        <div class=\\\"mr-4 d-flex\\\">\\n            <div class=\\\"text-uppercase text-monospace card-label card-text\\\">\\n                <div>{{ 'common.valid' | translate }}</div>\\n                <div>{{ 'common.thru' | translate }}</div>\\n            </div>\\n            <copy-wrap [value]=\\\"details.expiry\\\">\\n                <span class=\\\"ml-2 text-monospace card-details card-text\\\">{{ details.expiry }} </span>\\n            </copy-wrap>\\n        </div>\\n        <div class=\\\"mr-4 d-flex\\\">\\n            <div class=\\\"text-uppercase text-monospace card-label card-text\\\">\\n                <div>{{ 'common.security' | translate | lowercase }}</div>\\n                <div>{{ 'common.code' | translate | lowercase }}</div>\\n            </div>\\n            <copy-wrap [value]=\\\"details.cvv\\\">\\n                <span class=\\\"ml-2 text-monospace card-details card-text\\\">{{ details.cvv }}</span>\\n            </copy-wrap>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-between align-items-end limited-text-wrapper\\\">\\n        <span class=\\\"card-text-limited card-text\\\">{{ 'common.limited-use' | translate }}</span>\\n        <img *ngIf=\\\"!backgroundImage\\\" src=\\\"/img/icons/visa.svg\\\" class=\\\"img-sm text-muted mb-1\\\" />\\n    </div>\\n</div>\\n<ng-template #loading>\\n    <div class=\\\"d-flex justify-content-center align-items-center h-100\\\">\\n        <div class=\\\"card-details-loader d-flex justify-content-center align-items-center\\\">\\n            <ion-spinner color=\\\"primary\\\" name=\\\"dots\\\" color=\\\"light\\\"></ion-spinner>\\n        </div>\\n    </div>\\n</ng-template>\\n<div class=\\\"wave\\\" *ngIf=\\\"!backgroundImage\\\"></div>\\n\";","import { Injectable } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable, of } from 'rxjs'\nimport { SessionService, TokenScope } from '../services/session.service'\nimport { ConfirmPasswordModalComponent } from './confirm-password.modal'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SecurityCheckService {\n    constructor(private ngbModal: NgbModal, private session: SessionService) {}\n\n    /**\n     * Asks the user for permission to do something that requires a higher scope than basic\n     * Resolves if the check was successful or the permission is still granted from another request\n     * @param scope The required scope\n     */\n    public getScopePermission(scope: TokenScope): Observable<void> {\n        // Resolve if token has already the correct scope\n        if (this.session.hasTokenScope(scope)) {\n            return of(undefined)\n        }\n        const modal = this.ngbModal.open(ConfirmPasswordModalComponent, {\n            windowClass: 'modal-primary security-check-modal',\n        })\n        ;(modal.componentInstance as ConfirmPasswordModalComponent).scope = scope\n        return new Observable(observer => {\n            modal.result\n                .then(() => {\n                    observer.next()\n                    observer.complete()\n                })\n                .catch(() => {\n                    observer.complete()\n                })\n        })\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, ElementRef, OnDestroy, OnInit } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { tap } from 'rxjs/operators'\nimport { ToastrService } from '../../../common/services/toastr.service'\n\nconst ease = require('ease-component')\nconst scroll = require('scroll')\n\ninterface Terms {\n    name: string\n    versionId: string\n    description: string\n}\n\n@Component({\n    selector: 'card-order-terms',\n    templateUrl: 'card-order-terms.component.html',\n})\nexport class CardOrderTermsComponent implements OnInit, OnDestroy {\n    public terms: Terms\n    public isDown = false\n    public viewOnly = false\n    public isLoaded = false\n\n    private modalContainer: HTMLElement\n\n    constructor(\n        private element: ElementRef,\n        private toastr: ToastrService,\n        private http: HttpClient,\n        public modal: NgbActiveModal,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.modalContainer = this.element.nativeElement.querySelector('.card-terms-container') as HTMLElement\n        this.modalContainer.addEventListener('scroll', this.scrollHandler)\n\n        this.http\n            .get<Terms>('/nium/terms')\n            .pipe(\n                tap(terms => {\n                    this.terms = terms\n                    this.isLoaded = true\n                    setTimeout(() => {\n                        this.scrollHandler()\n                    })\n                })\n            )\n            .subscribe(() => undefined)\n    }\n\n    public ngOnDestroy(): void {\n        this.modalContainer.removeEventListener('scroll', this.scrollHandler)\n    }\n\n    public scrollDown(): void {\n        scroll.top(this.modalContainer, this.modalContainer.scrollHeight - this.modalContainer.clientHeight, {\n            duration: 1000,\n            ease: ease.inOutExpo,\n        })\n    }\n\n    public accept(): void {\n        if (!this.isDown) {\n            this.toastr.warning(\n                this.translate.instant('common.please-scroll-to-bottom'),\n                this.translate.instant('common.terms')\n            )\n            return\n        }\n        this.modal.close({ ...this.terms, accept: true })\n    }\n\n    private scrollHandler = () => {\n        // 25px threshold\n        if (\n            this.isLoaded &&\n            !this.isDown &&\n            this.modalContainer.scrollTop >= this.modalContainer.scrollHeight - this.modalContainer.offsetHeight - 25\n        ) {\n            setTimeout(() => {\n                this.isDown = true\n            })\n        }\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport BigNumber from 'bignumber.js'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { FeeType, ICurrency, IFee, IUser, RPCResult, Transaction, TransactionMethod } from '../../api-interfaces'\nimport { Currency } from '../../models/accounting/currency.model'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { calculateFee } from '../../transactions.mixins'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeeService {\n    constructor(private http: HttpClient) {}\n\n    public fetch(fee: {\n        type: FeeType\n        method: TransactionMethod\n        currency: ICurrency\n        amount?: string\n        user?: IUser | null\n    }): Observable<Fee | null> {\n        return this.http\n            .post<RPCResult<IFee | null>>(\n                '/fees',\n                {\n                    id: Math.round(Math.random() * 10000),\n                    jsonrpc: '2.0',\n                    method: 'findByPrimaryAttributes',\n                    params: {\n                        type: fee.type,\n                        method: fee.method,\n                        amount: fee.amount ? fee.amount : '1',\n                        currency: fee.currency,\n                        user: fee.user,\n                    },\n                },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json-rpc',\n                    }),\n                }\n            )\n            .pipe(map(response => (response.result ? new Fee(response.result) : null)))\n    }\n\n    public determineFee(currentTransaction: Partial<Transaction>, fee: Partial<Fee> | null): Partial<Transaction> {\n        const transaction = currentTransaction\n        const fixedFee =\n            fee && fee.fixed && transaction.currency\n                ? Currency.convert(fee.fixed, fee.currency!, transaction.currency)\n                : '0'\n        const relativeFee = fee && fee.relative ? fee.relative : '0'\n\n        transaction.fixedFee = fixedFee || undefined\n        transaction.relativeFee = relativeFee || undefined\n\n        if (fee && fee.min) {\n            const minFee = Currency.convert(fee.min, fee.currency!, transaction.currency!)\n            if (new BigNumber(calculateFee(transaction as Transaction)).isLessThan(minFee)) {\n                transaction.fixedFee = minFee\n                transaction.relativeFee = '0'\n            }\n        }\n        if (fee && fee.max) {\n            const maxFee = Currency.convert(fee.max, fee.currency!, transaction.currency!)\n            if (new BigNumber(calculateFee(transaction as Transaction)).isGreaterThan(maxFee)) {\n                transaction.fixedFee = maxFee\n                transaction.relativeFee = '0'\n            }\n        }\n        return transaction\n    }\n}\n","import { Component } from '@angular/core'\nimport { faCalendarAlt } from '@fortawesome/pro-regular-svg-icons'\nimport { ModalController } from '@ionic/angular'\nimport { NgbCalendar, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap'\nimport { Subscription } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { ICard } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\n@Component({\n    selector: 'app-modal-download-transactions',\n    templateUrl: './modal-download-transactions.page.html',\n    styleUrls: ['../card-view-modal.scss'],\n})\nexport class ModalDownloadTransactionsPage {\n    public item: ICard\n    public isLoading = false\n\n    public faCalendarAlt = faCalendarAlt\n\n    public fromDate: NgbDateStruct\n    public toDate: NgbDateStruct\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private modalController: ModalController,\n        public calendar: NgbCalendar\n    ) {\n        this.fromDate = { year: new Date().getFullYear(), month: 1, day: 1 }\n        this.toDate = this.calendar.getToday()\n    }\n\n    public downloadReport(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    flatMap(user =>\n                        this.session.createSignedUrl(`/users/${user.id}/cards/${this.item.id}/transactions/report`)\n                    )\n                )\n                .subscribe(signedUrl => {\n                    window.open(\n                        `${signedUrl}&from=${this.parseNgbdate(this.fromDate)}&to=${this.parseNgbdate(this.toDate)}`,\n                        '_blank',\n                        'noopener'\n                    )\n                    this.dismiss()\n                })\n        )\n\n        this.session.createSignedUrl(`/cards/${this.item.id}/transactions/report`)\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    protected parseNgbdate(date: NgbDateStruct | null): string {\n        return `${date?.year}-${date?.month.toLocaleString('en-US', {\n            minimumIntegerDigits: 2,\n            useGrouping: false,\n        })}-${date?.day.toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}`\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { faEye } from '@fortawesome/pro-solid-svg-icons'\nimport { AlertController, ModalController } from '@ionic/angular'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { parseISO } from 'date-fns'\nimport { cloneDeep } from 'lodash'\nimport { merge, Observable, of, Subject, Subscription } from 'rxjs'\nimport { finalize, map, switchMap, tap, withLatestFrom } from 'rxjs/operators'\nimport { ICard, ICurrency, Paginated, Transaction, UserDetails, Wallet } from 'src/app/common/api-interfaces'\nimport { Currency } from 'src/app/common/models/accounting/currency.model'\nimport { ToastrService } from 'src/app/common/services/toastr.service'\nimport { CurrenciesQuery } from 'src/app/store/currencies/currencies.query'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { WalletsService } from 'src/app/store/wallets/wallets.service'\nimport { CardOrderTermsComponent } from 'src/app/user-cards/card-order/card-order-terms/card-order-terms.component'\nimport { environment } from 'src/environments/environment'\nimport { buildFileUrl } from '../file'\nimport { SecurityCheckService } from '../security-check/security-check.service'\nimport { SessionService } from '../services/session.service'\nimport { TransactionService } from '../services/transaction.service'\nimport { CardDetailsPage } from './card-details/card-details.page'\nimport { ModalChangePinPage } from './modal-change-pin/modal-change-pin.page'\nimport { ModalDownloadTransactionsPage } from './modal-download-transactions/modal-download-transactions.page'\nimport { ModalFeesPage } from './modal-fees/modal-fees.page'\nimport { ModalOffledgerPage } from './modal-offledger/modal-offledger.page'\nimport { ModalSwapPage } from './modal-swap/modal-swap.page'\nimport { ModalTopupPage } from './modal-topup/modal-topup.page'\nimport { ModalUnloadPage } from './modal-unload/modal-unload.page'\n\n@Component({\n    selector: 'app-card-view',\n    templateUrl: './card-view.page.html',\n    styleUrls: ['./card-view.page.scss'],\n})\nexport class CardViewPage implements OnInit, OnDestroy {\n    public activeTab: 'history' | 'topup' = 'history'\n    public transaction: Transaction = {\n        type: 'withdrawal',\n        method: 'card',\n        counterWallet: {\n            user: null,\n        },\n    } as Transaction\n    public item: ICard\n    public userDetails: UserDetails\n    public copy: Partial<ICard> = {}\n    public currencies: Currency[]\n    public balances$: Observable<any[]>\n    public balances: any[]\n    public transactions: any[] = []\n    public page = 1\n    public size = 5\n    public totalElements: number\n\n    public isFetching = false\n    public isBlockUnblockLoading = false\n    public faEye = faEye\n    public digitalCardArtWorkUrl: string | null\n\n    public fetchBalanceEvent = new Subject<void>()\n    public wallets$: Observable<(Wallet & { value: string })[]>\n    public appName = environment.appName\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private http: HttpClient,\n        private toastr: ToastrService,\n        private walletsQuery: WalletsQuery,\n        private modalController: ModalController,\n        public alertController: AlertController,\n        private securityCheckService: SecurityCheckService,\n        private ngbModal: NgbModal,\n        private currenciesQuery: CurrenciesQuery,\n        private walletsService: WalletsService,\n        private transactionService: TransactionService,\n        public translate: TranslateService\n    ) {\n        this.wallets$ = this.walletsQuery.filteredBalances$\n    }\n\n    public ngOnInit(): void {\n        this.http.get<ICard>(`/cards/${this.item.id}`).subscribe(card => {\n            if (card) {\n                Object.assign(this.item, card)\n                this.copy = cloneDeep(this.item)\n                this.transaction.card = card\n\n                if (card.cardholder?.cardProgram?.digitalCardArtwork) {\n                    this.digitalCardArtWorkUrl = buildFileUrl(card.cardholder.cardProgram.digitalCardArtwork)\n                }\n            }\n        })\n\n        this.http\n            .get<Paginated<ICurrency>>('/currencies', { params: { limit: 100 + '' } })\n            .pipe(map(response => response.data.map(payload => new Currency(payload))))\n            .subscribe(currencies => {\n                this.currencies = currencies\n            })\n\n        this.http.get<UserDetails>(`/users/${this.item.cardholder?.id}/details`).subscribe(details => {\n            this.userDetails = details\n        })\n\n        this.balances$ = merge(of(undefined), this.fetchBalanceEvent).pipe(\n            switchMap(() => this.http.get<any[]>(`/cards/${this.item.id}/balance`)),\n            map(balance => balance.filter(currency => currency.balance !== 0)),\n            map(balance => (balance.length ? balance : [{ curSymbol: 'USD', balance: 0 }])),\n            withLatestFrom(this.currenciesQuery.selectAll()),\n            map(([balance, availableCurrencies]) =>\n                balance.map(b => {\n                    Object.assign(b, {\n                        balanceInUsd: new BigNumber(b.balance)\n                            .times(\n                                availableCurrencies.find(currency => currency.code === b.curSymbol)?.exchangeRate || 1\n                            )\n                            .toNumber(),\n                    })\n\n                    return b\n                })\n            ),\n            tap(balance => {\n                this.balances = balance.sort((prev: any, next: any) => next.balanceInUsd - prev.balanceInUsd)\n            })\n        )\n\n        this.copy = cloneDeep(this.item)\n        this.fetchTransactions()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public fetchTransactions(event?: any, reset?: boolean): void {\n        this.isFetching = true\n        if (reset) {\n            this.page = 1\n        }\n\n        this.http\n            .get<any>(`/cards/${this.item.id}/transactions`, {\n                params: { page: this.page - 1 + '', size: this.size + '' },\n            })\n            .subscribe(response => {\n                this.isFetching = false\n                if (response.content) {\n                    const transactions = response.content.map((content: any) => ({\n                        ...content,\n                        createdAt: parseISO(content.createdAt),\n                    }))\n                    this.totalElements = response.totalElements || '0'\n                    this.transactions = reset ? transactions : this.transactions.concat(transactions)\n                    this.page += 1\n                }\n                if (event) {\n                    event.target.complete()\n                }\n            })\n    }\n\n    public getCurrencyByCode(code: string): Currency | undefined {\n        return this.currencies.find(currency => currency.code === code)\n    }\n\n    public async blockUnblockCard(checked: boolean): Promise<void> {\n        const alert = await this.alertController.create({\n            header: checked\n                ? this.translate.instant('common.block-your-card')\n                : this.translate.instant('common.unblock-your-card'),\n            message: this.translate.instant('common.you-can-revert'),\n            buttons: [\n                {\n                    text: this.translate.instant('common.cancel'),\n                    role: 'cancel',\n                },\n                {\n                    text: checked ? this.translate.instant('common.block') : this.translate.instant('common.unblock'),\n                    cssClass: 'text-danger',\n                    handler: async () => {\n                        this.isBlockUnblockLoading = true\n                        this.http\n                            .put<ICard>(`/cards/${this.item.id}/status`, {\n                                status: checked ? 'block' : 'unblock',\n                            })\n                            .pipe(\n                                finalize(() => {\n                                    this.isBlockUnblockLoading = false\n                                })\n                            )\n                            .subscribe(card => {\n                                Object.assign(this.item, card)\n                                this.copy = cloneDeep(this.item)\n                                this.transaction.card = card\n                                this.toastr.success(\n                                    `${this.translate.instant('common.card')} ${\n                                        checked\n                                            ? this.translate.instant('common.block')\n                                            : this.translate.instant('common.unblock')\n                                    }`\n                                )\n                            })\n                    },\n                },\n            ],\n        })\n        await alert.present()\n    }\n\n    public async presentTopupModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalTopupPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n                balances: this.balances,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.topup-completed'),\n                message: `${this.translate.instant(\n                    'common.you-successfully-topped-up'\n                )} ${data.destinationAmount.toFixed(2)} ${data.destinationCurrencyCode}.`,\n                buttons: ['OK'],\n            })\n            await alert.present()\n            this.refreshBalance()\n        })\n    }\n\n    public async openChangePinModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalChangePinPage,\n            cssClass: 'modal-change-pin',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.pin-updated'),\n                message: this.translate.instant('common.you-successfully-update-card-pin'),\n                buttons: ['OK'],\n            })\n            await alert.present()\n        })\n    }\n\n    public async openFeesModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalFeesPage,\n            cssClass: 'modal-fees',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n            },\n        })\n        await modal.present()\n    }\n\n    public async openDownloadReportModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalDownloadTransactionsPage,\n            cssClass: 'modal-download-report',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n            },\n        })\n        await modal.present()\n    }\n\n    public async presentCardDetails(): Promise<void> {\n        if (this.item.type !== 'virtual') {\n            return\n        }\n        this.subscriptions.add(\n            this.securityCheckService.getScopePermission('banking').subscribe(async () => {\n                const modal = await this.modalController.create({\n                    component: CardDetailsPage,\n                    cssClass: 'modal-card',\n                    presentingElement: await this.modalController.getTop(),\n                    componentProps: {\n                        item: this.item,\n                        backgroundImage: this.digitalCardArtWorkUrl,\n                    },\n                })\n                await modal.present()\n            })\n        )\n    }\n\n    public openViewNiumTermsModal(): void {\n        const termsModal = this.ngbModal.open(CardOrderTermsComponent, {\n            windowClass: 'modal-primary view-terms-modal',\n            backdrop: 'static',\n            backdropClass: 'view-terms-modal',\n        })\n        termsModal.componentInstance.viewOnly = true\n    }\n\n    public async offLedgerModal(type: string): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalOffledgerPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n                balances: this.balances,\n                type,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            if (!data) {\n                return\n            }\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n            let dismissHeader\n            let dismissMessage\n            if (type === 'load') {\n                dismissHeader = this.translate.instant('common.topup-completed')\n                dismissMessage = `this.translate.instant(\n                    'common.you-successfully-topped-up'\n                ) (off ledger) ${data.destinationAmount.toFixed(2)} ${data.destinationCurrencyCode}.`\n            } else {\n                dismissHeader = this.translate.instant('common.unload-card-completed')\n                dismissMessage = `${this.translate.instant('common.unload-card')} ${data.message}`\n            }\n\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: dismissHeader,\n                message: dismissMessage,\n                buttons: ['OK'],\n            })\n            await alert.present()\n        })\n    }\n\n    public async openUnloadModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalUnloadPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                card: this.item,\n                balances: this.balances,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.unload-card-completed'),\n                message: `${this.translate.instant('common.unload-card')} ${data.message}`,\n                buttons: ['OK'],\n            })\n            await alert.present()\n            this.refreshBalance()\n        })\n    }\n\n    public async openSwapModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalSwapPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n                balances: this.balances,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n\n            if (!data) {\n                return\n            }\n            console.log(data)\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.exchange-completed'),\n                message: `${data.destinationAmount} ${data.destinationCurrencyCode} ${this.translate.instant(\n                    'common.has-been-credited'\n                )}`,\n                buttons: ['OK'],\n            })\n            await alert.present()\n            this.refreshBalance()\n        })\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    public formatPan(pan: string): string {\n        return `${pan.slice(0, 4)} ${pan.slice(4, 8)} ${pan.slice(8, 12)} ${pan.slice(12)}`\n    }\n\n    public getDescription(tx: any): string {\n        if (tx.merchantName) {\n            switch (tx.transactionType) {\n                case 'Auto_Sweep':\n                    return `<b>${this.translate.instant('card-view.auto-sweep')}</b>: ` + tx.merchantName\n                case 'Fee_Debit':\n                    let label = ''\n                    switch (tx.labels.feeName) {\n                        case 'INTERNATIONAL_ATM_FEE':\n                        case 'ATM_FEE':\n                            label = 'ATM Fee'\n                            break\n                        case 'TRANSACTION_MARKUP':\n                            label = `${this.translate.instant('card-view.fx-fee')}`\n                            break\n                        case 'ATM_DECLINE_FEE':\n                            label = 'ATM Decline Fee'\n                            break\n                        case 'NON_ATM_DECLINE_FEE':\n                            label = this.translate.instant('common.decline-fee')\n                            break\n                        case 'ECOM_FEE':\n                            label = `${this.translate.instant('card-view.ecommerce-fee')}`\n                            break\n                    }\n                    return label + ': ' + tx.merchantName\n                default:\n                    return tx.merchantName\n            }\n        }\n        switch (tx.transactionType) {\n            case 'Fee_Debit':\n            case 'Fee_Waiver':\n                let label = ''\n                switch (tx.labels.feeName) {\n                    case 'ACCOUNT_MAINTENANCE_FEE':\n                        label = `${this.translate.instant('card-view.maintenance-fee')}`\n                        break\n                    case 'ACCOUNT_INACTIVE_FEE':\n                        label = `${this.translate.instant('card-view.inactivity-fee')}`\n                        break\n                }\n                return label\n        }\n        if (tx.transactionType.includes('Wallet_Credit_Mode_Prefund')) {\n            return `${this.translate.instant('card-view.topup-from-wallet')}`\n        }\n        if (tx.transactionType.includes('Wallet_Refund')) {\n            return `${this.translate.instant('card-view.unload-from-card')}`\n        }\n        if (tx.transactionType.includes('Wallet_Fund_Transfer')) {\n            return `${this.translate.instant('common.currency-exchange')}`\n        }\n        return tx.transactionType\n    }\n\n    public getTransactionColor(tx: any): string {\n        if (tx.status === 'Declined') {\n            return 'medium'\n        }\n        switch (tx.transactionType) {\n            case 'Auto_Sweep':\n                return 'primary'\n            case 'Fee_Debit':\n                return 'danger-alt'\n            case 'Wallet_Fund_Transfer':\n                return 'primary'\n            default:\n                return tx.debit ? 'danger' : 'success'\n        }\n    }\n\n    public getTransactionIcon(tx: any): string {\n        switch (tx.transactionType) {\n            case 'Auto_Sweep':\n                return 'swap-horizontal'\n            case 'Fee_Debit':\n                return 'arrow-down-circle'\n            case 'Wallet_Fund_Transfer':\n                return 'swap-horizontal-outline'\n            default:\n                return tx.debit ? 'arrow-down' : 'arrow-up'\n        }\n    }\n\n    private refreshBalance(): void {\n        this.walletsService.fetch()\n        this.transactionService.changeEvent.emit()\n    }\n}\n","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.currency-exchange' | translate}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #transactionForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': transactionForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"topupCard()\\\"\\n            novalidate\\n        >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"sourceCurrencyCode\\\">{{ 'common.source' | translate }} ({{ 'common.card' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"swap.sourceCurrencyCode\\\"\\n                        (ngModelChange)=\\\"getExchangeRate(); filterDestinationCurrencies()\\\"\\n                        name=\\\"sourceCurrencyCode\\\"\\n                        [items]=\\\"filteredCardBalances\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"false\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                        [compareWith]=\\\"compareCurrencies\\\"\\n                        bindValue=\\\"curSymbol\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item.curSymbol }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ item.balance | amount: 2 }} {{ item.curSymbol }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item.curSymbol }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ item.balance | amount: 2 }} {{ item.curSymbol }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                        </div>\\n                        <a href (click)=\\\"useMax(); $event.preventDefault()\\\">{{ 'common.use-max' | translate }}</a>\\n                    </div>\\n                    <input\\n                        type=\\\"number\\\"\\n                        class=\\\"form-control form-control-lg\\\"\\n                        id=\\\"amount\\\"\\n                        name=\\\"amount\\\"\\n                        [placeholder]=\\\"'0.00'\\\"\\n                        [(ngModel)]=\\\"swap.amount\\\"\\n                        #amount=\\\"ngModel\\\"\\n                        required\\n                    />\\n                    <div *ngIf=\\\"amount.invalid && (transactionForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"destination\\\">{{ 'common.destination' | translate }} ({{ 'common.source' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"swap.destinationCurrencyCode\\\"\\n                        (ngModelChange)=\\\"getExchangeRate()\\\"\\n                        name=\\\"destinationCurrencyCode\\\"\\n                        [items]=\\\"filteredDestinationCurrencies\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"false\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"isForexTopup()\\\">\\n                            <td>{{ 'common.exchange-rate' | translate | sentenceCase }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <b\\n                                    ><span *ngIf=\\\"!isGettingExchangeRate; else spinner\\\"\\n                                        >1 {{ swap.sourceCurrencyCode }} = {{ exchangeRate | amount: 4 }} {{swap.destinationCurrencyCode}}</span\\n                                    ></b\\n                                >\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.amount-to-be-credited' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateAmount() | amount: 2 }} {{ swap.destinationCurrencyCode }}</b></td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading || isGettingExchangeRate\\\">\\n                <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { faCopy } from '@fortawesome/pro-light-svg-icons'\nimport { ModalController } from '@ionic/angular'\nimport { ICard } from '../../api-interfaces'\n\ninterface CardDetails {\n    unMaskedCardNumber: string\n    cvv: string\n    expiry: string\n}\n\n@Component({\n    selector: 'card-details',\n    templateUrl: 'card-details.page.html',\n})\nexport class CardDetailsPage implements OnInit {\n    public item: ICard\n    public details: CardDetails\n\n    public faCopy = faCopy\n    public backgroundImage: string\n\n    constructor(private modalController: ModalController, private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.http.get<CardDetails>(`/cards/${this.item.id}/details`).subscribe(details => (this.details = details))\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    public formatCardNumber(cardNumber: string): string {\n        return `${cardNumber.slice(0, 4)} ${cardNumber.slice(4, 8)} ${cardNumber.slice(8, 12)} ${cardNumber.slice(12)}`\n    }\n\n    public getBackgroundImageStyle() {\n        if (!this.backgroundImage) {\n            return\n        }\n        const styles = {\n            backgroundImage: 'url(' + this.backgroundImage + ')',\n            backgroundSize: 'cover',\n        }\n        return styles\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.terms-and-conditions' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'card-order-terms.you-must-accept-the-terms' | translate }}</div>\\n<div class=\\\"modal-body card-terms-container text-body\\\">\\n    <ng-container *ngIf=\\\"isLoaded; else loadingContent\\\">\\n        <div [innerHtml]=\\\"terms.description | safeHtml\\\"></div>\\n    </ng-container>\\n    <ng-template #loadingContent>\\n        <svg class=\\\"spinner spinner-dark\\\" viewBox=\\\"0 0 50 50\\\">\\n            <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"5\\\"></circle>\\n        </svg>\\n        <p class=\\\"mb-0 mt-5 text-center\\\">{{ 'common.loading-terms' | translate }}</p>\\n    </ng-template>\\n</div>\\n<div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n    <ng-container *ngIf=\\\"!viewOnly; else closeButton\\\">\\n        <button class=\\\"btn btn-link mr-md-auto mb-2 mb-md-0\\\" (click)=\\\"scrollDown()\\\">{{ 'common.scroll-to-bottom' | translate }}</button>\\n        <div class=\\\"d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"modal.dismiss()\\\">Decline</button>\\n            <button class=\\\"btn btn-primary btn-w-sm ml-1\\\" (click)=\\\"terms && accept()\\\" [disabled]=\\\"!isDown\\\">{{ 'common.accept' | translate }}</button>\\n        </div>\\n    </ng-container>\\n    <ng-template #closeButton>\\n        <div class=\\\"d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"modal.dismiss()\\\">{{ 'common.close' | translate }}</button>\\n        </div>\\n    </ng-template>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { pick } from 'lodash'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { ICardOrder } from 'src/app/common/api-interfaces'\nimport { SecurityCheckService } from 'src/app/common/security-check/security-check.service'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { ToastrService } from 'src/app/common/services/toastr.service'\nimport { CardOrderTermsComponent } from '../card-order/card-order-terms/card-order-terms.component'\n\n@Component({\n    selector: 'card-order-confirmation',\n    templateUrl: 'card-order-confirmation.component.html',\n})\nexport class CardOrderConfirmationComponent implements OnDestroy {\n    @ViewChild('cardOrderConfirmForm')\n    public cardOrderConfirmForm: NgForm\n\n    @Input()\n    public cardOrder: ICardOrder\n\n    public isLoading = false\n\n    private subscriptrions = new Subscription()\n\n    constructor(\n        public activeModal: NgbActiveModal,\n        private ngbModal: NgbModal,\n        private http: HttpClient,\n        private router: Router,\n        private securityCheckService: SecurityCheckService,\n        private toastr: ToastrService,\n        public session: SessionService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnDestroy(): void {\n        this.subscriptrions.unsubscribe()\n    }\n\n    public submit(): void {\n        if (!this.cardOrderConfirmForm.valid) {\n            return\n        }\n        this.subscriptrions.add(\n            this.securityCheckService.getScopePermission('banking').subscribe(() => {\n                this.ngbModal\n                    .open(CardOrderTermsComponent, {\n                        windowClass: 'modal-primary',\n                        backdrop: 'static',\n                    })\n                    .result.then(\n                        terms => {\n                            this.isLoading = true\n                            this.http\n                                .post<ICardOrder>('/card-orders', {\n                                    id: this.cardOrder.id,\n                                    type: this.cardOrder.type,\n                                    currency: { code: this.cardOrder.currency.code },\n                                    transaction: { currency: { code: this.cardOrder.currency.code } },\n                                    user: { id: this.cardOrder.user.id },\n                                    shippingAddress: this.cardOrder.shippingAddress,\n                                    terms: pick(terms, ['name', 'accept', 'versionId']),\n                                })\n                                .pipe(\n                                    finalize(() => {\n                                        this.isLoading = false\n                                    })\n                                )\n                                .subscribe(async () => {\n                                    this.toastr.success(\n                                        this.translate.instant('card-order-confirmation.card-order-confirmed')\n                                    )\n                                    this.activeModal.close()\n                                    if (!this.router.url.includes('admin')) {\n                                        await this.router.navigate(['/cards/orders'])\n                                    }\n                                })\n                        },\n                        () => undefined\n                    )\n            })\n        )\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { IonicModule } from '@ionic/angular'\nimport { CommonModule } from '../common.module'\nimport { CardDummyComponent } from './card-dummy.component'\n\n@NgModule({\n    declarations: [CardDummyComponent],\n    imports: [CommonModule, IonicModule],\n    exports: [CardDummyComponent],\n})\nexport class CardDummyModule {}\n","var E_NOSCROLL = new Error('Element already at target scroll position')\nvar E_CANCELLED = new Error('Scroll cancelled')\nvar min = Math.min\nvar ms = Date.now\n\nmodule.exports = {\n  left: make('scrollLeft'),\n  top: make('scrollTop')\n}\n\nfunction make (prop) {\n  return function scroll (el, to, opts, cb) {\n    opts = opts || {}\n\n    if (typeof opts == 'function') cb = opts, opts = {}\n    if (typeof cb != 'function') cb = noop\n\n    var start = ms()\n    var from = el[prop]\n    var ease = opts.ease || inOutSine\n    var duration = !isNaN(opts.duration) ? +opts.duration : 350\n    var cancelled = false\n\n    return from === to ?\n      cb(E_NOSCROLL, el[prop]) :\n      requestAnimationFrame(animate), cancel\n\n    function cancel () {\n      cancelled = true\n    }\n\n    function animate (timestamp) {\n      if (cancelled) return cb(E_CANCELLED, el[prop])\n\n      var now = ms()\n      var time = min(1, ((now - start) / duration))\n      var eased = ease(time)\n\n      el[prop] = (eased * (to - from)) + from\n\n      time < 1 ?\n        requestAnimationFrame(animate) :\n        requestAnimationFrame(function () {\n          cb(null, el[prop])\n        })\n    }\n  }\n}\n\nfunction inOutSine (n) {\n  return 0.5 * (1 - Math.cos(Math.PI * n))\n}\n\nfunction noop () {}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { forkJoin, of, Subject, Subscription } from 'rxjs'\nimport { finalize, map, switchMap, take, tap } from 'rxjs/operators'\nimport { CurrenciesQuery } from 'src/app/store/currencies/currencies.query'\nimport { ICard, ICurrency, IUser } from '../../api-interfaces'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { FeeService } from '../../services/accounting/fee.service'\nimport { SessionService } from '../../services/session.service'\nimport { GetExchangeRateResponse } from '../modal-topup/modal-topup.page'\n\ninterface NiumRefundWalletResponse {\n    message: string\n    systemReferenceNumber: string\n}\n\ntype NiumCurrency = 'AUD' | 'CAD' | 'EUR' | 'GBP' | 'HKD' | 'JPY' | 'SGD' | 'USD'\n\n@Component({\n    selector: 'app-modal-unload',\n    templateUrl: './modal-unload.page.html',\n    styleUrls: ['../card-view-modal.scss'],\n})\nexport class ModalUnloadPage implements OnInit, OnDestroy {\n    @Input()\n    public card: ICard\n    @Input()\n    public balances: any[]\n\n    public sourceCurrencyCode: NiumCurrency = 'USD'\n    public destinationCurrency: ICurrency\n    public amount: string\n\n    public exchangeRate = '1'\n    public unloadCardFee: Fee | null\n    public niumCurrencies: NiumCurrency[] = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n    public isLoading = false\n    public isFetching = false\n\n    @ViewChild('unloadForm')\n    public unloadForm: NgForm\n\n    public fetchEvent = new Subject<void>()\n    private subscription = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        private feeService: FeeService,\n        private currenciesQuery: CurrenciesQuery\n    ) {}\n\n    public ngOnInit() {\n        this.currenciesQuery\n            .selectEntity('USD')\n            .pipe(take(1))\n            .subscribe(usd => {\n                if (usd) {\n                    this.destinationCurrency = usd\n                }\n            })\n        this.subscription.add(\n            this.fetchEvent\n                .pipe(\n                    tap(() => {\n                        this.isFetching = true\n                    }),\n                    switchMap(() =>\n                        forkJoin([\n                            this.feeService.fetch({\n                                type: 'deposit',\n                                method: 'card',\n                                currency: { code: this.destinationCurrency.code } as ICurrency,\n                                user: { id: this.session.user.id } as IUser,\n                            }),\n                            this.sourceCurrencyCode !== this.destinationCurrency.code\n                                ? this.http\n                                      .post<GetExchangeRateResponse>(\n                                          `/card-programs/${this.card.cardholder?.cardProgram?.id}/get-exchange-rate`,\n                                          {\n                                              destinationCurrencyCode: this.destinationCurrency.code,\n                                              sourceCurrencyCode: this.sourceCurrencyCode,\n                                          }\n                                      )\n                                      .pipe(map(response => response.exchangeRate))\n                                : of('1'),\n                        ]).pipe(\n                            finalize(() => {\n                                this.isFetching = false\n                            })\n                        )\n                    )\n                )\n                .subscribe(([fee, exchangeRate]) => {\n                    this.unloadCardFee = fee\n                    this.exchangeRate = exchangeRate\n                })\n        )\n        this.fetchEvent.next()\n    }\n\n    public ngOnDestroy() {\n        this.subscription.unsubscribe()\n    }\n\n    public async submit(): Promise<void> {\n        if (this.unloadForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        this.http\n            .post<NiumRefundWalletResponse>(`/cards/${this.card.id}/refund`, {\n                sourceCurrencyCode: this.sourceCurrencyCode,\n                amount: this.amount + '',\n                destinationCurrencyCode: this.destinationCurrency.code,\n            })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    public getCardBalance(code: string): string {\n        const found = this.balances.find(b => b.curSymbol === code)\n        if (found) {\n            return found.balance + ''\n        }\n        return '0.00'\n    }\n\n    public calculateFee(): string {\n        let relativeFeeAmount = new BigNumber(0)\n        if (this.unloadCardFee?.relative) {\n            relativeFeeAmount = new BigNumber(this.amount || 0)\n                .times(this.exchangeRate)\n                .times(this.unloadCardFee.relative || 0)\n\n            if (this.unloadCardFee.min && relativeFeeAmount.isLessThan(this.unloadCardFee.min)) {\n                relativeFeeAmount = new BigNumber(this.unloadCardFee.min)\n            } else if (this.unloadCardFee.max && relativeFeeAmount.isGreaterThan(this.unloadCardFee.max)) {\n                relativeFeeAmount = new BigNumber(this.unloadCardFee.max)\n            }\n        }\n        return new BigNumber(this.unloadCardFee?.fixed || 0).plus(relativeFeeAmount).toFixed(2, 1)\n    }\n\n    public calculateAmount(): string {\n        if (!this.amount) {\n            return '0'\n        }\n        return new BigNumber(this.amount).times(this.exchangeRate).minus(this.calculateFee()).toFixed(2, 1)\n    }\n}\n","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\n.background {\\n  background: #21325b;\\n  min-height: 420px;\\n  width: 100%;\\n  position: fixed;\\n  top: 0;\\n}\\n\\nion-fab-button {\\n  --box-shadow: none;\\n  border-radius: 50%;\\n}\\n\\nion-fab-button.bg-primary {\\n  --background: #2d4c89;\\n  --color: var(--ion-color-primary);\\n}\\n\\nion-fab-list {\\n  right: 6px;\\n}\\n\\nion-fab.change-pin {\\n  border-radius: 50%;\\n  right: 60px !important;\\n}\\n\\n.dropdown-menu.show {\\n  margin: 3.125rem -79px 0 !important;\\n}\\n\\n.dropdown-toggle::after {\\n  display: none !important;\\n}\\n\\n.top-card {\\n  color: #fff;\\n  padding: 1.5rem 1.5rem 0 1.5rem;\\n}\\n\\n.top-card .balances {\\n  min-height: 70px;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.top-card .balances .loader {\\n  min-height: 120px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.top-card .data {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n}\\n\\n.top-card .data ul {\\n  -webkit-padding-start: 0 !important;\\n          padding-inline-start: 0 !important;\\n  -webkit-margin-before: 0 !important;\\n          margin-block-start: 0 !important;\\n  -webkit-margin-after: 0 !important;\\n          margin-block-end: 0 !important;\\n}\\n\\n.top-card .data ul li {\\n  list-style: none;\\n}\\n\\n.top-card .data ul li .title {\\n  font-weight: 400;\\n  font-size: 11px;\\n  text-transform: uppercase;\\n  opacity: 0.7;\\n}\\n\\n.top-card .data ul li p {\\n  font-weight: 500;\\n  font-size: 17px;\\n}\\n\\n.top-card .pan {\\n  font-weight: 500;\\n  font-size: 20px;\\n  letter-spacing: 1px;\\n  text-align: center;\\n  padding: 1rem 0 !important;\\n}\\n\\n.top-card h1 {\\n  margin: 2.25rem 0;\\n  font-size: 2.25rem;\\n  font-weight: 400;\\n}\\n\\n.top-card ion-segment ion-segment-button {\\n  --indicator-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n.top-card .primary-actions {\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n\\n.top-card .primary-actions ion-col {\\n  padding-top: 0 !important;\\n}\\n\\n.top-card .primary-actions ion-button {\\n  --background: rgba(66, 245, 93, 0.2);\\n  --border-radius: 12px !important;\\n  --box-shadow: none;\\n  --color: var(--ion-color-success);\\n  --border-checked: red !important;\\n  height: 50px !important;\\n}\\n\\n.top-card .custom-actions {\\n  margin: 4px 2px;\\n}\\n\\n.top-card .custom-actions .btn {\\n  letter-spacing: 0.06em;\\n  line-height: 12px;\\n  font-size: 12px;\\n  height: 50px !important;\\n}\\n\\n.top-card .success-actions {\\n  background: rgba(66, 135, 245, 0.3);\\n  color: var(--ion-color-secondary);\\n  border-top-left-radius: 12px;\\n  border-bottom-left-radius: 12px;\\n}\\n\\n.top-card .success-actions:hover {\\n  background: rgba(66, 135, 245, 0.5);\\n}\\n\\n.top-card .danger-actions {\\n  background: rgba(245, 66, 99, 0.3);\\n  color: var(--ion-color-danger);\\n  border-top-right-radius: 12px;\\n  border-bottom-right-radius: 12px;\\n}\\n\\n.top-card .danger-actions:hover {\\n  background: rgba(245, 66, 99, 0.5);\\n}\\n\\n.section-list {\\n  background-color: #fff;\\n  border-top-left-radius: 1.25rem;\\n  border-top-right-radius: 1.25rem;\\n  overflow: hidden;\\n  margin-top: 1rem;\\n}\\n\\n.section-list ion-item {\\n  --background: #fff;\\n  --border-color: transparent;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  border-bottom: 1px solid #dfe7f5;\\n}\\n\\n.section-list ion-item:last-child {\\n  border-bottom: 0;\\n}\\n\\n.section-list .thumb {\\n  background-color: #dfe7f5;\\n  width: 42px;\\n  height: 42px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  color: white;\\n  font-size: 1.5rem;\\n  border-radius: 50%;\\n  opacity: 0.9;\\n}\\n\\n.section-list .thumb.primary {\\n  background-color: var(--ion-color-primary-tint);\\n}\\n\\n.section-list .thumb.success {\\n  background-color: var(--ion-color-success-tint);\\n}\\n\\n.section-list .thumb.warning {\\n  background-color: var(--ion-color-warning-tint);\\n}\\n\\n.section-list .thumb.danger {\\n  background-color: #d4374c;\\n}\\n\\n.section-list .thumb.danger-alt {\\n  background-color: #ce6a59;\\n}\\n\\n.section-list .thumb.medium {\\n  background-color: var(--ion-color-medium-tint);\\n}\\n\\n.section-list h5 {\\n  color: #ee5a55;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NhcmQtdmlldy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsTUFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUNFO0VBQ0UscUJBQUE7RUFDQSxpQ0FBQTtBQUNKOztBQUdBO0VBQ0UsVUFBQTtBQUFGOztBQUlFO0VBQ0Usa0JBQUE7RUFDQSxzQkFBQTtBQURKOztBQUtBO0VBQ0UsbUNBQUE7QUFGRjs7QUFLQTtFQUNFLHdCQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0VBQ0EsK0JBQUE7QUFGRjs7QUFJRTtFQUNFLGdCQUFBO0VBQ0EscUJBQUE7QUFGSjs7QUFJSTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFGTjs7QUFNRTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0FBSko7O0FBTUk7RUFDRSxtQ0FBQTtVQUFBLGtDQUFBO0VBQ0EsbUNBQUE7VUFBQSxnQ0FBQTtFQUNBLGtDQUFBO1VBQUEsOEJBQUE7QUFKTjs7QUFPSTtFQUNFLGdCQUFBO0FBTE47O0FBT007RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUFMUjs7QUFRTTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQU5SOztBQVdFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLDBCQUFBO0FBVEo7O0FBWUU7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFWSjs7QUFjSTtFQUNFLDJDQUFBO0FBWk47O0FBZ0JFO0VBQ0UsbUJBQUE7RUFDQSxrQkFBQTtBQWRKOztBQWVJO0VBQ0UseUJBQUE7QUFiTjs7QUFlSTtFQUNFLG9DQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtFQUNBLGlDQUFBO0VBQ0EsZ0NBQUE7RUFDQSx1QkFBQTtBQWJOOztBQWlCRTtFQUNFLGVBQUE7QUFmSjs7QUFpQkk7RUFDRSxzQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLHVCQUFBO0FBZk47O0FBbUJFO0VBQ0UsbUNBQUE7RUFDQSxpQ0FBQTtFQUNBLDRCQUFBO0VBQ0EsK0JBQUE7QUFqQko7O0FBbUJJO0VBQ0UsbUNBQUE7QUFqQk47O0FBcUJFO0VBQ0Usa0NBQUE7RUFDQSw4QkFBQTtFQUNBLDZCQUFBO0VBQ0EsZ0NBQUE7QUFuQko7O0FBcUJJO0VBQ0Usa0NBQUE7QUFuQk47O0FBd0JBO0VBQ0Usc0JBQUE7RUFDQSwrQkFBQTtFQUNBLGdDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQXJCRjs7QUFzQkU7RUFDRSxrQkFBQTtFQUNBLDJCQUFBO0VBQ0EsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLGdDQUFBO0FBcEJKOztBQXNCSTtFQUNFLGdCQUFBO0FBcEJOOztBQXVCRTtFQUNFLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQXJCSjs7QUF1Qkk7RUFDRSwrQ0FBQTtBQXJCTjs7QUF3Qkk7RUFDRSwrQ0FBQTtBQXRCTjs7QUF5Qkk7RUFDRSwrQ0FBQTtBQXZCTjs7QUEwQkk7RUFDRSx5QkFBQTtBQXhCTjs7QUEyQkk7RUFDRSx5QkFBQTtBQXpCTjs7QUE0Qkk7RUFDRSw4Q0FBQTtBQTFCTjs7QUE4QkU7RUFDRSxjQUFBO0VBQ0EsU0FBQTtBQTVCSiIsImZpbGUiOiJjYXJkLXZpZXcucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQ6ICMyMTMyNWI7IC8vIGxpbmVhci1ncmFkaWVudCgzNDZkZWcsIHJnYmEoOCwgMTgsIDQzLCAxKSAwJSwgcmdiYSg1OSwgNzIsIDE0MiwgMSkgMTAwJSk7IC8vICMwNjBmMjUgICAjM2I0ODhlXG4gIG1pbi1oZWlnaHQ6IDQyMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG59XG5cbmlvbi1mYWItYnV0dG9uIHtcbiAgLS1ib3gtc2hhZG93OiBub25lO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG5cbiAgJi5iZy1wcmltYXJ5IHtcbiAgICAtLWJhY2tncm91bmQ6ICMyZDRjODk7XG4gICAgLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICB9XG59XG5cbmlvbi1mYWItbGlzdCB7XG4gIHJpZ2h0OiA2cHg7XG59XG5cbmlvbi1mYWIge1xuICAmLmNoYW5nZS1waW4ge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICByaWdodDogNjBweCAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5kcm9wZG93bi1tZW51LnNob3cge1xuICBtYXJnaW46IDMuMTI1cmVtIC03OXB4IDAgIWltcG9ydGFudDtcbn1cblxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi50b3AtY2FyZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxLjVyZW0gMS41cmVtIDAgMS41cmVtO1xuXG4gIC5iYWxhbmNlcyB7XG4gICAgbWluLWhlaWdodDogNzBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG5cbiAgICAubG9hZGVyIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDEyMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gIH1cblxuICAuZGF0YSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgIHVsIHtcbiAgICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwICFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IDAgIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbi1ibG9jay1lbmQ6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICB1bCBsaSB7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgICAudGl0bGUge1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIG9wYWNpdHk6IDAuNztcbiAgICAgIH1cblxuICAgICAgcCB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAucGFuIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxcmVtIDAgIWltcG9ydGFudDtcbiAgfVxuXG4gIGgxIHtcbiAgICBtYXJnaW46IDIuMjVyZW0gMDtcbiAgICBmb250LXNpemU6IDIuMjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuXG4gIGlvbi1zZWdtZW50IHtcbiAgICBpb24tc2VnbWVudC1idXR0b24ge1xuICAgICAgLS1pbmRpY2F0b3ItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICB9XG4gIH1cblxuICAucHJpbWFyeS1hY3Rpb25zIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgICBpb24tY29sIHtcbiAgICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIGlvbi1idXR0b24ge1xuICAgICAgLS1iYWNrZ3JvdW5kOiByZ2JhKDY2LCAyNDUsIDkzLCAwLjIpO1xuICAgICAgLS1ib3JkZXItcmFkaXVzOiAxMnB4ICFpbXBvcnRhbnQ7XG4gICAgICAtLWJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XG4gICAgICAtLWJvcmRlci1jaGVja2VkOiByZWQgIWltcG9ydGFudDtcbiAgICAgIGhlaWdodDogNTBweCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuXG4gIC5jdXN0b20tYWN0aW9ucyB7XG4gICAgbWFyZ2luOiA0cHggMnB4O1xuXG4gICAgLmJ0biB7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMC4wNmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEycHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxuICAuc3VjY2Vzcy1hY3Rpb25zIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDY2LCAxMzUsIDI0NSwgMC4zKTtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTJweDtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxMnB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDY2LCAxMzUsIDI0NSwgMC41KTtcbiAgICB9XG4gIH1cblxuICAuZGFuZ2VyLWFjdGlvbnMge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjQ1LCA2NiwgOTksIDAuMyk7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMnB4O1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMnB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI0NSwgNjYsIDk5LCAwLjUpO1xuICAgIH1cbiAgfVxufVxuXG4uc2VjdGlvbi1saXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMS4yNXJlbTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEuMjVyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIGlvbi1pdGVtIHtcbiAgICAtLWJhY2tncm91bmQ6ICNmZmY7XG4gICAgLS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmctdG9wOiAwLjVyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RmZTdmNTtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuICAudGh1bWIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZmU3ZjU7XG4gICAgd2lkdGg6IDQycHg7XG4gICAgaGVpZ2h0OiA0MnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIG9wYWNpdHk6IDAuOTtcblxuICAgICYucHJpbWFyeSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeS10aW50KTtcbiAgICB9XG5cbiAgICAmLnN1Y2Nlc3Mge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MtdGludCk7XG4gICAgfVxuXG4gICAgJi53YXJuaW5nIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci13YXJuaW5nLXRpbnQpO1xuICAgIH1cblxuICAgICYuZGFuZ2VyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkNDM3NGM7XG4gICAgfVxuXG4gICAgJi5kYW5nZXItYWx0IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjZTZhNTk7XG4gICAgfVxuXG4gICAgJi5tZWRpdW0ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS10aW50KTtcbiAgICB9XG4gIH1cblxuICBoNSB7XG4gICAgY29sb3I6ICNlZTVhNTU7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG4iXX0= */\";"]}