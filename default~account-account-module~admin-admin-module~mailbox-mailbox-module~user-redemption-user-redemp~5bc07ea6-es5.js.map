{"version":3,"sources":["webpack:///src/app/common/list-v2.component.ts"],"names":["Scope","ListV2Component","http","ngbModal","changeDetector","route","router","session","scope","DEFAULT","search","limitOpts","offset","count","queryParams","searchEvent","paginationEvent","isFetching","isFilterOptionsCollapsed","formatDate","faPlus","faSearch","faChevronUp","faChevronDown","faDownload","faCaretDown","defaultLimit","defaultOrder","defaultQuery","subscriptions","updateEvent","limit","order","apiQuery","property","key","itemsStream","mergeFindEvents","pipe","find","err","next","response","body","meta","page","routeParams","undefined","perPage","map","item","join","Object","keys","param","length","encodeQueryParam","changeState","fill","Array","data","mapItem","detectChanges","queryParamMap","subscribe","params","has","get","decodeURIComponent","getAll","split","decodeQueryParam","unsubscribe","apiUrl","observe","generateListParams","override","set","append","replace","encoded","value","_","options","formComponent","Error","modal","open","backdrop","windowClass","componentInstance","onSave","close","onDelete","add","headers","Accept","responseType","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","link","document","createElement","href","contentDisposition","download","substring","indexOf","click","setTimeout","revokeObjectURL","toggle","index","splice","push","select","orderElement","query","model","scroll","scrollY","navigate","relativeTo","queryParamsHandling","scrollTo","decoded","q","op","isArray","selector","changeDetection","OnPush","template"],"mappings":"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","file":"default~account-account-module~admin-admin-module~mailbox-mailbox-module~user-redemption-user-redemp~5bc07ea6-es5.js","sourcesContent":["import { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http'\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faSearch } from '@fortawesome/pro-regular-svg-icons'\nimport { faCaretDown, faChevronDown, faChevronUp, faDownload, faPlus } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap'\nimport formatDate from 'date-fns/format'\nimport { find, findIndex, isEqual, last, matches } from 'lodash'\nimport { BehaviorSubject, merge, Observable, of, Subject, Subscription, throwError } from 'rxjs'\nimport { catchError, debounceTime, map, switchMap, tap } from 'rxjs/operators'\nimport { Paginated } from './api-interfaces'\nimport { SessionService } from './services/session.service'\n\nexport enum Scope {\n    DEFAULT = 'default',\n}\n\nexport interface Query {\n    [param: string]: { [operator: string]: string | string[] }\n}\n\n/**\n * Base class for list controllers.\n */\n@Component({\n    selector: 'undef-list-v2', // this is required by angular but we don't want it to be used accidentally\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: '',\n})\nexport class ListV2Component<T> implements OnInit, OnDestroy {\n    public scope: string = Scope.DEFAULT\n    public page: number\n    public order: string[][]\n    public search = ''\n    public itemsStream: Observable<T[]>\n    public limitOpts: number[] = [5, 8, 10, 12, 15, 20, 50]\n    public limit: number\n    public offset = 0\n    public count = 0\n    public fill: undefined[]\n    public queryParams: Query = {}\n    public searchEvent = new Subject<void>()\n    public paginationEvent = new Subject<void>()\n    public isFetching = new BehaviorSubject<boolean>(false)\n    public isFilterOptionsCollapsed = true\n\n    public formatDate = formatDate\n\n    public faPlus = faPlus\n    public faSearch = faSearch\n    public faChevronUp = faChevronUp\n    public faChevronDown = faChevronDown\n    public faDownload = faDownload\n    public faCaretDown = faCaretDown\n\n    public apiUrl: string\n    public apiQuery?: string[]\n    public defaultLimit = this.limitOpts[2]\n    public defaultOrder: string[][] = [['createdAt', 'DESC']]\n    public defaultQuery: Query = {}\n    /**\n     * The template to use for the edit/create dialog.\n     * The scope inherits from the current scope and gets passed `item` (the item to edit/create) as a scope variable\n     */\n    public formComponent?: any\n\n    protected model?: new (...args: any[]) => T\n    protected subscriptions = new Subscription()\n    protected updateEvent = new Subject<void>()\n\n    constructor(\n        protected http: HttpClient,\n        protected ngbModal: NgbModal,\n        protected changeDetector: ChangeDetectorRef,\n        protected route: ActivatedRoute,\n        public router: Router,\n        public session: SessionService\n    ) {}\n\n    public ngOnInit(): void {\n        this.limit = this.defaultLimit\n        this.order = this.defaultOrder\n        if (this.apiQuery) {\n            for (const property of this.apiQuery) {\n                this.queryParams[property] = {}\n                if (this.defaultQuery && this.defaultQuery[property]) {\n                    // eslint-disable-next-line guard-for-in\n                    for (const key in this.defaultQuery[property]) {\n                        this.queryParams[property][key] = this.defaultQuery[property][key]\n                    }\n                }\n            }\n        }\n        this.itemsStream = this.mergeFindEvents().pipe(\n            switchMap(() => this.find()),\n            catchError(err => {\n                this.isFetching.next(false)\n                return throwError(err)\n            }),\n            tap(response => {\n                this.count = response.body!.meta.count\n                this.page = this.offset / this.limit + 1\n                const routeParams: { [K: string]: string | string[] | undefined } = {\n                    page: this.page !== 1 ? this.page + '' : undefined,\n                    perPage: this.limit !== this.defaultLimit ? this.limit + '' : undefined,\n                    order: !isEqual(this.order, this.defaultOrder) ? this.order.map(item => item.join(':')) : undefined,\n                    search: this.search || undefined,\n                    scope: this.scope !== Scope.DEFAULT ? this.scope : undefined,\n                }\n                for (const param of Object.keys(this.queryParams)) {\n                    if (Object.keys(this.queryParams[param]).length > 0) {\n                        routeParams[param] = !isEqual(this.queryParams[param], this.defaultQuery[param])\n                            ? this.encodeQueryParam(this.queryParams[param])\n                            : undefined\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.changeState(routeParams)\n            }),\n            tap(response => {\n                this.fill = new Array(this.limit - response.body!.data.length)\n            }),\n            map(response => response.body!.data.map(item => this.mapItem(item))),\n            tap(() => {\n                this.changeDetector.detectChanges()\n                this.isFetching.next(false)\n            })\n        )\n        this.route.queryParamMap.subscribe(params => {\n            if (params.has('perPage')) {\n                this.limit = ~~params.get('perPage')!\n            }\n            if (params.has('page')) {\n                this.offset = (~~params.get('page')! - 1) * this.limit\n            }\n            if (!this.page) {\n                this.page = 1\n            }\n            if (params.has('search')) {\n                this.search = decodeURIComponent(params.get('search')!)\n            }\n            if (params.has('scope')) {\n                this.scope = decodeURIComponent(params.get('scope')!) as Scope\n            }\n            if (params.has('order')) {\n                this.order = params.getAll('order').map(item => item.split(':'))\n            }\n            for (const key of Object.keys(this.queryParams)) {\n                if (params.has(key)) {\n                    this.queryParams[key] = this.decodeQueryParam(params.getAll(key))\n                    // Expand filter options if custom filter is set\n                    this.isFilterOptionsCollapsed = false\n                }\n            }\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public find(): Observable<HttpResponse<Paginated<T>>> {\n        this.isFetching.next(true)\n        return this.http.get<Paginated<T>>(this.apiUrl, {\n            observe: 'response',\n            params: this.generateListParams(),\n        })\n    }\n\n    public generateListParams(override: { limit?: number } = {}): HttpParams {\n        let params = new HttpParams().set('limit', (override.limit || this.limit) + '').set('offset', this.offset + '')\n        if (this.order) {\n            for (const item of this.order) {\n                params = params.append('order', item.join(':'))\n            }\n        }\n        if (this.search) {\n            // the + sign is already encoded for space, should actually be a plus though\n            params = params.set('search', this.search.replace('+', '%2B'))\n        }\n        if (this.scope && this.scope !== Scope.DEFAULT) {\n            params = params.set('scope', this.scope)\n        }\n        for (const param of Object.keys(this.queryParams)) {\n            const encoded = this.encodeQueryParam(this.queryParams[param])\n            for (const value of encoded) {\n                params = params.append(param, value)\n            }\n        }\n        return params\n    }\n\n    /** Modal: Read, update and delete */\n    public showForm(_: MouseEvent, item: Partial<T>, options: NgbModalOptions = {}): void {\n        if (!this.formComponent) {\n            throw new Error('No form-template given in controller.')\n        }\n        const modal = this.ngbModal.open(this.formComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n            ...options,\n        })\n        modal.componentInstance.item = this.mapItem(item)\n        if (modal.componentInstance.onSave) {\n            modal.componentInstance.onSave.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n        if (modal.componentInstance.onDelete) {\n            modal.componentInstance.onDelete.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n    }\n\n    public requestExport(): void {\n        this.subscriptions.add(\n            this.http\n                .get(this.apiUrl, {\n                    params: this.generateListParams({ limit: 1000 }).delete('offset'),\n                    headers: new HttpHeaders({\n                        Accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    }),\n                    observe: 'response',\n                    responseType: 'blob',\n                })\n                .subscribe(response => {\n                    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(response.body)\n                    } else {\n                        const data = window.URL.createObjectURL(response.body)\n                        const link = document.createElement('a')\n                        link.href = data\n                        const contentDisposition = response.headers.get('Content-Disposition')\n                        link.download = contentDisposition\n                            ? contentDisposition.substring(\n                                  contentDisposition.indexOf('filename=') + 9,\n                                  contentDisposition.length - 1\n                              )\n                            : 'export.xlsx'\n                        link.click()\n                        setTimeout(() => {\n                            // For Firefox it is necessary to delay revoking the ObjectURL\n                            window.URL.revokeObjectURL(data)\n                        }, 100)\n                    }\n                })\n        )\n    }\n\n    /** Select specified page */\n    public select(page?: number): void {\n        if (typeof page !== 'undefined') {\n            this.page = page\n        }\n        this.offset = (this.page - 1) * this.limit\n        this.paginationEvent.next()\n    }\n\n    /**\n     * Change the sorting order\n     * @param order Sequelize Order syntax\n     * @param toggle Whether to toggle the order instead of replacing\n     */\n    public sort(order: string[], toggle = false): void {\n        // TODO: Allow order functions to be additive\n        if (typeof this.order === 'string') {\n            return\n        }\n        // Find out if order for that attribute is active already\n        const index = findIndex(this.order, matches(order))\n        // if is already selected, toggle\n        if (index === -1 || last(this.order[index]) === 'DESC') {\n            order = [...order, 'ASC']\n        } else {\n            order = [...order, 'DESC']\n        }\n\n        if (!toggle) {\n            // Replace whole order\n            this.order = order.length > 0 ? [order] : this.defaultOrder\n        } else {\n            if (index !== -1) {\n                // If sorting for this attribute is active\n                if (order.length === 0) {\n                    // If the same icon is clicked three times, remove it\n                    this.order.splice(index, 1)\n                } else {\n                    // If it was clicked twice, swap the direction\n                    this.order[index] = order\n                }\n            } else {\n                // If not active, add new order criteria\n                this.order.push(order)\n            }\n        }\n        this.select(1)\n    }\n\n    public isActiveSorting(order: string[]): boolean {\n        return !!find(this.order, matches(order))\n    }\n\n    public getSortingDirection(order: string[]): string | null | undefined {\n        const orderElement = find(this.order, matches(order))\n        return last(orderElement)\n    }\n\n    public isActiveQuery(query: Query): boolean {\n        return isEqual(this.queryParams, query)\n    }\n\n    public getDefaultQuery(): Query {\n        return this.defaultQuery\n    }\n\n    protected mergeFindEvents(): Observable<void> {\n        return merge(of(undefined), this.searchEvent.pipe(debounceTime(600)), this.paginationEvent, this.updateEvent)\n    }\n\n    protected mapItem(item: any): T {\n        return this.model ? new this.model(item) : item\n    }\n\n    protected async changeState(queryParams: { [K: string]: string | string[] | undefined }): Promise<void> {\n        const scroll = window.scrollY\n        await this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams,\n            queryParamsHandling: 'merge',\n        })\n        window.scrollTo(0, scroll)\n    }\n\n    private decodeQueryParam(query: string[]): { [operator: string]: string | string[] } {\n        const decoded: { [operator: string]: string | string[] } = {}\n        for (const q of query) {\n            const [op, value] = q.split(':')\n            decoded[op] = value.split(',')\n        }\n        return decoded\n    }\n\n    private encodeQueryParam(query: { [operator: string]: string | string[] }): string[] {\n        const encoded: string[] = []\n        for (const op of Object.keys(query)) {\n            const value = query[op]\n            if (!value || (Array.isArray(value) && value.length === 0)) {\n                continue\n            }\n            encoded.push(`${op}:${Array.isArray(value) ? value.join(',') : value}`)\n        }\n        return encoded\n    }\n}\n"]}