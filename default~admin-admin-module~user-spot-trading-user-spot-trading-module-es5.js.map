{"version":3,"sources":["webpack:///src/app/common/spot-trading/spot-trading-form.component.html","webpack:///src/app/common/spot-trading/spot-trading.module.ts","webpack:///src/app/common/spot-trading/spot-trading-form.component.ts","webpack:///node_modules/ngx-trend/__ivy_ngcc__/fesm2015/ngx-trend.js","webpack:///src/app/common/spot-trading/spot-trading-feed.component.html","webpack:///src/app/common/spot-trading/spot-trading-quote-modal.component.html","webpack:///src/app/common/spot-trading/spot-trading.component.scss","webpack:///src/app/common/spot-trading/spot-trading-quote-modal.component.ts","webpack:///src/app/common/spot-trading/spot-trading-feed.component.ts"],"names":["SpotTradingModule","declarations","exports","imports","SpotTradingFormComponent","http","session","toastr","walletsService","ngbModal","isUserSelectAllowed","onExecuteTrade","instruments","copy","side","instrument","isLoading","userAutocomplete","usersStream","pipe","search","get","params","set","results","map","user","post","userId","id","subscribe","response","openQuoteModal","trade","success","spotTradeForm","form","markAsUntouched","fetch","next","modal","open","windowClass","backdrop","component","componentInstance","onExecute","close","executeTrade","parts","split","slice","selector","template","_c0","TrendComponent__svg_svg_0__svg_defs_1__svg_stop_2_Template","rf","ctx","g_r4","$implicit","idx","offset","stopColor","TrendComponent__svg_svg_0__svg_defs_1_Template","ctx_r1","gradientId","gradientTrimmed","_c1","a0","a1","a2","autoDrawDuration","autoDrawEasing","lineLength","_c2","value","TrendComponent__svg_svg_0_Template","ctx_r0","svgWidth","svgHeight","stroke","strokeWidth","strokeLinecap","viewBox","preserveAspectRatio","gradient","length","animationState","pathStroke","d","normalize","min","max","scaleMin","scaleMax","moveTo","to","from","radius","Math","sqrt","x","y","unitVector","getDistanceBetween","p1","p2","pow","checkForCollinearPoints","p3","buildLinearPath","data","reduce","path","point","index","isFirstInstruction","instruction","buildSmoothPath","firstPoint","otherPoints","prev","isCollinear","distanceFromPrev","distanceFromNext","threshold","isTooCloseForRadius","radiusForPoint","before","after","join","generateId","round","random","normalizeDataset","minX","maxX","minY","maxY","boundariesX","boundariesY","normalizedData","TrendComponent","autoDraw","padding","plainValues","viewBoxWidth","width","viewBoxHeight","height","root","location","href","hash","undefined","reverse","val","normalizedValues","setTimeout","pathEl","nativeElement","getTotalLength","smooth","ɵfac","TrendComponent_Factory","t","ɵcmp","type","selectors","viewQuery","TrendComponent_Query","_t","first","inputs","features","decls","vars","consts","TrendComponent_Template","directives","encapsulation","animation","display","ctorParameters","propDecorators","args","ngDevMode","animations","TrendModule","TrendModule_Factory","ɵmod","ɵinj","ngJitMode","SpotTradingQuoteModalComponent","activeModal","confirmation","expiry","Date","validUntil","countdown","begin","price","times","quantity","toFixed","event","action","dismiss","show","title","text","confirmClass","showCancel","SpotTradingFeedComponent","stats","name","symbol","faArrowAltToBottom","faArrowAltFromBottom","rates","ticker","percent_change_24h","percent_change_7d","trend_7d","current_price","spread","getPrice"],"mappings":"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","file":"default~admin-admin-module~user-spot-trading-user-spot-trading-module-es5.js","sourcesContent":["export default \"<form #spotTradeForm=\\\"ngForm\\\" (ngSubmit)=\\\"requestQuote()\\\" autocomplete=\\\"false\\\" novalidate>\\n    <div *ngIf=\\\"isUserSelectAllowed\\\" class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\">{{ 'common.user' | translate }}</label>\\n        <ng-select\\n            name=\\\"user\\\"\\n            [placeholder]=\\\"'common.select-user' | translate\\\"\\n            [(ngModel)]=\\\"user\\\"\\n            bindValue=\\\"user\\\"\\n            #userInput=\\\"ngModel\\\"\\n            [items]=\\\"usersStream | async\\\"\\n            [typeahead]=\\\"userAutocomplete\\\"\\n            [clearable]=\\\"false\\\"\\n            required\\n        >\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                    <user-display *ngIf=\\\"item\\\" [user]=\\\"item.user\\\"></user-display>\\n                    <small *ngIf=\\\"item.user\\\" class=\\\"text-gray ml-1\\\">{{ item.user.email }}</small>\\n                </div>\\n            </ng-template>\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                    <user-avatar *ngIf=\\\"item\\\" [user]=\\\"item.user\\\" size=\\\"sm\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n                    <div class=\\\"w-100\\\">\\n                        <ng-container *ngIf=\\\"item.user\\\">\\n                            <div>{{ item.user.name }}</div>\\n                            <small class=\\\"text-gray\\\">{{ item.user.email }}</small>\\n                        </ng-container>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </ng-select>\\n        <div *ngIf=\\\"userInput.invalid && (spotTradeForm.submitted || userInput.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\" for=\\\"instrument\\\">{{ 'common.instrument' | translate }}</label>\\n        <ng-select\\n            class=\\\"ng-select-lg\\\"\\n            name=\\\"instrument\\\"\\n            [placeholder]=\\\"'common.select-instrument' | translate\\\"\\n            [items]=\\\"instruments\\\"\\n            [searchable]=\\\"false\\\"\\n            [clearable]=\\\"false\\\"\\n            [(ngModel)]=\\\"copy.instrument\\\"\\n            #instrument=\\\"ngModel\\\"\\n            required\\n        >\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">{{ buildCurrencyPair(item) }}</ng-template>\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">{{ buildCurrencyPair(item) }}</ng-template>\\n        </ng-select>\\n        <div *ngIf=\\\"instrument.invalid && (spotTradeForm.submitted || instrument.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"instrument?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\">{{ 'common.side' | translate }}</label>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"custom-control custom-radio btn btn-outline-danger btn-lg bg-transparent\\\" (click)=\\\"copy.side = 'sell'\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"side-sell\\\" name=\\\"side\\\" value=\\\"sell\\\" [(ngModel)]=\\\"copy.side\\\" />\\n                    <label class=\\\"custom-control-label text-danger font-weight-normal\\\" for=\\\"side-sell\\\">{{\\n                        'common.sell' | translate | uppercase\\n                    }}</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <div class=\\\"custom-control custom-radio btn btn-outline-primary btn-lg bg-transparent\\\" (click)=\\\"copy.side = 'buy'\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"side-buy\\\" name=\\\"side\\\" value=\\\"buy\\\" [(ngModel)]=\\\"copy.side\\\" />\\n                    <label class=\\\"custom-control-label text-primary font-weight-normal\\\" for=\\\"side-buy\\\">{{\\n                        'common.buy' | translate | uppercase\\n                    }}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\" for=\\\"amount\\\">{{ 'common.amount' | translate }}</label>\\n        <div class=\\\"input-group\\\">\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control form-control-lg\\\"\\n                id=\\\"amount\\\"\\n                name=\\\"amount\\\"\\n                [(ngModel)]=\\\"copy.quantity\\\"\\n                #amountInput=\\\"ngModel\\\"\\n                emptyToNull\\n                required\\n            />\\n            <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text font-lg\\\">{{ getBaseCurrency(copy.instrument) }}</span>\\n            </div>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" [ngClass]=\\\"{ loading: isLoading }\\\" [disabled]=\\\"isLoading\\\">\\n        {{ 'common.request-quote' | translate }}\\n    </button>\\n</form>\\n\";","import { NgModule } from '@angular/core'\nimport { CountdownModule } from 'ngx-countdown'\nimport { TrendModule } from 'ngx-trend'\nimport { CommonModule } from '../common.module'\nimport { SpotTradingFeedComponent } from './spot-trading-feed.component'\nimport { SpotTradingFormComponent } from './spot-trading-form.component'\nimport { SpotTradingQuoteModalComponent } from './spot-trading-quote-modal.component'\n\n@NgModule({\n    declarations: [SpotTradingFeedComponent, SpotTradingQuoteModalComponent, SpotTradingFormComponent],\n    exports: [SpotTradingFeedComponent, SpotTradingQuoteModalComponent, SpotTradingFormComponent],\n    imports: [CommonModule, TrendModule, CountdownModule],\n})\nexport class SpotTradingModule {}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { debounceTime, distinctUntilChanged, finalize, map, switchMap } from 'rxjs/operators'\nimport { WalletsService } from 'src/app/store/wallets/wallets.service'\nimport { ISpotTrade, IUser, SpotTradeInstrument } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\nimport { SpotTradingQuoteModalComponent } from './spot-trading-quote-modal.component'\n\n@Component({\n    selector: 'spot-trading-form',\n    templateUrl: 'spot-trading-form.component.html',\n})\nexport class SpotTradingFormComponent {\n    @Input()\n    isUserSelectAllowed = false\n    @Output()\n    public onExecuteTrade = new EventEmitter<void>()\n\n    public instruments: SpotTradeInstrument[] = ['BTCUSD.SPOT', 'ETHUSD.SPOT', 'LTCUSD.SPOT', 'USTUSD.SPOT']\n    public copy: Partial<ISpotTrade> = {\n        side: 'buy',\n        instrument: this.instruments[0],\n    }\n    public user: IUser\n    public isLoading = false\n\n    @ViewChild('spotTradeForm')\n    public spotTradeForm: NgForm\n\n    public userAutocomplete = new EventEmitter<string>()\n    public usersStream = this.userAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(search =>\n            this.http.get<IUser[]>('/users', {\n                params: new HttpParams().set('limit', '25').set('search', search),\n            })\n        ),\n        map(results => results.map(user => ({ user })))\n    )\n\n    constructor(\n        private http: HttpClient,\n        private session: SessionService,\n        private toastr: ToastrService,\n        private walletsService: WalletsService,\n        private ngbModal: NgbModal\n    ) {}\n\n    public requestQuote(): void {\n        this.isLoading = true\n        this.http\n            .post<ISpotTrade>('/spot-trades/request-for-quote', {\n                ...this.copy,\n                userId: this.user?.id ?? this.session.user.id,\n            })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.openQuoteModal(response)\n            })\n    }\n\n    public executeTrade(trade: ISpotTrade): void {\n        this.isLoading = true\n        this.http\n            .post<ISpotTrade>('/spot-trades', {\n                ...trade,\n                userId: this.user?.id ?? this.session.user.id,\n            })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(() => {\n                this.toastr.success('Trade executed')\n                if (this.spotTradeForm) {\n                    this.spotTradeForm.form.markAsUntouched()\n                }\n                this.copy = {\n                    side: trade.side,\n                    instrument: this.instruments[0],\n                }\n                this.walletsService.fetch()\n                this.onExecuteTrade.next()\n            })\n    }\n\n    public openQuoteModal(trade: any): void {\n        const modal = this.ngbModal.open(SpotTradingQuoteModalComponent, {\n            windowClass: trade.side === 'buy' ? 'modal-primary' : 'modal-danger',\n            backdrop: 'static',\n        })\n        const component = modal.componentInstance as SpotTradingQuoteModalComponent\n        component.trade = trade\n        component.onExecute.subscribe(() => {\n            modal.close()\n            this.executeTrade(trade)\n        })\n    }\n\n    public getBaseCurrency(instrument: SpotTradeInstrument | undefined): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument!.split('.')\n        return parts[0].slice(0, 3)\n    }\n\n    public buildCurrencyPair(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument.split('.')\n        return `${parts[0].slice(0, 3)} / ${parts[0].slice(3, 6)}`\n    }\n}\n","import { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/* eslint-disable no-restricted-properties */\n/** normalize\n * This lets us translate a value from one scale to another.\n *\n * @param value - Our initial value to translate\n * @param min - the current minimum value possible\n * @param max - the current maximum value possible\n * @param scaleMin - the min value of the scale we're translating to\n * @param scaleMax - the max value of the scale we're translating to\n * @returns the value on its new scale\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"pathEl\"];\nfunction TrendComponent__svg_svg_0__svg_defs_1__svg_stop_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"stop\");\n} if (rf & 2) {\n    const g_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"key\", g_r4.idx)(\"offset\", g_r4.offset)(\"stop-color\", g_r4.stopColor);\n} }\nfunction TrendComponent__svg_svg_0__svg_defs_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"defs\");\n    ɵngcc0.ɵɵelementStart(1, \"linearGradient\", 3);\n    ɵngcc0.ɵɵtemplate(2, TrendComponent__svg_svg_0__svg_defs_1__svg_stop_2_Template, 1, 3, \"stop\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r1.gradientId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.gradientTrimmed);\n} }\nconst _c1 = function (a0, a1, a2) { return { autoDrawDuration: a0, autoDrawEasing: a1, lineLength: a2 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction TrendComponent__svg_svg_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\");\n    ɵngcc0.ɵɵtemplate(1, TrendComponent__svg_svg_0__svg_defs_1_Template, 3, 2, \"defs\", 0);\n    ɵngcc0.ɵɵelement(2, \"path\", 1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"width\", ctx_r0.svgWidth)(\"height\", ctx_r0.svgHeight)(\"stroke\", ctx_r0.stroke)(\"stroke-width\", ctx_r0.strokeWidth)(\"stroke-linecap\", ctx_r0.strokeLinecap)(\"viewBox\", ctx_r0.viewBox)(\"preserveAspectRatio\", ctx_r0.preserveAspectRatio);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.gradient && ctx_r0.gradient.length);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@pathAnimaiton\", ɵngcc0.ɵɵpureFunction2(15, _c2, ctx_r0.animationState, ɵngcc0.ɵɵpureFunction3(11, _c1, ctx_r0.autoDrawDuration, ctx_r0.autoDrawEasing, ctx_r0.lineLength)));\n    ɵngcc0.ɵɵattribute(\"stroke\", ctx_r0.pathStroke)(\"d\", ctx_r0.d);\n} }\nfunction normalize(value, min, max, scaleMin = 0, scaleMax = 1) {\n    // If the `min` and `max` are the same value, it means our dataset is flat.\n    // For now, let's assume that flat data should be aligned to the bottom.\n    if (min === max) {\n        return scaleMin;\n    }\n    return scaleMin + (value - min) * (scaleMax - scaleMin) / (max - min);\n}\n/** moveTo\n * the coordinate that lies at a midpoint between 2 lines, based on the radius\n *\n * @param to - Our initial point\n * @param to.x - The x value of our initial point\n * @param to.y - The y value of our initial point\n * @param from - Our final point\n * @param from.x - The x value of our final point\n * @param from.y - The y value of our final point\n * @param radius - The distance away from the final point\n * @returns an object holding the x/y coordinates of the midpoint.\n */\nfunction moveTo(to, from, radius) {\n    const length = Math.sqrt((to.x - from.x) * (to.x - from.x) + (to.y - from.y) * (to.y - from.y));\n    const unitVector = { x: (to.x - from.x) / length, y: (to.y - from.y) / length };\n    return {\n        x: from.x + unitVector.x * radius,\n        y: from.y + unitVector.y * radius,\n    };\n}\n/** getDistanceBetween\n * Simple formula derived from pythagoras to calculate the distance between\n * 2 points on a plane.\n *\n * @param p1 - Our initial point\n * @param p1.x - The x value of our initial point\n * @param p1.y - The y value of our initial point\n * @param p2 - Our final point\n * @param p2.x - The x value of our final point\n * @param p2.y - The y value of our final point\n * @returns the distance between the points.\n */\nconst getDistanceBetween = (p1, p2) => Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n/** checkForCollinearPoints\n * Figure out if the midpoint fits perfectly on a line between the two others.\n *\n * @param p1 - Our initial point\n * @param p1.x - The x value of our initial point\n * @param p1.y - The y value of our initial point\n * @param p2 - Our mid-point\n * @param p2.x - The x value of our mid-point\n * @param p2.y - The y value of our mid-point\n * @param p3 - Our final point\n * @param p3.x - The x value of our final point\n * @param p3.y - The y value of our final point\n * @returns whether or not p2 sits on the line between p1 and p3.\n */\nconst checkForCollinearPoints = (p1, p2, p3) => (p1.y - p2.y) * (p1.x - p3.x) === (p1.y - p3.y) * (p1.x - p2.x);\n\nconst buildLinearPath = (data) => data.reduce((path, point, index) => {\n    // The very first instruction needs to be a \"move\".\n    // The rest will be a \"line\".\n    const isFirstInstruction = index === 0;\n    const instruction = isFirstInstruction ? 'M' : 'L';\n    return `${path}${instruction} ${point.x},${point.y}\\n`;\n}, '');\nfunction buildSmoothPath(data, radius) {\n    const [firstPoint, ...otherPoints] = data;\n    return otherPoints.reduce((path, point, index) => {\n        const next = otherPoints[index + 1];\n        const prev = otherPoints[index - 1] || firstPoint;\n        const isCollinear = next && checkForCollinearPoints(prev, point, next);\n        if (!next || isCollinear) {\n            // The very last line in the sequence can just be a regular line.\n            return `${path}\\nL ${point.x},${point.y}`;\n        }\n        const distanceFromPrev = getDistanceBetween(prev, point);\n        const distanceFromNext = getDistanceBetween(next, point);\n        const threshold = Math.min(distanceFromPrev, distanceFromNext);\n        const isTooCloseForRadius = threshold / 2 < radius;\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n        const before = moveTo(prev, point, radiusForPoint);\n        const after = moveTo(next, point, radiusForPoint);\n        return [\n            path,\n            `L ${before.x},${before.y}`,\n            `S ${point.x},${point.y} ${after.x},${after.y}`,\n        ].join('\\n');\n    }, `M ${firstPoint.x},${firstPoint.y}`);\n}\n\nconst generateId = () => Math.round(Math.random() * Math.pow(10, 16));\n\nfunction normalizeDataset(data, minX, maxX, minY, maxY) {\n    // For the X axis, we want to normalize it based on its index in the array.\n    // For the Y axis, we want to normalize it based on the element's value.\n    //\n    // X axis is easy: just evenly-space each item in the array.\n    // For the Y axis, we first need to find the min and max of our array,\n    // and then normalize those values between 0 and 1.\n    const boundariesX = { min: 0, max: data.length - 1 };\n    const boundariesY = { min: Math.min(...data), max: Math.max(...data) };\n    const normalizedData = data.map((point, index) => ({\n        x: normalize(index, boundariesX.min, boundariesX.max, minX, maxX),\n        y: normalize(point, boundariesY.min, boundariesY.max, minY, maxY),\n    }));\n    // According to the SVG spec, paths with a height/width of `0` can't have\n    // linear gradients applied. This means that our lines are invisible when\n    // the dataset is flat (eg. [0, 0, 0, 0]).\n    //\n    // The hacky solution is to apply a very slight offset to the first point of\n    // the dataset. As ugly as it is, it's the best solution we can find (there\n    // are ways within the SVG spec of changing it, but not without causing\n    // breaking changes).\n    if (boundariesY.min === boundariesY.max) {\n        normalizedData[0].y += 0.0001;\n    }\n    return normalizedData;\n}\n\nclass TrendComponent {\n    constructor() {\n        this.autoDraw = false;\n        this.autoDrawDuration = 2000;\n        this.autoDrawEasing = 'ease';\n        this.padding = 8;\n        this.radius = 10;\n        this.stroke = 'black';\n        this.strokeLinecap = '';\n        this.strokeWidth = 1;\n        this.gradient = [];\n        this.svgHeight = '25%';\n        this.svgWidth = '100%';\n        this.animationState = '';\n        this.id = generateId();\n        this.gradientId = `ngx-trend-vertical-gradient-${this.id}`;\n    }\n    ngOnChanges() {\n        // We need at least 2 points to draw a graph.\n        if (!this.data || this.data.length < 2) {\n            return;\n        }\n        // `data` can either be an array of numbers:\n        // [1, 2, 3]\n        // or, an array of objects containing a value:\n        // [{ value: 1 }, { value: 2 }, { value: 3 }]\n        //\n        // For now, we're just going to convert the second form to the first.\n        // Later on, if/when we support tooltips, we may adjust.\n        const plainValues = this.data.map(point => {\n            if (typeof point === 'number') {\n                return point;\n            }\n            return point.value;\n        });\n        // Our viewbox needs to be in absolute units, so we'll default to 300x75\n        // Our SVG can be a %, though; this is what makes it scalable.\n        // By defaulting to percentages, the SVG will grow to fill its parent\n        // container, preserving a 1/4 aspect ratio.\n        const viewBoxWidth = this.width || 300;\n        const viewBoxHeight = this.height || 75;\n        this.svgWidth = this.width || '100%';\n        this.svgHeight = this.height || '25%';\n        this.viewBox = `0 0 ${viewBoxWidth} ${viewBoxHeight}`;\n        const root = location.href.split(location.hash || '#')[0];\n        this.pathStroke =\n            this.gradient && this.gradient.length ? `url('${root}#${this.gradientId}')` : undefined;\n        this.gradientTrimmed = this.gradient\n            .slice()\n            .reverse()\n            .map((val, idx) => {\n            return {\n                idx,\n                stopColor: val,\n                offset: normalize(idx, 0, this.gradient.length - 1 || 1),\n            };\n        });\n        const normalizedValues = normalizeDataset(plainValues, this.padding, viewBoxWidth - this.padding, \n        // NOTE: Because SVGs are indexed from the top left, but most data is\n        // indexed from the bottom left, we're inverting the Y min/max.\n        viewBoxHeight - this.padding, this.padding);\n        if (this.autoDraw && this.animationState !== 'active') {\n            this.animationState = 'inactive';\n            setTimeout(() => {\n                this.lineLength = this.pathEl.nativeElement.getTotalLength();\n                this.animationState = 'active';\n            });\n        }\n        this.d = this.smooth\n            ? buildSmoothPath(normalizedValues, this.radius)\n            : buildLinearPath(normalizedValues);\n    }\n}\nTrendComponent.ɵfac = function TrendComponent_Factory(t) { return new (t || TrendComponent)(); };\nTrendComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TrendComponent, selectors: [[\"ngx-trend\"]], viewQuery: function TrendComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pathEl = _t.first);\n    } }, inputs: { autoDraw: \"autoDraw\", autoDrawDuration: \"autoDrawDuration\", autoDrawEasing: \"autoDrawEasing\", padding: \"padding\", radius: \"radius\", stroke: \"stroke\", strokeLinecap: \"strokeLinecap\", strokeWidth: \"strokeWidth\", gradient: \"gradient\", svgHeight: \"svgHeight\", svgWidth: \"svgWidth\", data: \"data\", smooth: \"smooth\", width: \"width\", height: \"height\", preserveAspectRatio: \"preserveAspectRatio\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[4, \"ngIf\"], [\"fill\", \"none\"], [\"pathEl\", \"\"], [\"x1\", \"0%\", \"y1\", \"0%\", \"x2\", \"0%\", \"y2\", \"100%\"], [4, \"ngFor\", \"ngForOf\"]], template: function TrendComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TrendComponent__svg_svg_0_Template, 4, 18, \"svg\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.data && ctx.data.length >= 2);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2, data: { animation: [\n            trigger('pathAnimaiton', [\n                state('inactive', style({ display: 'none' })),\n                transition('* => active', [\n                    style({ display: 'initial' }),\n                    // We do the animation using the dash array/offset trick\n                    // https://css-tricks.com/svg-line-animation-works/\n                    animate('{{ autoDrawDuration }}ms {{ autoDrawEasing }}', keyframes([\n                        style({\n                            'stroke-dasharray': '{{ lineLength }}px',\n                            'stroke-dashoffset': '{{ lineLength }}px'\n                        }),\n                        style({\n                            'stroke-dasharray': '{{ lineLength }}px',\n                            'stroke-dashoffset': 0\n                        }),\n                    ])),\n                    // One unfortunate side-effect of the auto-draw is that the line is\n                    // actually 1 big dash, the same length as the line itself. If the\n                    // line length changes (eg. radius change, new data), that dash won't\n                    // be the same length anymore. We can fix that by removing those\n                    // properties once the auto-draw is completed.\n                    style({\n                        'stroke-dashoffset': '',\n                        'stroke-dasharray': ''\n                    }),\n                ]),\n            ]),\n        ] } });\nTrendComponent.ctorParameters = () => [];\nTrendComponent.propDecorators = {\n    data: [{ type: Input }],\n    smooth: [{ type: Input }],\n    autoDraw: [{ type: Input }],\n    autoDrawDuration: [{ type: Input }],\n    autoDrawEasing: [{ type: Input }],\n    width: [{ type: Input }],\n    height: [{ type: Input }],\n    padding: [{ type: Input }],\n    radius: [{ type: Input }],\n    stroke: [{ type: Input }],\n    strokeLinecap: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    gradient: [{ type: Input }],\n    preserveAspectRatio: [{ type: Input }],\n    svgHeight: [{ type: Input }],\n    svgWidth: [{ type: Input }],\n    pathEl: [{ type: ViewChild, args: ['pathEl',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TrendComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-trend',\n                template: `\n    <svg\n      *ngIf=\"data && data.length >= 2\"\n      [attr.width]=\"svgWidth\"\n      [attr.height]=\"svgHeight\"\n      [attr.stroke]=\"stroke\"\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.stroke-linecap]=\"strokeLinecap\"\n      [attr.viewBox]=\"viewBox\"\n      [attr.preserveAspectRatio]=\"preserveAspectRatio\"\n    >\n      <defs *ngIf=\"gradient && gradient.length\">\n        <linearGradient [attr.id]=\"gradientId\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n          <stop\n            *ngFor=\"let g of gradientTrimmed\"\n            [attr.key]=\"g.idx\"\n            [attr.offset]=\"g.offset\"\n            [attr.stop-color]=\"g.stopColor\"\n          />\n        </linearGradient>\n      </defs>\n      <path\n        fill=\"none\"\n        #pathEl\n        [attr.stroke]=\"pathStroke\"\n        [attr.d]=\"d\"\n        [@pathAnimaiton]=\"{\n          value: animationState,\n          params: {\n            autoDrawDuration: autoDrawDuration,\n            autoDrawEasing: autoDrawEasing,\n            lineLength: lineLength\n          }\n        }\"\n      />\n    </svg>\n  `,\n                animations: [\n                    trigger('pathAnimaiton', [\n                        state('inactive', style({ display: 'none' })),\n                        transition('* => active', [\n                            style({ display: 'initial' }),\n                            // We do the animation using the dash array/offset trick\n                            // https://css-tricks.com/svg-line-animation-works/\n                            animate('{{ autoDrawDuration }}ms {{ autoDrawEasing }}', keyframes([\n                                style({\n                                    'stroke-dasharray': '{{ lineLength }}px',\n                                    'stroke-dashoffset': '{{ lineLength }}px'\n                                }),\n                                style({\n                                    'stroke-dasharray': '{{ lineLength }}px',\n                                    'stroke-dashoffset': 0\n                                }),\n                            ])),\n                            // One unfortunate side-effect of the auto-draw is that the line is\n                            // actually 1 big dash, the same length as the line itself. If the\n                            // line length changes (eg. radius change, new data), that dash won't\n                            // be the same length anymore. We can fix that by removing those\n                            // properties once the auto-draw is completed.\n                            style({\n                                'stroke-dashoffset': '',\n                                'stroke-dasharray': ''\n                            }),\n                        ]),\n                    ]),\n                ]\n            }]\n    }], function () { return []; }, { autoDraw: [{\n            type: Input\n        }], autoDrawDuration: [{\n            type: Input\n        }], autoDrawEasing: [{\n            type: Input\n        }], padding: [{\n            type: Input\n        }], radius: [{\n            type: Input\n        }], stroke: [{\n            type: Input\n        }], strokeLinecap: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], gradient: [{\n            type: Input\n        }], svgHeight: [{\n            type: Input\n        }], svgWidth: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }], smooth: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }], preserveAspectRatio: [{\n            type: Input\n        }], pathEl: [{\n            type: ViewChild,\n            args: ['pathEl']\n        }] }); })();\n\nclass TrendModule {\n}\nTrendModule.ɵfac = function TrendModule_Factory(t) { return new (t || TrendModule)(); };\nTrendModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TrendModule });\nTrendModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TrendModule, { declarations: function () { return [TrendComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TrendComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TrendModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [TrendComponent],\n                declarations: [TrendComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TrendComponent, TrendModule };\n\n//# sourceMappingURL=ngx-trend.js.map","export default \"<div class=\\\"crypto-prices\\\">\\n    <div class=\\\"crypto-prices-item\\\" *ngFor=\\\"let stat of stats\\\">\\n        <div class=\\\"crypto-prices-info\\\">\\n            <div class=\\\"info-tag mb-1\\\">\\n                <img src=\\\"/img/icons/btc.svg\\\" alt=\\\"Bitcoin\\\" *ngIf=\\\"stat.symbol === 'BTC'\\\" />\\n                <img src=\\\"/img/icons/eth.svg\\\" alt=\\\"Ethereum\\\" *ngIf=\\\"stat.symbol === 'ETH'\\\" />\\n                <img src=\\\"/img/icons/ltc.svg\\\" alt=\\\"Litecoin\\\" *ngIf=\\\"stat.symbol === 'LTC'\\\" />\\n                <img src=\\\"/img/icons/usdt.svg\\\" alt=\\\"Tether\\\" *ngIf=\\\"stat.symbol === 'USDT'\\\" />\\n                <div class=\\\"mt-1\\\">{{ stat.name }}</div>\\n                <div>{{ stat.symbol }}</div>\\n                <div class=\\\"d-flex justify-content-between text-gray\\\">\\n                    <div>\\n                        <span [ngClass]=\\\"getDailyChange(stat.symbol) < 0 ? 'text-danger' : 'text-green'\\\">\\n                            {{ getDailyChange(stat.symbol) | number: '1.2-2' }}%\\n                        </span>\\n                        <small> (24h)</small>\\n                    </div>\\n                    <div>\\n                        <small>(7d) </small>\\n                        <span [ngClass]=\\\"getWeeklyChange(stat.symbol) < 0 ? 'text-danger' : 'text-green'\\\">\\n                            {{ getWeeklyChange(stat.symbol) | number: '1.2-2' }}%\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-trend\\\">\\n                <ngx-trend\\n                    [data]=\\\"getTrend(stat.symbol)\\\"\\n                    [stroke]=\\\"getWeeklyChange(stat.symbol) < 0 ? '#d94a3d' : '#50b652'\\\"\\n                    strokeWidth=\\\"2\\\"\\n                    [autoDraw]=\\\"true\\\"\\n                    [autoDrawDuration]=\\\"1500\\\"\\n                ></ngx-trend>\\n            </div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n            <span class=\\\"crypto-prices-value\\\">\\n                <span>{{ 'common.sell' | translate }}</span>\\n                <span class=\\\"text-danger\\\">${{ getPriceSide(stat.symbol, 'sell') | amount: 2 }}</span>\\n            </span>\\n            <span class=\\\"crypto-prices-value\\\">\\n                <span>{{ 'common.buy' | translate }}</span>\\n                <span class=\\\"text-primary\\\">${{ getPriceSide(stat.symbol, 'buy') | amount: 2 }}</span>\\n            </span>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"small text-muted mb-1 mt-1 text-right pr-1\\\">{{ 'common.last-update' | translate }}: {{ rates?.timestamp | date: 'medium' }}</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Review and Execute</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <table class=\\\"table table-striped table-borderless mb-0\\\">\\n        <tbody>\\n            <tr>\\n                <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Instrument</th>\\n                <td>{{ trade.instrument }}</td>\\n            </tr>\\n            <tr>\\n                <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Direction</th>\\n                <td class=\\\"text-uppercase\\\">{{ trade.side }}</td>\\n            </tr>\\n            <tr>\\n                <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Amount</th>\\n                <td>{{ trade.quantity | amount: 8 }} {{ baseCurrency }}</td>\\n            </tr>\\n            <tr>\\n                <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Price</th>\\n                <td>{{ trade.price | amount: 2 }} {{ counterCurrency }}</td>\\n            </tr>\\n            <tr>\\n                <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Total</th>\\n                <td class=\\\"font-weight-bold\\\" [ngClass]=\\\"trade.side === 'buy' ? 'text-primary' : 'text-danger'\\\">\\n                    {{ total | amount: 2 }} {{ counterCurrency }}\\n                </td>\\n            </tr>\\n            <tr>\\n                <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Expiry</th>\\n                <td><countdown #cd [config]=\\\"{ leftTime: expiry, format: 'ss' }\\\" (event)=\\\"onCountdownEvent($event)\\\"></countdown> seconds</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn\\\" [ngClass]=\\\"trade.side === 'buy' ? 'btn-primary' : 'btn-danger'\\\" (click)=\\\"onExecute.emit()\\\">\\n        <span class=\\\"text-capitalize\\\">{{ trade.side }}</span> {{ trade.quantity | amount: 8 }} {{ baseCurrency }}\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.dismiss()\\\">Cancel</button>\\n</div>\\n\";","export default \".crypto-prices {\\n  background: #e3e8f0;\\n  border-radius: 0.5rem;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-content: space-evenly;\\n  align-items: center;\\n}\\n.crypto-prices-item {\\n  min-width: 150px;\\n  width: 50%;\\n  padding: 0.6rem;\\n  font-weight: 500;\\n  border-radius: 0.25rem;\\n  border: 1px solid transparent;\\n}\\n.crypto-prices-item:hover {\\n  background: rgba(0, 0, 0, 0.025);\\n}\\n.crypto-prices-info {\\n  position: relative;\\n  height: 108px;\\n}\\n.crypto-prices-info .info-tag {\\n  position: absolute;\\n  width: 100%;\\n}\\n.crypto-prices-info .info-trend {\\n  padding: 0.5rem;\\n  padding-left: 4.5rem;\\n}\\n.crypto-prices-value {\\n  background-color: white;\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  justify-content: center;\\n  align-self: center;\\n  padding: 0.5rem 0;\\n  text-align: center;\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n}\\n.crypto-prices-value:first-child {\\n  border-right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Nwb3QtdHJhZGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0VBQ0EscUJBQUE7RUFDQSxhQUFBO0VBQ0EsMkJBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7QUFDRTtFQUNFLGdCQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsNkJBQUE7QUFDSjtBQUNJO0VBQ0UsZ0NBQUE7QUFDTjtBQUdFO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0FBREo7QUFHSTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtBQUROO0FBSUk7RUFDRSxlQUFBO0VBQ0Esb0JBQUE7QUFGTjtBQU1FO0VBQ0UsdUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQ0FBQTtBQUpKO0FBTUk7RUFDRSxlQUFBO0FBSk4iLCJmaWxlIjoic3BvdC10cmFkaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNyeXB0by1wcmljZXMge1xuICBiYWNrZ3JvdW5kOiBkYXJrZW4oI2YwZjNmNywgNCUpO1xuICBib3JkZXItcmFkaXVzOiAwLjVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24tY29udGVudDogc3BhY2UtZXZlbmx5O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICYtaXRlbSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICB3aWR0aDogNTAlO1xuICAgIHBhZGRpbmc6IDAuNnJlbTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wMjUpO1xuICAgIH1cbiAgfVxuXG4gICYtaW5mbyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMTA4cHg7XG5cbiAgICAuaW5mby10YWcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLmluZm8tdHJlbmQge1xuICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgcGFkZGluZy1sZWZ0OiA0LjVyZW07XG4gICAgfVxuICB9XG5cbiAgJi12YWx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDAuNXJlbSAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XG5cbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgIGJvcmRlci1yaWdodDogMDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\";","import { AfterViewInit, Component, EventEmitter, OnInit, ViewChild } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport BigNumber from 'bignumber.js'\nimport differenceInSeconds from 'date-fns/differenceInSeconds'\nimport { CountdownComponent } from 'ngx-countdown'\nimport { ConfirmationService } from '../services/confirmation.service'\n\n@Component({\n    selector: 'spot-trading-quote-modal',\n    templateUrl: 'spot-trading-quote-modal.component.html',\n})\nexport class SpotTradingQuoteModalComponent implements OnInit, AfterViewInit {\n    public trade: any\n    public expiry: number\n    public onExecute = new EventEmitter<void>()\n\n    @ViewChild('cd', { static: false })\n    private countdown: CountdownComponent\n\n    constructor(public activeModal: NgbActiveModal, private confirmation: ConfirmationService) {}\n\n    public ngOnInit(): void {\n        this.expiry = differenceInSeconds(new Date(this.trade.validUntil), new Date())\n    }\n\n    public ngAfterViewInit(): void {\n        this.countdown.begin()\n    }\n\n    public get baseCurrency(): string {\n        const parts = this.trade.instrument!.split('.')\n        return parts[0].slice(0, 3)\n    }\n\n    public get counterCurrency(): string {\n        const parts = this.trade.instrument!.split('.')\n        return parts[0].slice(3, 6)\n    }\n\n    public get total(): string {\n        return new BigNumber(this.trade.price!).times(this.trade.quantity).toFixed(2, 1)\n    }\n\n    public onCountdownEvent(event: any): void {\n        if (event.action === 'done') {\n            this.activeModal.dismiss()\n            // TODO: Just renew quote instead of show expiry\n            this.confirmation\n                .show({\n                    type: 'info',\n                    title: 'Quote Expired',\n                    text: `Your quote expired. Please request a new quote.`,\n                    confirmClass: 'info',\n                    showCancel: false,\n                })\n                .subscribe(() => undefined)\n        }\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { faArrowAltFromBottom, faArrowAltToBottom } from '@fortawesome/pro-light-svg-icons'\nimport BigNumber from 'bignumber.js'\n\ninterface SpotTradeRates {\n    timestamp: Date\n    data: {\n        [K: string]: {\n            current_price: number\n            percent_change_1h: number\n            percent_change_24h: number\n            percent_change_7d: number\n            percent_change_30d: number\n            trend_7d: [number, number, number, number]\n        }\n    }\n}\n\n@Component({\n    selector: 'spot-trading-feed',\n    templateUrl: 'spot-trading-feed.component.html',\n    styleUrls: ['./spot-trading.component.scss'],\n})\nexport class SpotTradingFeedComponent implements OnInit {\n    public stats = [\n        {\n            name: 'Bitcoin',\n            symbol: 'BTC',\n        },\n        {\n            name: 'Ethereum',\n            symbol: 'ETH',\n        },\n        {\n            name: 'Litecoin',\n            symbol: 'LTC',\n        },\n        {\n            name: 'Tether',\n            symbol: 'USDT',\n        },\n    ]\n    public rates: SpotTradeRates\n\n    public faArrowAltToBottom = faArrowAltToBottom\n    public faArrowAltFromBottom = faArrowAltFromBottom\n\n    constructor(private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.http.get<SpotTradeRates>('/spot-trades/rates').subscribe(rates => (this.rates = rates))\n    }\n\n    public getDailyChange(ticker: string): number {\n        return this.rates && this.rates.data[ticker]?.percent_change_24h\n    }\n\n    public getWeeklyChange(ticker: string): number {\n        return this.rates && this.rates.data[ticker]?.percent_change_7d\n    }\n\n    public getTrend(ticker: string): number[] {\n        return this.rates && this.rates.data[ticker].trend_7d\n    }\n\n    public getPrice(ticker: string): string {\n        return ((this.rates && this.rates.data[ticker].current_price) || 1).toFixed(2)\n    }\n\n    public getPriceSide(ticker: string, side: string): string {\n        const spread = side === 'buy' ? '1.04' : '0.96'\n        return new BigNumber(this.getPrice(ticker)).times(spread).toFixed(2)\n    }\n}\n"]}