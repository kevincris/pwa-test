{"version":3,"sources":["webpack:///src/app/embedded/wizard/embedded-wizard.component.html","webpack:///src/app/embedded/wizard/embedded-wizard.component.scss","webpack:///src/app/embedded/embedded.module.ts","webpack:///src/app/embedded/wizard/embedded-wizard.component.ts","webpack:///src/app/embedded/embedded-routing.module.ts"],"names":["EmbeddedModule","declarations","imports","EmbeddedWizardComponent","basisId","confirmation","http","intercom","session","translate","running","subscriptions","user","logout","window","addEventListener","event","data","token","type","payload","parseToken","verificationId","initBasisId","userID","parent","postMessage","shutdown","add","onSuccess","pipe","post","completed","headers","Authorization","subscribe","status","onError","show","text","instant","showCancel","confirmText","location","reload","unsubscribe","userId","init","id","verification","loadWidget","key","BASIS_ID_KYB_KEY","BASIS_ID_KYC_KEY","formToken","JSON","parse","decode","split","selector","template","routes","path","component","EmbeddedRoutingModule","forChild","exports"],"mappings":"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","file":"embedded-embedded-module-es5.js","sourcesContent":["export default \"<div class=\\\"wizard-container\\\">\\n    <a [routerLink]=\\\"['/']\\\">\\n        <img class=\\\"logo\\\" src=\\\"/img/brand/logo-white-horizontal.svg\\\" />\\n    </a>\\n    <div id=\\\"bas-widget-container\\\" [style.visibility]=\\\"!running\\\"></div>\\n</div>\\n\";","export default \".wizard-container {\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n  background-color: #3983ec;\\n  height: 100%;\\n}\\n\\n.logo {\\n  width: 194px;\\n  margin: 1.5rem 1.5rem auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2VtYmVkZGVkLXdpemFyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsMEJBQUE7RUFDQSxjQUFBO0FBQ0YiLCJmaWxlIjoiZW1iZWRkZWQtd2l6YXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndpemFyZC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzk4M2VjO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5sb2dvIHtcbiAgd2lkdGg6IDE5NHB4O1xuICBtYXJnaW46IDEuNXJlbSAxLjVyZW0gYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { KycWizardModule } from '../kyc-wizard/kyc-wizard.module'\nimport { EmbeddedRoutingModule } from './embedded-routing.module'\nimport { EmbeddedWizardComponent } from './wizard/embedded-wizard.component'\n\n@NgModule({\n    declarations: [EmbeddedWizardComponent],\n    imports: [CommonModule, EmbeddedRoutingModule, KycWizardModule],\n})\nexport class EmbeddedModule {}\n","import { HttpClient } from '@angular/common/http'\nimport { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Base64 } from 'js-base64'\nimport { Subscription } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { Verification } from 'src/app/common/api-interfaces'\nimport { BasisIdService } from 'src/app/common/services/basis-id.service'\nimport { ConfirmationService } from 'src/app/common/services/confirmation.service'\nimport { IntercomService } from 'src/app/common/services/intercom.service'\nimport { SessionService } from 'src/app/common/services/session.service'\n\n@Component({\n    selector: 'embedded-wizard',\n    templateUrl: 'embedded-wizard.component.html',\n    styleUrls: ['embedded-wizard.component.scss'],\n})\nexport class EmbeddedWizardComponent implements AfterViewInit, OnInit, OnDestroy {\n    public verificationId: string\n    public token: string\n    public running = false\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private basisId: BasisIdService,\n        private confirmation: ConfirmationService,\n        private http: HttpClient,\n        private intercom: IntercomService,\n        private session: SessionService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        if (!!this.session.user) {\n            this.session.logout()\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        window.addEventListener('message', event => {\n            if (!event.data.token) {\n                return\n            }\n            if (event.data.type === 'aerapass.wizard.token') {\n                const payload = this.parseToken(event.data.token)\n                this.token = event.data.token\n                this.verificationId = payload.verificationId\n                this.initBasisId(payload.userID)\n            }\n        })\n        window.parent.postMessage({ type: 'aerapass.wizard.ready' }, '*')\n        this.intercom.shutdown()\n        this.subscriptions.add(\n            this.basisId.onSuccess\n                .pipe(\n                    flatMap(() =>\n                        this.http.post<void>(\n                            `/verifications/${this.verificationId}/set-completed`,\n                            {\n                                completed: true,\n                            },\n                            {\n                                headers: {\n                                    Authorization: `Bearer ${this.token}`,\n                                },\n                            }\n                        )\n                    )\n                )\n                .subscribe(() => {\n                    window.parent.postMessage({ type: 'aerapass.wizard.complete', status: 'complete' }, '*')\n                })\n        )\n        this.subscriptions.add(\n            this.basisId.onError\n                .pipe(\n                    flatMap(() =>\n                        this.confirmation.show({\n                            type: 'warning',\n                            text: this.translate.instant('common.there-was-a-problem-in-verification'),\n                            showCancel: false,\n                            confirmText: this.translate.instant('common.relaod-page'),\n                        })\n                    )\n                )\n                .subscribe(() => {\n                    location.reload()\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    private initBasisId(userId: string): void {\n        this.basisId\n            .init()\n            .pipe(\n                flatMap(() =>\n                    this.http.post<Verification>(\n                        `/verifications`,\n                        { user: { id: userId } },\n                        {\n                            headers: {\n                                Authorization: `Bearer ${this.token}`,\n                            },\n                        }\n                    )\n                )\n            )\n            .subscribe(verification => {\n                this.running = true\n                this.basisId.loadWidget({\n                    key: verification.user.type === 'business' ? window.BASIS_ID_KYB_KEY! : window.BASIS_ID_KYC_KEY!,\n                    formToken: verification.formToken,\n                })\n            })\n    }\n\n    private parseToken(token: string): any {\n        return JSON.parse(Base64.decode(token.split('.')[1]))\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport { EmbeddedWizardComponent } from './wizard/embedded-wizard.component'\n\nconst routes = [\n    {\n        path: 'wizard',\n        component: EmbeddedWizardComponent,\n    },\n]\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmbeddedRoutingModule {}\n"]}