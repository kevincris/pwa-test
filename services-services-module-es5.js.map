{"version":3,"sources":["webpack:///src/app/services/services.module.ts","webpack:///src/app/common/logged-in.auth-guard.ts"],"names":["routes","path","canActivate","children","data","permissions","loadChildren","then","mod","UserInvoicesModule","UserConversionsModule","ServicesModule","imports","forChild","exports","LoggedInAuthGuard","session","router","_","state","isAuthenticated","parseUrl","url","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,mBAAW,EAAE,CAAC,8EAAD,CAFjB;AAGIC,gBAAQ,EAAE,CACN;AACIF,cAAI,EAAE,UADV;AAEIC,qBAAW,EAAE,CAAC,+EAAD,CAFjB;AAGIE,cAAI,EAAE;AACFC,uBAAW,EAAE,CAAC,UAAD;AADX,WAHV;AAMIC,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA+CC,IAA/C,CAAoD,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,kBAAR;AAAA,aAAvD,CAAN;AAAA;AANlB,SADM,EASN;AACIR,cAAI,EAAE,aADV;AAEIC,qBAAW,EAAE,CAAC,+EAAD,CAFjB;AAGIE,cAAI,EAAE;AACFC,uBAAW,EAAE,CAAC,aAAD;AADX,WAHV;AAMIC,sBAAY,EAAE;AAAA,mBACV;AAAA;AAAA;AAAA;AAAA,qBAAqDC,IAArD,CAA0D,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACE,qBAAR;AAAA,aAA7D,CADU;AAAA;AANlB,SATM;AAHd,OADmB,CAAvB;;UA8BaC,cAAc;AAAA;AAAA,Q;;AAAdA,oBAAc,6DAJ1B,+DAAS;AACNC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBb,MAAtB,CAAD,CADH;AAENc,eAAO,EAAE,CAAC,4DAAD;AAFH,OAAT,CAI0B,GAAdH,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC9BAI,iBAAiB;AAC1B,mCAAoBC,OAApB,EAAqDC,MAArD,EAAqE;AAAA;;AAAjD,eAAAD,OAAA,GAAAA,OAAA;AAAiC,eAAAC,MAAA,GAAAA,MAAA;AAAkB;;AAD7C;AAAA;AAAA,iBAEnB,qBAAYC,CAAZ,EAAuCC,KAAvC,EAAiE;AACpE,gBAAI,CAAC,KAAKH,OAAL,CAAaI,eAAb,EAAL,EAAqC;AACjC,qBAAO,KAAKH,MAAL,CAAYI,QAAZ,CAAqB,qBAAqBF,KAAK,CAACG,GAAhD,CAAP;AACH;;AACD,mBAAO,IAAP;AACH;AAPyB;;AAAA;AAAA,S;;;;gBAHrB;;gBADqC;;;;AAIjCP,uBAAiB,6DAD7B,iEAAW;AAAEQ,kBAAU,EAAE;AAAd,OAAX,CAC6B,GAAjBR,iBAAiB,CAAjB","file":"services-services-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { PermissionGuard } from '../common/guards/permission.guard'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [LoggedInAuthGuard],\n        children: [\n            {\n                path: 'invoices',\n                canActivate: [PermissionGuard],\n                data: {\n                    permissions: ['invoices'],\n                },\n                loadChildren: () => import('./user-invoices/user-invoices.module').then(mod => mod.UserInvoicesModule),\n            },\n            {\n                path: 'conversions',\n                canActivate: [PermissionGuard],\n                data: {\n                    permissions: ['conversions'],\n                },\n                loadChildren: () =>\n                    import('./user-conversions/user-conversions.module').then(mod => mod.UserConversionsModule),\n            },\n        ],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ServicesModule {}\n","import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { SessionService } from './services/session.service'\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this.session.isAuthenticated()) {\n            return this.router.parseUrl('/login?redirect=' + state.url)\n        }\n        return true\n    }\n}\n"]}