{"version":3,"sources":["webpack:///src/app/common/redemption/redemption-form.component.html","webpack:///src/app/common/services/redemption.service.ts","webpack:///src/app/common/redemption/redemption-form.component.ts","webpack:///src/app/common/redemption/redemption.module.ts","webpack:///src/app/common/redemption/redemption-confirm-modal.component.ts","webpack:///src/app/common/redemption/redemption-confirm-modal.component.html"],"names":["RedemptionService","http","redemption","unit","type","oneGram","times","toFixed","fiveGram","fiftyGram","hundredGram","thousandGram","twoOunce","fiveOunce","tenOunce","hundredOunce","oneKilogram","plus","getOunces","getGrams","status","put","id","method","transaction","shippingAddress","denomination","providedIn","RedemptionFormComponent","toastr","ngbModal","walletsService","session","securityCheckService","redemptionsService","walletsQuery","translate","faPlus","faMinus","isLoading","types","methods","displayName","isUserSelectAllowed","isEditing","onRedemptionSubmitted","userAutocomplete","legalEntitiesSteam","pipe","search","get","params","set","subscriptions","add","selectAll","filterBy","wallet","includes","currency","code","subscribe","wallets","auWallet","find","agWallet","unsubscribe","willExceedBalance","addressForm","submit","isValid","modal","open","windowClass","backdrop","component","componentInstance","address","onExecute","getScopePermission","submitRedemption","close","body","userId","user","amount","totalOunces","post","resetDenomination","success","instant","emit","fetch","total","value","balance","availableBalance","isGreaterThan","selector","template","RedemptionModule","declarations","exports","imports","RedemptionConfirmModalComponent","activeModal","confirmButtonText","cancelButtonText","denominations","isPreview","convertQuantityKey","key"],"mappings":"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","file":"default~admin-admin-module~user-redemption-user-redemption-module-es5.js","sourcesContent":["export default \"<form class=\\\"form-validation\\\" #redemptionForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': redemptionForm.submitted }\\\" autocomplete=\\\"false\\\" novalidate>\\n    <div *ngIf=\\\"isUserSelectAllowed\\\" class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user\\\">{{ 'common.user' | translate }}</label>\\n            <ng-select\\n                class=\\\"ng-select-lg\\\"\\n                id=\\\"user\\\"\\n                name=\\\"user\\\"\\n                [placeholder]=\\\"'common.enter-user' | translate\\\"\\n                [(ngModel)]=\\\"user\\\"\\n                #userInput=\\\"ngModel\\\"\\n                [items]=\\\"legalEntitiesSteam | async\\\"\\n                [typeahead]=\\\"userAutocomplete\\\"\\n                [disabled]=\\\"isEditing\\\"\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                        <user-display *ngIf=\\\"item\\\" [user]=\\\"item\\\"></user-display>\\n                        <small *ngIf=\\\"item\\\" class=\\\"text-gray ml-1\\\">{{ item.email }}</small>\\n                    </div>\\n                </ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                        <user-avatar *ngIf=\\\"item\\\" [user]=\\\"item\\\" size=\\\"sm\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n                        <div class=\\\"w-100\\\">\\n                            <ng-container *ngIf=\\\"item; else platform\\\">\\n                                <div>{{ item.name }}</div>\\n                                <small class=\\\"text-gray\\\">{{ item.email }}</small>\\n                            </ng-container>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n                <ng-template #platform>\\n                    <div>{{ displayName }}</div>\\n                    <small class=\\\"text-gray\\\">{{ 'common.platform' | translate }}</small>\\n                </ng-template>\\n            </ng-select>\\n            <div *ngIf=\\\"userInput.invalid && (redemptionForm.submitted || userInput.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userInput?.errors?.validateObject\\\">Please choose an existing user.</div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"userInput.invalid && (redemptionForm.submitted || userInput.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\" for=\\\"type\\\">Precious Metal Type</label>\\n        <ng-select\\n            class=\\\"ng-select-lg\\\"\\n            name=\\\"type\\\"\\n            [placeholder]=\\\"'common.select-precious-metal-type' | translate\\\"\\n            [items]=\\\"types\\\"\\n            [searchable]=\\\"false\\\"\\n            [clearable]=\\\"false\\\"\\n            (change)=\\\"resetDenomination()\\\"\\n            [(ngModel)]=\\\"redemption.type\\\"\\n            #type=\\\"ngModel\\\"\\n            required\\n        >\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item === 'gold' ? 'Gold Troy Ounce' : 'Silver Troy Ounce' }}</ng-template>\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item === 'gold' ? 'Gold Troy Ounce' : 'Silver Troy Ounce' }}</ng-template>\\n        </ng-select>\\n        <div *ngIf=\\\"type.invalid && (redemptionForm.submitted || type.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"type?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered\\\">\\n            <thead class=\\\"thead-light\\\">\\n                <tr>\\n                    <th scope=\\\"col\\\">Denomination <span class=\\\"d-none d-md-inline\\\">To Redeem</span></th>\\n                    <th scope=\\\"col\\\" width=\\\"40%\\\" [style.minWidth]=\\\"'150px'\\\">{{ 'common.quantity' | translate }}</th>\\n                </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"redemption.type === 'gold'\\\">\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>1 gram</span><br /><span>0.0321507 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('oneGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.oneGram\\\"\\n                                name=\\\"oneGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('oneGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('oneGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>5 gram</span><br /><span>0.1607537 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('fiveGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.fiveGram\\\"\\n                                name=\\\"fiveGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('fiveGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('fiveGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>50 gram</span><br /><span>1.6075373 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('fiftyGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.fiftyGram\\\"\\n                                name=\\\"fiftyGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('fiftyGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('fiftyGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>100 gram</span><br /><span>3.2150747 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('hundredGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.hundredGram\\\"\\n                                name=\\\"hundredGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('hundredGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('hundredGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>1000 gram</span><br /><span>32.1507466 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('thousandGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.thousandGram\\\"\\n                                name=\\\"thousandGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('thousandGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('thousandGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </tbody>\\n            <tbody *ngIf=\\\"redemption.type === 'silver'\\\">\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>2 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('twoOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.twoOunce\\\"\\n                                name=\\\"twoOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('twoOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('twoOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>5 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('fiveOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.fiveOunce\\\"\\n                                name=\\\"fiveOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('fiveOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('fiveOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>10 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('tenOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.tenOunce\\\"\\n                                name=\\\"tenOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('tenOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('tenOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>100 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('hundredOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.hundredOunce\\\"\\n                                name=\\\"hundredOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('hundredOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('hundredOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>100 gram (3.2150747 ozt)</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('hundredGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.hundredGram\\\"\\n                                name=\\\"hundredGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('hundredGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('hundredGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>1 kg (32.1507466 ozt)</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('oneKilogram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.oneKilogram\\\"\\n                                name=\\\"oneKilogram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('oneKilogram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('oneKilogram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\">Redemption Method</label>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"custom-control custom-radio btn border\\\" (click)=\\\"redemption.method = 'self-collect'\\\">\\n                    <input\\n                        type=\\\"radio\\\"\\n                        class=\\\"custom-control-input\\\"\\n                        id=\\\"self-collect\\\"\\n                        name=\\\"self-collect\\\"\\n                        value=\\\"self-collect\\\"\\n                        [(ngModel)]=\\\"redemption.method\\\"\\n                    />\\n                    <label class=\\\"custom-control-label font-weight-normal\\\" for=\\\"self-collect\\\">Self Collect</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <div class=\\\"custom-control custom-radio btn border\\\" (click)=\\\"redemption.method = 'delivery'\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"delivery\\\" name=\\\"delivery\\\" value=\\\"delivery\\\" [(ngModel)]=\\\"redemption.method\\\" />\\n                    <label class=\\\"custom-control-label font-weight-normal\\\" for=\\\"delivery\\\">Delivery</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"redemption.method === 'self-collect'; else addressTemplate\\\">\\n        <div>\\n            <small> Self-Collection Address </small><br />\\n            <small>\\n                <b>\\n                    Singapore Precious Metals Exchange Pte Ltd <br />\\n                    Le Freeport, 32 Changi North Crescent, Singapore, 499643\\n                </b>\\n            </small>\\n        </div>\\n    </ng-container>\\n    <ng-template #addressTemplate>\\n        <div>\\n            <address-form [(address)]=\\\"address\\\" #redemptionAddressForm></address-form>\\n        </div>\\n    </ng-template>\\n    <button\\n        type=\\\"submit\\\"\\n        class=\\\"btn btn-primary btn-lg btn-block mt-3\\\"\\n        [ngClass]=\\\"{ loading: isLoading }\\\"\\n        [disabled]=\\\"isLoading\\\"\\n        (click)=\\\"openRedeemModal()\\\"\\n    >\\n        Proceed\\n    </button>\\n</form>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport BigNumber from 'bignumber.js'\nimport { Redemption, RedemptionUnit } from '../api-interfaces'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RedemptionService {\n    constructor(private http: HttpClient) {}\n\n    public getOunces(redemption: Partial<Redemption>, unit: RedemptionUnit): string {\n        if (redemption.type === 'gold') {\n            switch (unit) {\n                case 'oneGram':\n                    return new BigNumber(redemption.oneGram!).times(0.0321507).toFixed(7, 1)\n                case 'fiveGram':\n                    return new BigNumber(redemption.fiveGram!).times(0.1607537).toFixed(7, 1)\n                case 'fiftyGram':\n                    return new BigNumber(redemption.fiftyGram!).times(1.6075373).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(3.2150747).toFixed(7, 1)\n                case 'thousandGram':\n                    return new BigNumber(redemption.thousandGram!).times(32.1507466).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        } else {\n            switch (unit) {\n                case 'twoOunce':\n                    return new BigNumber(redemption.twoOunce!).times(2).toFixed(7, 1)\n                case 'fiveOunce':\n                    return new BigNumber(redemption.fiveOunce!).times(5).toFixed(7, 1)\n                case 'tenOunce':\n                    return new BigNumber(redemption.tenOunce!).times(10).toFixed(7, 1)\n                case 'hundredOunce':\n                    return new BigNumber(redemption.hundredOunce!).times(100).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(3.2150747).toFixed(7, 1)\n                case 'oneKilogram':\n                    return new BigNumber(redemption.oneKilogram!).times(32.1507466).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        }\n    }\n\n    public totalOunces(redemption: Partial<Redemption>): string {\n        if (redemption.type === 'gold') {\n            return new BigNumber(0)\n                .plus(this.getOunces(redemption, 'oneGram'))\n                .plus(this.getOunces(redemption, 'fiveGram'))\n                .plus(this.getOunces(redemption, 'fiftyGram'))\n                .plus(this.getOunces(redemption, 'hundredGram'))\n                .plus(this.getOunces(redemption, 'thousandGram'))\n                .toFixed(7, 1)\n        } else {\n            return new BigNumber(0)\n                .plus(this.getOunces(redemption, 'twoOunce'))\n                .plus(this.getOunces(redemption, 'fiveOunce'))\n                .plus(this.getOunces(redemption, 'tenOunce'))\n                .plus(this.getOunces(redemption, 'hundredOunce'))\n                .plus(this.getOunces(redemption, 'hundredGram'))\n                .plus(this.getOunces(redemption, 'oneKilogram'))\n                .toFixed(7, 1)\n        }\n    }\n\n    public getGrams(redemption: Partial<Redemption>, unit: RedemptionUnit): string {\n        if (redemption.type === 'gold') {\n            switch (unit) {\n                case 'oneGram':\n                    return new BigNumber(redemption.oneGram!).times(1).toFixed(7, 1)\n                case 'fiveGram':\n                    return new BigNumber(redemption.fiveGram!).times(5).toFixed(7, 1)\n                case 'fiftyGram':\n                    return new BigNumber(redemption.fiftyGram!).times(50).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(100).toFixed(7, 1)\n                case 'thousandGram':\n                    return new BigNumber(redemption.thousandGram!).times(1000).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        } else {\n            switch (unit) {\n                case 'twoOunce':\n                    return new BigNumber(redemption.twoOunce!).times(62.2070437).toFixed(7, 1)\n                case 'fiveOunce':\n                    return new BigNumber(redemption.fiveOunce!).times(155.5176093).toFixed(7, 1)\n                case 'tenOunce':\n                    return new BigNumber(redemption.tenOunce!).times(311.0352185).toFixed(7, 1)\n                case 'hundredOunce':\n                    return new BigNumber(redemption.hundredOunce!).times(3110.3521852).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(100).toFixed(7, 1)\n                case 'oneKilogram':\n                    return new BigNumber(redemption.oneKilogram!).times(1000).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        }\n    }\n\n    public totalGrams(redemption: Partial<Redemption>): string {\n        if (redemption.type === 'gold') {\n            return new BigNumber(0)\n                .plus(this.getGrams(redemption, 'oneGram'))\n                .plus(this.getGrams(redemption, 'fiveGram'))\n                .plus(this.getGrams(redemption, 'fiftyGram'))\n                .plus(this.getGrams(redemption, 'hundredGram'))\n                .plus(this.getGrams(redemption, 'thousandGram'))\n                .toFixed(7, 1)\n        } else {\n            return new BigNumber(0)\n                .plus(this.getGrams(redemption, 'twoOunce'))\n                .plus(this.getGrams(redemption, 'fiveOunce'))\n                .plus(this.getGrams(redemption, 'tenOunce'))\n                .plus(this.getGrams(redemption, 'hundredOunce'))\n                .plus(this.getGrams(redemption, 'hundredGram'))\n                .plus(this.getGrams(redemption, 'oneKilogram'))\n                .toFixed(7, 1)\n        }\n    }\n\n    public updateRedemption(redemption: Partial<Redemption>, status: string) {\n        return this.http.put<Redemption>(`/admin/redemptions/${redemption.id}`, {\n            status,\n            type: redemption.type,\n            method: redemption.method,\n            transaction: redemption.transaction,\n            shippingAddress: redemption.shippingAddress,\n            denomination: {\n                oneGram: redemption.oneGram,\n                fiveGram: redemption.fiveGram,\n                fiftyGram: redemption.fiftyGram,\n                hundredGram: redemption.hundredGram,\n                thousandGram: redemption.thousandGram,\n                twoOunce: redemption.twoOunce,\n                fiveOunce: redemption.fiveOunce,\n                tenOunce: redemption.tenOunce,\n                hundredOunce: redemption.hundredOunce,\n                oneKilogram: redemption.oneKilogram,\n            },\n        })\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { faMinus, faPlus } from '@fortawesome/pro-light-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { Subscription } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, finalize, flatMap, switchMap } from 'rxjs/operators'\nimport { AddressFormComponent } from 'src/app/common/address-form/address-form.component'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { WalletsService } from 'src/app/store/wallets/wallets.service'\nimport { environment } from 'src/environments/environment'\nimport {\n    IAddress,\n    IUser,\n    Redemption,\n    RedemptionMetalType,\n    RedemptionMethod,\n    RedemptionUnit,\n} from '../../common/api-interfaces'\nimport { SessionService } from '../../common/services/session.service'\nimport { ToastrService } from '../../common/services/toastr.service'\nimport { Wallet } from '../models/accounting/wallet.model'\nimport { SecurityCheckService } from '../security-check/security-check.service'\nimport { RedemptionService } from '../services/redemption.service'\nimport { RedemptionConfirmModalComponent } from './redemption-confirm-modal.component'\n\n@Component({\n    selector: 'redemption-form',\n    templateUrl: 'redemption-form.component.html',\n})\nexport class RedemptionFormComponent implements OnInit, OnDestroy {\n    public faPlus = faPlus\n    public faMinus = faMinus\n    public isLoading = false\n    public types: RedemptionMetalType[] = ['gold', 'silver']\n    public methods: RedemptionMethod[] = ['self-collect', 'delivery']\n    public displayName = environment.displayName\n    @Input()\n    public redemption: Partial<Redemption> = {\n        method: this.methods[0],\n        type: this.types[0],\n        // Gold\n        oneGram: 0,\n        fiveGram: 0,\n        fiftyGram: 0,\n        hundredGram: 0,\n        thousandGram: 0,\n        // Silver\n        twoOunce: 0,\n        fiveOunce: 0,\n        tenOunce: 0,\n        hundredOunce: 0,\n        oneKilogram: 0,\n    }\n    @Input()\n    public address: IAddress\n    @Input()\n    public user: IUser\n    @Input()\n    public isUserSelectAllowed = false\n    @Input()\n    public isEditing = false\n    @Output()\n    public onRedemptionSubmitted = new EventEmitter<void>()\n    public auWallet: Wallet | undefined\n    public agWallet: Wallet | undefined\n\n    public userAutocomplete = new EventEmitter<string>()\n    public legalEntitiesSteam = this.userAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(search =>\n            this.http.get<IUser[]>('/users', {\n                params: new HttpParams().set('limit', '25').set('search', search),\n            })\n        )\n    )\n\n    @ViewChild('redemptionAddressForm')\n    public addressForm: AddressFormComponent\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        protected toastr: ToastrService,\n        protected ngbModal: NgbModal,\n        private http: HttpClient,\n        private walletsService: WalletsService,\n        public session: SessionService,\n        private securityCheckService: SecurityCheckService,\n        private redemptionsService: RedemptionService,\n        private walletsQuery: WalletsQuery,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.walletsQuery\n                .selectAll({ filterBy: wallet => ['AU', 'AG'].includes(wallet.currency.code) })\n                .subscribe(wallets => {\n                    this.auWallet = wallets.find(wallet => wallet.currency.code === 'AU') as Wallet\n                    this.agWallet = wallets.find(wallet => wallet.currency.code === 'AG') as Wallet\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public addQuantity(type: RedemptionUnit): void {\n        if (this.willExceedBalance(type)) {\n            return\n        }\n\n        ;(this.redemption as any)[type] += 1\n    }\n\n    public subtractQuantity(type: RedemptionUnit): void {\n        if ((this.redemption as any)[type] === 0) {\n            return\n        }\n        ;(this.redemption as any)[type] -= 1\n    }\n\n    public openRedeemModal(): void {\n        if (this.addressForm) {\n            this.addressForm.submit()\n        }\n        if (this.redemption.method === 'delivery' && !this.addressForm.isValid()) {\n            return\n        }\n        const modal = this.ngbModal.open(RedemptionConfirmModalComponent, {\n            windowClass: 'modal-primary',\n            backdrop: 'static',\n        })\n        const component = modal.componentInstance as RedemptionConfirmModalComponent\n        component.redemption = this.redemption\n        component.address = this.address\n        component.onExecute.subscribe(() => {\n            this.securityCheckService.getScopePermission('banking').subscribe(() => {\n                this.submitRedemption()\n                modal.close()\n            })\n        })\n    }\n\n    public resetDenomination(): void {\n        this.redemption.oneGram = 0\n        this.redemption.fiveGram = 0\n        this.redemption.fiftyGram = 0\n        this.redemption.hundredGram = 0\n        this.redemption.thousandGram = 0\n        this.redemption.twoOunce = 0\n        this.redemption.fiveOunce = 0\n        this.redemption.tenOunce = 0\n        this.redemption.hundredOunce = 0\n        this.redemption.oneKilogram = 0\n    }\n\n    public submitRedemption(): void {\n        this.isLoading = true\n        const body = {\n            type: this.redemption.type,\n            method: this.redemption.method,\n            denomination: {\n                oneGram: this.redemption.oneGram,\n                fiveGram: this.redemption.fiveGram,\n                fiftyGram: this.redemption.fiftyGram,\n                hundredGram: this.redemption.hundredGram,\n                thousandGram: this.redemption.thousandGram,\n                twoOunce: this.redemption.twoOunce,\n                fiveOunce: this.redemption.fiveOunce,\n                tenOunce: this.redemption.tenOunce,\n                hundredOunce: this.redemption.hundredOunce,\n                oneKilogram: this.redemption.oneKilogram,\n            },\n            userId: this.user?.id ?? this.session.user.id,\n            transaction: {\n                currency: {\n                    code: this.redemption.type === 'gold' ? 'AU' : 'AG',\n                },\n                amount: this.redemptionsService.totalOunces(this.redemption),\n            },\n            shippingAddress: this.redemption.method === 'self-collect' ? null : this.address,\n        }\n        this.subscriptions.add(\n            this.securityCheckService\n                .getScopePermission('banking')\n                .pipe(\n                    flatMap(() =>\n                        this.isEditing\n                            ? this.http.put<Redemption>(`/admin/redemptions/${this.redemption.id}`, body)\n                            : this.http.post<Redemption>('/redemption', body)\n                    ),\n                    finalize(() => {\n                        this.isLoading = false\n                        this.resetDenomination()\n                        this.address = {} as IAddress\n                        this.redemption.method = 'self-collect'\n                    })\n                )\n                .subscribe(() => {\n                    this.toastr.success(\n                        this.isEditing\n                            ? 'Redemption updated'\n                            : `${this.translate.instant('redemption-form.redemption-submitted')}`\n                    )\n                    this.onRedemptionSubmitted.emit()\n                    this.walletsService.fetch()\n                })\n        )\n    }\n\n    public willExceedBalance(unit: RedemptionUnit): boolean {\n        const total = this.redemptionsService.totalOunces(this.redemption)\n        const value = this.redemptionsService.getOunces(\n            { type: this.redemption.type, [unit]: 1 } as Partial<Redemption>,\n            unit\n        )\n        const balance =\n            this.redemption.type === 'gold' ? this.auWallet?.availableBalance : this.agWallet?.availableBalance\n        return new BigNumber(total).plus(value).isGreaterThan(balance || 0)\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common.module'\nimport { RedemptionConfirmModalComponent } from './redemption-confirm-modal.component'\nimport { RedemptionFormComponent } from './redemption-form.component'\n\n@NgModule({\n    declarations: [RedemptionFormComponent, RedemptionConfirmModalComponent],\n    exports: [RedemptionFormComponent],\n    imports: [CommonModule],\n})\nexport class RedemptionModule {}\n","import { Component, EventEmitter } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { IAddress, Redemption, RedemptionUnit } from 'src/app/common/api-interfaces'\nimport { RedemptionService } from '../services/redemption.service'\n\n@Component({\n    selector: 'redemption-confirm-modal',\n    templateUrl: 'redemption-confirm-modal.component.html',\n})\nexport class RedemptionConfirmModalComponent {\n    public redemption: Partial<Redemption>\n    public address: IAddress | null\n    public onExecute = new EventEmitter<void>()\n    public confirmButtonText = 'Confirm & Email Collection Details'\n    public cancelButtonText = 'Cancel'\n    public denominations: RedemptionUnit[] = [\n        'oneGram',\n        'fiveGram',\n        'fiftyGram',\n        'hundredGram',\n        'thousandGram',\n        'twoOunce',\n        'fiveOunce',\n        'tenOunce',\n        'hundredOunce',\n        'oneKilogram',\n    ]\n    public isPreview = false\n\n    constructor(public activeModal: NgbActiveModal, private redemptionsService: RedemptionService) {}\n\n    public buildDenomination(unit: RedemptionUnit): string {\n        if (!this.redemption[unit]) {\n            return ''\n        }\n        return `${this.redemption[unit]} x ${this.convertQuantityKey(unit)} (${this.redemptionsService.getOunces(\n            this.redemption,\n            unit\n        )} ${this.redemption.type === 'gold' ? 'AU' : 'AG'})`\n    }\n\n    public convertQuantityKey(key: RedemptionUnit): string {\n        switch (key) {\n            case 'oneGram':\n                return '1 Gram'\n            case 'fiveGram':\n                return '5 Gram'\n            case 'fiftyGram':\n                return '50 Gram'\n            case 'hundredGram':\n                return '100 Gram'\n            case 'thousandGram':\n                return '1000 Gram'\n            case 'twoOunce':\n                return '2 Ounce'\n            case 'fiveOunce':\n                return '5 Ounce'\n            case 'tenOunce':\n                return '10 Ounce'\n            case 'hundredOunce':\n                return '100 Ounce'\n            case 'oneKilogram':\n                return '1 Kilogram'\n            default:\n                return ''\n        }\n    }\n\n    public hasValue(unit: RedemptionUnit): boolean {\n        return !!this.redemption[unit]\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Review and Execute</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped table-borderless mb-0\\\">\\n            <tbody>\\n                <tr>\\n                    <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Precious Metal Type</th>\\n                    <td>{{ redemption.type === 'gold' ? 'Gold Troy Ounce' : 'Silver Troy Ounce' }}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Transaction Type</th>\\n                    <td>{{ 'common.redeem' | translate }}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold align-top\\\" scope=\\\"row\\\">Redeem Denomination</th>\\n                    <td class=\\\"align-top\\\">\\n                        <ng-container *ngFor=\\\"let unit of denominations\\\">\\n                            <div *ngIf=\\\"hasValue(unit)\\\">{{ buildDenomination(unit) }}</div>\\n                        </ng-container>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Redemption Method</th>\\n                    <td>{{ redemption.method === 'self-collect' ? 'Self Collect' : 'Delivery' }}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold align-top\\\" scope=\\\"row\\\">\\n                        {{ redemption.method === 'self-collect' ? 'Self Collection Details' : 'Delivery Address' }}\\n                    </th>\\n                    <td>\\n                        <ng-container *ngIf=\\\"redemption.method === 'self-collect'; else deliveryTemplate\\\">\\n                            <p class=\\\"mb-0\\\">{{ 'common.address' | translate }}:</p>\\n                            <p>\\n                                Singapore Precious Metals Exchange Pte Ltd <br />\\n                                Le Freeport, 32 Changi North Crescent,<br />Singapore, 499643\\n                            </p>\\n                            <p class=\\\"mb-0\\\">Phone:</p>\\n                            <p>+65 8877 8686</p>\\n                            <p class=\\\"mb-0\\\">{{ 'common.email' | translate }}:</p>\\n                            <p>customerservice@sgpmx.com</p>\\n                        </ng-container>\\n                        <ng-template #deliveryTemplate>\\n                            <postal-address [address]=\\\"address\\\"></postal-address>\\n                        </ng-template>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onExecute.emit()\\\" *ngIf=\\\"!isPreview\\\">{{ confirmButtonText }}</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.dismiss()\\\">{{ cancelButtonText }}</button>\\n</div>\\n\";"]}