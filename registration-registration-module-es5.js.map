{"version":3,"sources":["webpack:///src/app/registration/registration.component.html","webpack:///src/app/common/terms-modal/term-fees/term-fees.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/store/fees/fees.store.ts","webpack:///src/app/common/services/compliance/term.service.ts","webpack:///src/app/store/fees/fees.query.ts","webpack:///src/app/registration/registration.module.ts","webpack:///src/app/common/terms-modal/sgpmx-term-fees/sgpmx-term-fees.component.html","webpack:///src/app/registration/registration-notice/registration-notice.component.ts","webpack:///src/app/registration/registration-notice/registration-notice.component.html","webpack:///src/app/common/terms-modal/sgpmx-term-fees/sgpmx-term-fees.component.ts","webpack:///src/app/registration/email-verification-modal.component.html","webpack:///node_modules/ease-component/index.js","webpack:///src/app/common/terms-modal/terms-modal.component.ts","webpack:///src/app/common/terms-modal/terms-modal.module.ts","webpack:///src/app/common/terms-modal/term-fees/term-fees.component.ts","webpack:///src/app/store/fees/fees.service.ts","webpack:///src/app/registration/email-verification-modal.component.ts","webpack:///src/app/common/terms-modal/terms-modal.component.html","webpack:///src/app/registration/registration.auth-guard.ts","webpack:///node_modules/scroll/index.js","webpack:///src/app/registration/registration-routing.module.ts"],"names":["RegistrationComponent","router","route","http","alertService","loginService","ngbModal","translate","countriesSortedByName","user","type","details","business","birthday","termsAccepted","hasReadTerms","isLoading","isInvitation","isRegistrationDisabled","requiredPasswordStrength","passwordStrength","referrer","appName","displayName","referredByOptions","instant","customReferredBy","subscriptions","queryParamMap","subscribe","params","activationToken","get","undefined","Object","assign","id","email","headers","add","severity","message","navigate","has","referrerId","externalId","setting","value","setTimeout","openNoticeModal","unsubscribe","registrationForm","valid","set","referredBy","body","post","pipe","login","password","reset","modal","open","backdrop","keyboard","centered","componentInstance","result","then","error","clear","name","errors","termsModal","windowClass","termsModalComponent","accepted","ngModel","control","markAsTouched","openTermsModal","resetForm","selector","template","FeesStore","providedIn","idKey","TermService","term","terms","privacy","userId","getTermsAcceptance","termsAcceptance","FeesQuery","store","query","selectEntity","entity","method","currencyCode","currency","code","fee","usdFee","RegistrationModule","declarations","imports","entryComponents","RegistrationNoticeComponent","SgpmxTermFeesComponent","session","feesQuery","feesService","fees","isAuthenticated","userStream","sessionUser","snapshot","goldFees","silverFees","fetch","found","find","relative","fixed","findByPrimaryAttributes","gst","times","toFixed","exports","linear","n","inQuad","outQuad","inOutQuad","inCube","outCube","inOutCube","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","inSine","Math","cos","PI","outSine","sin","inOutSine","inExpo","pow","outExpo","inOutExpo","inCirc","sqrt","outCirc","inOutCirc","inBack","s","outBack","inOutBack","inBounce","outBounce","inOutBounce","ease","scroll","TermsModalComponent","activeModal","termsService","element","step","viewOnly","isDown","fetchEvent","scrollHandler","modalContainer","scrollTop","scrollHeight","offsetHeight","subheader","getApplicableTerm","next","nativeElement","querySelector","addEventListener","removeEventListener","close","top","clientHeight","duration","TermsModalModule","TermFeesComponent","currencies","limit","response","data","preferredCurrency","amount","baseCurrency","base","counter","convert","FeesService","usdFees","fetchAsObservable","EmailVerificationModalComponent","RegistrationAuthGuard","parseUrl","E_NOSCROLL","Error","E_CANCELLED","min","ms","Date","now","module","left","make","prop","el","to","opts","cb","noop","start","from","isNaN","cancelled","requestAnimationFrame","animate","cancel","timestamp","time","eased","routes","path","component","canActivate","RegistrationRoutingModule","forChild","providers"],"mappings":"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","file":"registration-registration-module-es5.js","sourcesContent":["export default \"<div class=\\\"registration-page fullscreen-bg-body e2e-registration-page\\\">\\n    <div class=\\\"registration-box\\\">\\n        <a [routerLink]=\\\"['/']\\\">\\n            <img class=\\\"registration-logo\\\" [src]=\\\"getLogo()\\\" />\\n        </a>\\n        <div class=\\\"card shadow b-a-0\\\">\\n            <div class=\\\"card-body\\\">\\n                <img src=\\\"/img/icons/wallet.svg\\\" draggable=\\\"false\\\" class=\\\"float-right\\\" />\\n                <h2 class=\\\"text-primary mb-1\\\">{{ 'common.sign-up' | translate }}</h2>\\n                <p class=\\\"text-custom\\\">{{ 'common.create-your-account' | translate: { value: displayName } }}</p>\\n                <p class=\\\"callout callout-info mb-3 text-gray\\\" *ngIf=\\\"referrerId\\\">\\n                    {{ 'common.you-have-been-invited-by' | translate }}\\n                    <span class=\\\"text-primary\\\" *ngIf=\\\"referrer; else loading\\\">{{ referrer.user.name }}</span>\\n                </p>\\n                <div *ngIf=\\\"isRegistrationDisabled\\\" class=\\\"callout callout-warning text-warning\\\">\\n                    {{ 'common.registration-disabled' | translate }}\\n                </div>\\n                <alert-outlet></alert-outlet>\\n                <div class=\\\"callout callout-danger mt-0\\\" *ngIf=\\\"appName !== 'sgpmx' && user.type === 'business'\\\">\\n                    <p class=\\\"mb-0\\\">{{ 'common.please-note-that' | translate }} <b>500 USD</b> {{ 'common.is-charged' | translate }}</p>\\n                </div>\\n                <form\\n                    #registrationForm=\\\"ngForm\\\"\\n                    class=\\\"form-validation\\\"\\n                    (ngSubmit)=\\\"submit()\\\"\\n                    [ngClass]=\\\"{ 'ng-submitted': registrationForm.submitted }\\\"\\n                    novalidate\\n                >\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-sm-12\\\">\\n                            <div class=\\\"custom-control custom-radio\\\">\\n                                <input\\n                                    type=\\\"radio\\\"\\n                                    id=\\\"typePersonal\\\"\\n                                    name=\\\"type\\\"\\n                                    value=\\\"personal\\\"\\n                                    class=\\\"custom-control-input\\\"\\n                                    [(ngModel)]=\\\"user.type\\\"\\n                                />\\n                                <label class=\\\"custom-control-label font-md\\\" for=\\\"typePersonal\\\">{{ 'common.personal-account' | translate }}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-12\\\">\\n                            <div class=\\\"custom-control custom-radio\\\">\\n                                <input\\n                                    type=\\\"radio\\\"\\n                                    id=\\\"typeCorporate\\\"\\n                                    name=\\\"type\\\"\\n                                    value=\\\"business\\\"\\n                                    class=\\\"custom-control-input\\\"\\n                                    [(ngModel)]=\\\"user.type\\\"\\n                                />\\n                                <label class=\\\"custom-control-label font-md\\\" for=\\\"typeCorporate\\\">{{ 'common.corporate-account' | translate }}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"user.type === 'business'\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"companyName\\\">{{ 'common.entity-name' | translate }}</label>\\n                        <input\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            id=\\\"companyName\\\"\\n                            name=\\\"companyName\\\"\\n                            [(ngModel)]=\\\"business.name\\\"\\n                            autocomplete=\\\"organization\\\"\\n                            #companyName=\\\"ngModel\\\"\\n                            required\\n                        />\\n                        <div *ngIf=\\\"companyName.invalid && (registrationForm.submitted || companyName.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"companyName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-sm-12\\\">\\n                            <label class=\\\"font-md\\\" for=\\\"firstName\\\">{{ 'common.first-name' | translate }}</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-lg\\\"\\n                                id=\\\"firstName\\\"\\n                                name=\\\"firstName\\\"\\n                                [(ngModel)]=\\\"details.firstName\\\"\\n                                autocomplete=\\\"given-name\\\"\\n                                #firstName=\\\"ngModel\\\"\\n                                required\\n                                nameValidator\\n                            />\\n                            <div *ngIf=\\\"firstName.invalid && (registrationForm.submitted || firstName.dirty)\\\" class=\\\"error-messages\\\">\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstName?.errors?.required\\\">\\n                                    {{ 'common.this-is-required' | translate }}\\n                                </div>\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstName?.errors?.nameError\\\">\\n                                    {{ 'common.only-alphabets-are-allowed' | translate }}\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-12\\\">\\n                            <label class=\\\"font-md\\\" for=\\\"lastName\\\">{{ 'common.last-name' | translate }}</label>\\n                            <input\\n                                type=\\\"text\\\"\\n                                class=\\\"form-control form-control-lg\\\"\\n                                id=\\\"lastName\\\"\\n                                name=\\\"lastName\\\"\\n                                [(ngModel)]=\\\"details.lastName\\\"\\n                                autocomplete=\\\"family-name\\\"\\n                                #lastName=\\\"ngModel\\\"\\n                                required\\n                                nameValidator\\n                            />\\n                            <div *ngIf=\\\"lastName.invalid && (registrationForm.submitted || lastName.dirty)\\\" class=\\\"error-messages\\\">\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastName?.errors?.required\\\">\\n                                    {{ 'common.this-is-required' | translate }}\\n                                </div>\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastName?.errors?.nameError\\\">\\n                                    {{ 'common.only-alphabets-are-allowed' | translate }}\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"email\\\">{{ 'common.email' | translate }}</label>\\n                        <input\\n                            type=\\\"email\\\"\\n                            id=\\\"email\\\"\\n                            name=\\\"email\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            [(ngModel)]=\\\"user.email\\\"\\n                            [disabled]=\\\"isInvitation\\\"\\n                            autocomplete=\\\"email\\\"\\n                            #email=\\\"ngModel\\\"\\n                            email\\n                            required\\n                        />\\n                        <div *ngIf=\\\"email.invalid && (registrationForm.submitted || email.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"email?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"email?.errors?.email\\\">{{ 'common.not-a-valid-email-address' | translate }}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"password\\\">{{ 'common.password' | translate }}</label>\\n                        <input\\n                            type=\\\"password\\\"\\n                            id=\\\"password\\\"\\n                            name=\\\"password\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            [(ngModel)]=\\\"user.password\\\"\\n                            [passwordStrength]=\\\"requiredPasswordStrength\\\"\\n                            (onEntropyChange)=\\\"passwordStrength = $event\\\"\\n                            autocomplete=\\\"new-password\\\"\\n                            #password=\\\"ngModel\\\"\\n                            required\\n                        />\\n                        <div class=\\\"mt-2\\\">\\n                            <password-strength-bar\\n                                [requiredStrength]=\\\"requiredPasswordStrength\\\"\\n                                [strength]=\\\"passwordStrength\\\"\\n                            ></password-strength-bar>\\n                        </div>\\n                        <div *ngIf=\\\"password.invalid && (registrationForm.submitted || password.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"password?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"password?.errors?.weakPassword\\\">\\n                                {{ 'common.this-is-required' | translate }}\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-sm-12\\\">\\n                            <label class=\\\"form-control-label font-md\\\" for=\\\"birthday\\\">{{ 'common.birthday' | translate }}</label>\\n                            <input\\n                                class=\\\"form-control form-control-lg\\\"\\n                                type=\\\"text\\\"\\n                                id=\\\"birthday\\\"\\n                                name=\\\"birthday\\\"\\n                                [(ngModel)]=\\\"birthday\\\"\\n                                mask=\\\"00/00/0000\\\"\\n                                #birthdayField=\\\"ngModel\\\"\\n                                required\\n                                birthdayValidator\\n                            />\\n                            <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                            <div *ngIf=\\\"birthdayField.invalid && (registrationForm.submitted || birthdayField.dirty)\\\" class=\\\"error-messages\\\">\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.required\\\">\\n                                    {{ 'common.this-is-required' | translate }}\\n                                </div>\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.invalidDate\\\">\\n                                    {{ 'common.invalid-date' | translate }}\\n                                </div>\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.dateLongAgo\\\">\\n                                    {{ 'common.date-should-be-1900' | translate }}\\n                                </div>\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.dateInFuture\\\">\\n                                    {{ 'common.you-should-18' | translate }}\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-12\\\">\\n                            <label class=\\\"form-control-label font-md\\\" for=\\\"nationality\\\">{{ 'common.nationality' | translate }}</label>\\n                            <ng-select\\n                                class=\\\"ng-select-lg\\\"\\n                                id=\\\"nationality\\\"\\n                                name=\\\"nationality\\\"\\n                                [(ngModel)]=\\\"details.nationality\\\"\\n                                bindLabel=\\\"name\\\"\\n                                bindValue=\\\"alpha2\\\"\\n                                [items]=\\\"countriesSortedByName\\\"\\n                                [clearable]=\\\"false\\\"\\n                                [virtualScroll]=\\\"true\\\"\\n                                #nationality=\\\"ngModel\\\"\\n                                autocomplete=\\\"false\\\"\\n                                aria-autocomplete=\\\"false\\\"\\n                                required\\n                            >\\n                                <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item.emoji }} {{ item.name }}</ng-template>\\n                                <ng-template ng-option-tmp let-item=\\\"item\\\" let-search=\\\"searchTerm\\\"\\n                                    >{{ item.emoji }} <span [ngOptionHighlight]=\\\"search\\\">{{ item.name }}</span></ng-template\\n                                >\\n                            </ng-select>\\n                            <div *ngIf=\\\"nationality.invalid && (registrationForm.submitted || nationality.dirty)\\\" class=\\\"error-messages\\\">\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"nationality?.errors?.required\\\">\\n                                    {{ 'common.this-is-required' | translate }}\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"!referrerId\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <label class=\\\"font-md\\\" for=\\\"referral\\\">{{ 'registration.did-someone-refer-you' | translate }}</label>\\n                            <ng-select\\n                                class=\\\"ng-select-lg\\\"\\n                                name=\\\"referredBy\\\"\\n                                id=\\\"referredBy\\\"\\n                                [placeholder]=\\\"'registration.no-one-referred-me' | translate\\\"\\n                                [(ngModel)]=\\\"details.referredBy\\\"\\n                                [items]=\\\"referredByOptions\\\"\\n                                [clearable]=\\\"true\\\"\\n                                dropdownPosition=\\\"bottom\\\"\\n                                #referredByInput=\\\"ngModel\\\"\\n                            >\\n                                <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                    {{ item }}\\n                                </ng-template>\\n                                <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                                    {{ item }}\\n                                </ng-template>\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"details.referredBy === 'Other'\\\">\\n                        <div class=\\\"form-group col\\\">\\n                            <label class=\\\"font-md\\\" for=\\\"customReferredBy\\\">{{ 'common.please-specify' | translate }}</label>\\n                            <input\\n                                class=\\\"form-control form-control-lg\\\"\\n                                type=\\\"text\\\"\\n                                id=\\\"customReferredBy\\\"\\n                                name=\\\"customReferredBy\\\"\\n                                [(ngModel)]=\\\"customReferredBy\\\"\\n                                #customReferredByInput=\\\"ngModel\\\"\\n                                required\\n                            />\\n                            <div\\n                                *ngIf=\\\"customReferredByInput.invalid && (registrationForm.submitted || customReferredByInput.dirty)\\\"\\n                                class=\\\"error-messages\\\"\\n                            >\\n                                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"customReferredByInput?.errors?.required\\\">\\n                                    {{ 'common.this-is-required' | translate }}\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input\\n                                type=\\\"checkbox\\\"\\n                                class=\\\"custom-control-input\\\"\\n                                name=\\\"terms\\\"\\n                                [(ngModel)]=\\\"termsAccepted\\\"\\n                                #termsCheckbox=\\\"ngModel\\\"\\n                                (ngModelChange)=\\\"onAcceptTerms($event, termsCheckbox)\\\"\\n                            />\\n                            <span class=\\\"custom-control-label font-md\\\"\\n                                >{{ 'common.i-have-read' | translate }}\\n                                <a href (click)=\\\"$event.stopPropagation(); openTermsModal(); $event.preventDefault()\\\">{{\\n                                    'common.terms-and-conditions' | translate\\n                                }}</a></span\\n                            >\\n                        </label>\\n                    </div>\\n                    <button\\n                        type=\\\"submit\\\"\\n                        class=\\\"btn btn-primary btn-lg btn-block mb-1\\\"\\n                        [ngClass]=\\\"{ loading: isLoading }\\\"\\n                        [disabled]=\\\"isLoading || isRegistrationDisabled\\\"\\n                    >\\n                        {{ (user.id ? 'common.open' : 'common.create') | translate }} {{ 'common.account' | translate | lowercase }}\\n                    </button>\\n                </form>\\n                <ng-template #loading>\\n                    <svg class=\\\"spinner spinner-inline spinner-dark\\\" viewBox=\\\"0 0 50 50\\\">\\n                        <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"5\\\"></circle>\\n                    </svg>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n    <p class=\\\"text-center\\\">\\n        <a class=\\\"text-white\\\" [routerLink]=\\\"['/login']\\\">{{ 'common.already-have-account' | translate }}</a>\\n    </p>\\n</div>\\n\";","export default \"<div class=\\\"container h-100\\\">\\n    <div class=\\\"row justify-content-end\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <currency-select-tab\\n                *ngIf=\\\"currency\\\"\\n                [(currency)]=\\\"currency\\\"\\n                (currencyChange)=\\\"onCurrencyChange()\\\"\\n                [user]=\\\"session.user\\\"\\n                [useShortCurrencyNames]=\\\"true\\\"\\n                [moreButtonOptions]=\\\"{ text: 'Others', hasCaret: true }\\\"\\n                #currencySelect\\n            ></currency-select-tab>\\n        </div>\\n    </div>\\n    <div class=\\\"row mt-2\\\" *ngIf=\\\"!isLoading; else loader\\\">\\n        <div class=\\\"col\\\">\\n            <table class=\\\"table table-borderless table-striped mb-0\\\">\\n                <tbody>\\n                    <ng-container *ngIf=\\\"currency && ['fiat', 'crypto'].includes(currency.type)\\\">\\n                        <ng-container *ngIf=\\\"currency.code === 'USD'\\\">\\n                            <tr>\\n                                <td class=\\\"font-weight-bold\\\">{{ 'common.monthly-account-fee' | translate }}</td>\\n                                <td class=\\\"text-right\\\">\\n                                    <ng-container *ngIf=\\\"getFee('account-fee', 'internal'); else noFee; let fee\\\">\\n                                        <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                    </ng-container>\\n                                </td>\\n                            </tr>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"getFee('gst', 'internal'); let fee\\\">\\n                            <tr>\\n                                <td class=\\\"font-weight-bold\\\">GST</td>\\n                                <td class=\\\"text-right\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </td>\\n                            </tr>\\n                        </ng-container>\\n                    </ng-container>\\n                    <tr *ngIf=\\\"currency?.type !== 'metal'\\\">\\n                        <td class=\\\"font-weight-bold\\\">{{ 'common.internal-transfer' | translate }}</td>\\n                        <td class=\\\"text-right\\\">\\n                            <ng-container *ngIf=\\\"getFee('transfer', 'internal'); else noFee; let fee\\\">\\n                                <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                            </ng-container>\\n                        </td>\\n                    </tr>\\n                    <ng-container *ngIf=\\\"currency?.type === 'fiat'\\\">\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.deposit-via' | translate }} SWIFT</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('deposit', 'swift'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.withdrawal-via' | translate }} SWIFT</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('withdrawal', 'swift'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.deposit-via' | translate }} {{ 'common.local' | translate | titlecase }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('deposit', 'local'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.withdrawal-via' | translate }} {{ 'common.local' | translate | titlecase }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('withdrawal', 'local'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.card-topup' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('withdrawal', 'card'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.card-unload' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('deposit', 'card'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"currency?.type === 'crypto'\\\">\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.deposit' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('deposit', 'crypto'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.withdrawal' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('withdrawal', 'crypto'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"currency?.type === 'metal'\\\">\\n                        <tr>\\n                            <td class=\\\"font-weight-bold\\\">{{ 'common.buy' | translate }} &amp; {{ 'common.sell' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('service', 'internal'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                    </ng-container>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #loader>\\n    <div class=\\\"d-flex align-items-center justify-content-center term-fees-loader\\\">{{ 'common.loading-fees' | translate }}...</div>\\n</ng-template>\\n<ng-template #noFee>\\n    <span class=\\\"text-success\\\">{{ 'common.free' | translate | uppercase }}</span>\\n</ng-template>\\n<ng-template #withFee let-fee=\\\"fee\\\">\\n    <div>\\n        <span *ngIf=\\\"fee.relative && fee.fixed\\\">\\n            {{ convert(fee.fixed, fee.currency) | amount: currency.decimalPlaces }} {{ currency.code }} + {{ fee.relative | percent: '1.2' }}\\n        </span>\\n        <span *ngIf=\\\"fee.relative && !fee.fixed\\\">\\n            {{ fee.relative | percent: '1.2' }}\\n        </span>\\n        <span *ngIf=\\\"!fee.relative && fee.fixed\\\"> {{ convert(fee.fixed, fee.currency) | amount: currency.decimalPlaces }} {{ currency.code }} </span>\\n    </div>\\n    <div *ngIf=\\\"fee.min\\\">\\n        <small class=\\\"text-muted\\\">\\n            min. {{ convert(fee.min, fee.currency) | amount: currency.decimalPlaces }} {{ currency.type !== 'metal' ? currency.code : 'USD' }}\\n        </small>\\n    </div>\\n    <div *ngIf=\\\"fee.max\\\">\\n        <small class=\\\"text-muted\\\">\\n            {{ 'common.max' | translate }}. {{ convert(fee.max, fee.currency) | amount: currency.decimalPlaces }}\\n            {{ currency.type !== 'metal' ? currency.code : 'USD' }}\\n        </small>\\n    </div>\\n    <div *ngIf=\\\"fee.minValue\\\">\\n        <small class=\\\"text-muted\\\">\\n            min. {{ fee.type }} {{ convert(fee.minValue, fee.currency) | amount: currency.decimalPlaces }}\\n            {{ currency.type !== 'metal' ? currency.code : 'USD' }}\\n        </small>\\n    </div>\\n</ng-template>\\n\";","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm, NgModel } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport formatDate from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\nimport { omit, pick } from 'lodash'\nimport { of, Subscription } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { BusinessDetails, IUser, Referrer, Setting, UserDetails } from '../common/api-interfaces'\nimport { countriesSortedByName } from '../common/countries'\nimport { AlertService } from '../common/services/alert.service'\nimport { LoginService } from '../common/services/login.service'\nimport { TermsModalComponent } from '../common/terms-modal/terms-modal.component'\nimport { formatMaskedDate } from '../common/user-details-form/user-details-form.component'\nimport { EmailVerificationModalComponent } from './email-verification-modal.component'\nimport { RegistrationNoticeComponent } from './registration-notice/registration-notice.component'\n\n@Component({\n    selector: 'registration',\n    templateUrl: 'registration.component.html',\n})\nexport class RegistrationComponent implements OnInit, OnDestroy, AfterViewInit {\n    public countriesSortedByName = countriesSortedByName\n\n    public activationToken?: string\n    public user: Partial<IUser> & { password?: string } = {\n        type: 'personal',\n    }\n    public details: Partial<UserDetails> = {}\n    public business: Partial<BusinessDetails> = {}\n    public birthday: string | null = ''\n\n    @ViewChild('registrationForm')\n    public registrationForm: NgForm\n    public termsAccepted = false\n    public hasReadTerms = false\n\n    public isLoading = false\n    public isInvitation = false\n    public isRegistrationDisabled = false\n\n    public requiredPasswordStrength = 60\n    public passwordStrength = 0\n    public externalId: string | undefined\n    public referrerId: string | undefined\n    public referrer: Referrer | null = null\n    public appName = environment.appName\n    public displayName = environment.displayName\n    public referredByOptions = [\n        `${this.translate.instant('registration.friend-relative')}`,\n        `${this.translate.instant('registration.business-contact')}`,\n        `${this.translate.instant('registration.corporate-service-provider')}`,\n        `Authorised Partner of ${environment.displayName}`,\n        'Other',\n    ]\n    public customReferredBy = ''\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private http: HttpClient,\n        public alertService: AlertService,\n        private loginService: LoginService,\n        private ngbModal: NgbModal,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.route.queryParamMap.subscribe(params => {\n            this.activationToken = params.get('activationToken') || undefined\n            Object.assign(this.user, {\n                id: params.get('userId') || undefined,\n                email: params.get('email') || undefined,\n            })\n            if (this.user.id && this.activationToken) {\n                this.http\n                    .get<IUser>(`/users/${this.user.id}`, {\n                        headers: new HttpHeaders({ 'X-Activation-Token': this.activationToken }),\n                    })\n                    .subscribe(\n                        user => {\n                            Object.assign(this.user, pick(user, ['type', 'email', 'details']))\n                            this.details = this.user.details || {}\n                            this.business = this.user.details?.business || {}\n                            this.birthday = this.details.birthday\n                                ? formatDate(parseISO(this.details.birthday), 'ddMMyyyy')\n                                : null\n                            this.isInvitation = !!user.email\n                        },\n                        () => {\n                            this.alertService.add({\n                                severity: 'danger',\n                                message: this.translate.instant('common.invitation-expired'),\n                            })\n                            return this.router.navigate(['/login'])\n                        }\n                    )\n            }\n            if (params.has('referrerId')) {\n                this.referrerId = params.get('referrerId')!\n\n                this.http.get<Referrer>(`/referrers/${this.referrerId}`).subscribe(\n                    referrer => {\n                        this.referrer = referrer\n                    },\n                    () => {\n                        this.referrerId = undefined\n                        this.referrer = null\n                    }\n                )\n            }\n            this.externalId = params.get('externalId') ?? undefined\n        })\n        this.subscriptions.add(\n            this.http.get<Setting>(`/settings/registration-disabled`).subscribe(setting => {\n                this.isRegistrationDisabled = setting && (setting.value as boolean)\n            })\n        )\n    }\n\n    public ngAfterViewInit(): void {\n        setTimeout(() => {\n            if (this.appName === 'sgpmx') {\n                this.openNoticeModal()\n            }\n        }, 200)\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public submit(): void {\n        if (!this.registrationForm.valid) {\n            return\n        }\n        let headers = new HttpHeaders()\n        if (!this.termsAccepted) {\n            this.alertService.add({\n                severity: 'danger',\n                message: this.translate.instant('common.you-must-accept-terms'),\n            })\n            return\n        }\n        if (this.activationToken) {\n            headers = headers.set('X-Activation-Token', this.activationToken)\n        }\n        if (this.details.referredBy === 'Other') {\n            this.details.referredBy = this.customReferredBy\n        }\n        const body = {\n            ...this.user,\n            details: {\n                ...this.details,\n                birthday: this.birthday ? formatMaskedDate(this.birthday) : null,\n                ...(this.user.type === 'business' ? { business: this.business } : {}),\n            },\n            externalId: this.externalId ?? undefined,\n        }\n        if (this.referrer) {\n            body.referrer = { id: this.referrer.id } as Referrer\n        }\n        this.isLoading = true\n        this.http\n            .post<IUser>('/users', omit(body, ['id']), { headers })\n            .pipe(\n                flatMap(user =>\n                    this.isInvitation\n                        ? this.loginService.login({\n                              password: this.user.password,\n                              email: user.email,\n                          })\n                        : of(user)\n                )\n            )\n            .subscribe(\n                async user => {\n                    if (this.isInvitation) {\n                        await this.router.navigate(['/verify'])\n                    } else {\n                        this.reset()\n                        const modal = this.ngbModal.open(EmailVerificationModalComponent, {\n                            backdrop: 'static',\n                            keyboard: false,\n                            centered: true,\n                        })\n                        modal.componentInstance.email = user.email\n                        await modal.result.then(() => this.router.navigate(['/login']))\n                    }\n                },\n                error => {\n                    this.isLoading = false\n                    this.alertService.clear()\n                    if (error.name === 'UniqueConstraintError') {\n                        switch (error.errors[0]) {\n                            case 'email must be unique':\n                                this.alertService.add({\n                                    severity: 'danger',\n                                    message: this.translate.instant('common.email-already-in-use'),\n                                })\n                        }\n                    }\n                    throw error\n                }\n            )\n    }\n\n    public openTermsModal(): void {\n        const termsModal = this.ngbModal.open(TermsModalComponent, {\n            windowClass: 'modal-primary',\n            backdrop: 'static',\n            keyboard: false,\n        })\n        const termsModalComponent = termsModal.componentInstance as TermsModalComponent\n        termsModalComponent.user = this.user as IUser\n        termsModal.result\n            .then(() => {\n                this.termsAccepted = true\n                this.hasReadTerms = true\n            })\n            .catch(() => {\n                this.termsAccepted = false\n            })\n    }\n\n    public onAcceptTerms(accepted: boolean, ngModel: NgModel): void {\n        if (accepted && !this.hasReadTerms) {\n            ngModel.control.markAsTouched()\n            this.openTermsModal()\n        }\n    }\n\n    public getLogo(): string {\n        switch (environment.appName) {\n            case 'etransfer':\n                return '/img/brand/logo.svg'\n            default:\n                return '/img/brand/logo-white-horizontal.svg'\n        }\n    }\n\n    public openNoticeModal(): void {\n        this.ngbModal.open(RegistrationNoticeComponent, {\n            windowClass: 'modal-primary',\n        })\n    }\n\n    private reset(): void {\n        this.user = {}\n        this.registrationForm.resetForm()\n        this.isLoading = false\n        this.alertService.clear()\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita'\nimport { IFee } from '../../common/api-interfaces'\n\nexport interface FeesState extends EntityState<IFee, string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'fees', idKey: 'id' })\nexport class FeesStore extends EntityStore<FeesState> {\n    constructor() {\n        super()\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Term, TermsAcceptance } from '../../api-interfaces'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TermService {\n    constructor(private http: HttpClient) {}\n\n    public create(term: Term): Observable<Term> {\n        return this.http.post<Term>('/admin/terms', { terms: term.terms, privacy: term.privacy })\n    }\n\n    public getApplicableTerm(userId?: string): Observable<Term> {\n        return userId\n            ? this.getTermsAcceptance(userId).pipe(map(termsAcceptance => termsAcceptance.term))\n            : this.http.get<Term>(`/terms`)\n    }\n\n    public getTermsAcceptance(userId: string): Observable<TermsAcceptance> {\n        return this.http.get<TermsAcceptance>(`/users/${userId}/terms-acceptance`)\n    }\n\n    public accept(termsAcceptance: TermsAcceptance, accepted = true): Observable<TermsAcceptance> {\n        return this.http.post<TermsAcceptance>(`/users/${termsAcceptance.user.id}/terms-acceptance`, {\n            termsAcceptance: {\n                id: termsAcceptance.id,\n            },\n            accepted,\n        })\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { QueryEntity } from '@datorama/akita'\nimport { Observable, of } from 'rxjs'\nimport { flatMap, map } from 'rxjs/operators'\nimport { FeeType, IFee, TransactionMethod } from 'src/app/common/api-interfaces'\nimport { FeesState, FeesStore } from './fees.store'\n\n@Injectable({ providedIn: 'root' })\nexport class FeesQuery extends QueryEntity<FeesState> {\n    constructor(protected store: FeesStore) {\n        super(store)\n    }\n\n    public findByPrimaryAttributes(query: {\n        type: FeeType\n        method: TransactionMethod\n        currencyCode: string\n    }): Observable<IFee | null> {\n        return this.selectEntity(\n            entity =>\n                entity.type === query.type &&\n                entity.method === query.method &&\n                query.currencyCode === entity.currency.code\n        ).pipe(\n            flatMap(fee =>\n                fee\n                    ? of(fee)\n                    : this.selectEntity(\n                          entity =>\n                              entity.type === query.type &&\n                              entity.method === query.method &&\n                              entity.currency.code === 'USD'\n                      ).pipe(map(usdFee => usdFee ?? null))\n            )\n        )\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { TermsModalModule } from '../common/terms-modal/terms-modal.module'\nimport { EmailVerificationModalComponent } from './email-verification-modal.component'\nimport { RegistrationNoticeComponent } from './registration-notice/registration-notice.component'\nimport { RegistrationRoutingModule } from './registration-routing.module'\nimport { RegistrationComponent } from './registration.component'\n\n@NgModule({\n    declarations: [RegistrationComponent, EmailVerificationModalComponent, RegistrationNoticeComponent],\n    imports: [CommonModule, RegistrationRoutingModule, TermsModalModule],\n    entryComponents: [EmailVerificationModalComponent],\n})\nexport class RegistrationModule {}\n","export default \"<div class=\\\"container h-100\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <ng-container *ngIf=\\\"!isLoading; else loader\\\">\\n                <h6>Buy &amp; Sell</h6>\\n                <table class=\\\"table table-borderless table-striped mb-2\\\">\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div class=\\\"font-weight-bold\\\">Gold Troy Ounce</div>\\n                                <span class=\\\"font-sm text-gray\\\">Buy &amp; Sell</span>\\n                            </td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('service', 'internal', 'AU'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <div class=\\\"font-weight-bold\\\">Silver Troy Ounce</div>\\n                                <span class=\\\"font-sm text-gray\\\">Buy &amp; Sell</span>\\n                            </td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('service', 'internal', 'AG'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <h6>{{ 'common.transfer' | translate }}</h6>\\n                <table class=\\\"table table-borderless table-striped b-b-1 mb-2\\\">\\n                    <tbody>\\n                        <tr>\\n                            <td>\\n                                <div class=\\\"font-weight-bold\\\">Gold Troy Ounce</div>\\n                                <span class=\\\"font-sm text-gray\\\">{{ 'common.transfer' | translate }}</span>\\n                            </td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('transfer', 'internal', 'AU'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <div class=\\\"font-weight-bold\\\">Silver Troy Ounce</div>\\n                                <span class=\\\"font-sm text-gray\\\">{{ 'common.transfer' | translate }}</span>\\n                            </td>\\n                            <td class=\\\"text-right\\\">\\n                                <ng-container *ngIf=\\\"getFee('transfer', 'internal', 'AG'); else noFee; let fee\\\">\\n                                    <ng-container *ngTemplateOutlet=\\\"withFee; context: { fee: fee }\\\"></ng-container>\\n                                </ng-container>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <p class=\\\"text-right font-sm\\\">\\n                    <i>* Subject to additional {{ getGst() | async }} GST</i>\\n                </p>\\n            </ng-container>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #loader>\\n    <div class=\\\"d-flex align-items-center justify-content-center\\\" [ngStyle]=\\\"{ width: '100%', height: '300px' }\\\">\\n        <ion-spinner color=\\\"primary\\\" name=\\\"dots\\\"></ion-spinner>\\n    </div>\\n</ng-template>\\n\\n<ng-template #noFee>\\n    <span class=\\\"text-success\\\">FREE</span>\\n</ng-template>\\n<ng-template #withFee let-fee=\\\"fee\\\">\\n    <div>\\n        <span *ngIf=\\\"fee.relative && fee.fixed\\\"> {{ fee.fixed | amount }} USD + {{ fee.relative | percent: '1.2' }}*</span>\\n        <span *ngIf=\\\"fee.relative && !fee.fixed\\\">{{ fee.relative | percent: '1.2' }}*</span>\\n        <span *ngIf=\\\"!fee.relative && fee.fixed\\\"> {{ fee.fixed | amount }} USD*</span>\\n    </div>\\n    <div *ngIf=\\\"fee.min\\\">\\n        <small class=\\\"text-muted\\\"> min. {{ fee.min | amount }} USD</small>\\n    </div>\\n    <div *ngIf=\\\"fee.max\\\">\\n        <small class=\\\"text-muted\\\"> max. {{ fee.max | amount }} USD </small>\\n    </div>\\n    <div *ngIf=\\\"fee.minValue\\\">\\n        <small class=\\\"text-muted\\\"> min. {{ fee.type }} {{ fee.minValue | amount }} USD</small>\\n    </div>\\n</ng-template>\\n\";","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n    selector: 'registration-notice',\n    templateUrl: 'registration-notice.component.html',\n})\nexport class RegistrationNoticeComponent {\n    constructor(public modal: NgbActiveModal) {}\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.important-notice' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <p>\\n        In line with Singapore’s efforts in the prevention of money laundering and terrorism financing under the Precious Stones and Precious Metals\\n        (Prevention of Money Laundering and Terrorism Financing) Act 2019 (“PSPM Act”), all customers are to adhere to Stacker Market’s account\\n        registration requirements, terms and conditions and to the following notice from the\\n        <a rel=\\\"noopener\\\" target=\\\"_blank\\\" href=\\\"https://acd.mlaw.gov.sg/images/List%20of%20Registered%20Dealers.pdf\\\">Ministry of Law Singapore</a>.\\n    </p>\\n    <ul>\\n        <li>\\n            <a\\n                rel=\\\"noopener\\\"\\n                target=\\\"_blank\\\"\\n                href=\\\"https://www.stackermarket.com/wp-content/uploads/2022/01/NoticeForCustomersPosterEnglishMar2020.pdf\\\"\\n                >Notice for Customers (English)</a\\n            >\\n        </li>\\n        <li>\\n            <a\\n                rel=\\\"noopener\\\"\\n                target=\\\"_blank\\\"\\n                href=\\\"https://www.stackermarket.com/wp-content/uploads/2022/01/NoticeForCustomersPosterChineseMar2020.pdf\\\"\\n                >客户须知(Chinese)</a\\n            >\\n        </li>\\n        <li>\\n            <a rel=\\\"noopener\\\" target=\\\"_blank\\\" href=\\\"https://www.stackermarket.com/wp-content/uploads/2022/01/NoticeForCustomersPosterMalayMar2020.pdf\\\"\\n                >Notis Bagi Pelanggan (Malay)</a\\n            >\\n        </li>\\n        <li>\\n            <a rel=\\\"noopener\\\" target=\\\"_blank\\\" href=\\\"https://www.stackermarket.com/wp-content/uploads/2022/01/NoticeForCustomersPosterTamilMar2020.pdf\\\"\\n                >வாடிக்கையாளர்களுக்கான அறிவிப்பு (Tamil)</a\\n            >\\n        </li>\\n    </ul>\\n</div>\\n\";","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport BigNumber from 'bignumber.js'\nimport { forkJoin, Observable, of, Subscription } from 'rxjs'\nimport { flatMap, map, switchMap, tap } from 'rxjs/operators'\nimport { FeesQuery } from 'src/app/store/fees/fees.query'\nimport { FeesService } from 'src/app/store/fees/fees.service'\nimport { FeeType, IFee, IUser, TransactionMethod } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\n@Component({\n    selector: 'sgpmx-term-fees',\n    templateUrl: 'sgpmx-term-fees.component.html',\n})\nexport class SgpmxTermFeesComponent implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    public fees: IFee[] = []\n    public isLoading = false\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private session: SessionService,\n        private route: ActivatedRoute,\n        private http: HttpClient,\n        private feesQuery: FeesQuery,\n        private feesService: FeesService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            of(undefined)\n                .pipe(\n                    tap(() => {\n                        this.isLoading = true\n                    }),\n                    switchMap(() => (this.session.isAuthenticated() ? this.session.userStream : of(undefined))),\n                    flatMap(sessionUser => {\n                        const referrerId = this.route.snapshot.queryParamMap.get('referrerId')\n                        const activationToken = this.route.snapshot.queryParamMap.get('activationToken')\n                        const user = this.user || sessionUser\n                        let headers = new HttpHeaders()\n\n                        if (activationToken) {\n                            headers = headers.set('X-Activation-Token', activationToken)\n                        }\n                        return user && user.id\n                            ? forkJoin([\n                                  this.http.get<IFee[]>(`/users/${user.id}/fee-schedule`, {\n                                      params: { currencyCode: 'AU' },\n                                      headers,\n                                  }),\n                                  this.http.get<IFee[]>(`/users/${user.id}/fee-schedule`, {\n                                      params: { currencyCode: 'AG' },\n                                      headers,\n                                  }),\n                              ])\n                            : forkJoin([\n                                  this.http.get<IFee[]>(`/fee-schedule`, {\n                                      params: referrerId\n                                          ? {\n                                                currencyCode: 'AU',\n                                                referrerId,\n                                            }\n                                          : {\n                                                currencyCode: 'AU',\n                                            },\n                                  }),\n                                  this.http.get<IFee[]>(`/fee-schedule`, {\n                                      params: referrerId\n                                          ? {\n                                                currencyCode: 'AG',\n                                                referrerId,\n                                            }\n                                          : {\n                                                currencyCode: 'AG',\n                                            },\n                                  }),\n                              ])\n                    })\n                )\n                .subscribe(([goldFees, silverFees]) => {\n                    this.fees = [...goldFees, ...silverFees]\n                    this.isLoading = false\n                })\n        )\n        this.feesService.fetch()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public getFee(type: FeeType, method: TransactionMethod, currencyCode: string): IFee | null {\n        const found = this.fees.find(\n            fee => fee.type === type && fee.method === method && fee.currency.code === currencyCode\n        )\n        if (!found || (!found.relative && !found.fixed)) {\n            return null\n        }\n        return found\n    }\n\n    public getGst(): Observable<string> {\n        return this.feesQuery\n            .findByPrimaryAttributes({\n                type: 'gst',\n                method: 'internal',\n                currencyCode: 'USD',\n            })\n            .pipe(map(gst => (gst ? `${new BigNumber(gst.relative || 0).times(100).toFixed(0)}%` : 'FREE')))\n    }\n}\n","export default \"<div class=\\\"modal-body text-center my-2 e2e-registration-completed\\\">\\n    <img src=\\\"/img/icons/envelope.svg\\\" class=\\\"img-md mb-3\\\" />\\n    <h4 class=\\\"text-primary mb-3\\\">{{ 'common.email-verification' | translate }}</h4>\\n    <p class=\\\"mb-4\\\">\\n        {{ 'common.congrats-sent-email' | translate }} <span class=\\\"text-primary\\\">{{ email }}</span> {{ 'common.for-email-verification' | translate }}\\n    </p>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"modal.close()\\\">{{ 'common.got-it' | translate }}</button>\\n</div>\\n\";","\n// easing functions from \"Tween.js\"\n\nexports.linear = function(n){\n  return n;\n};\n\nexports.inQuad = function(n){\n  return n * n;\n};\n\nexports.outQuad = function(n){\n  return n * (2 - n);\n};\n\nexports.inOutQuad = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n;\n  return - 0.5 * (--n * (n - 2) - 1);\n};\n\nexports.inCube = function(n){\n  return n * n * n;\n};\n\nexports.outCube = function(n){\n  return --n * n * n + 1;\n};\n\nexports.inOutCube = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n;\n  return 0.5 * ((n -= 2 ) * n * n + 2);\n};\n\nexports.inQuart = function(n){\n  return n * n * n * n;\n};\n\nexports.outQuart = function(n){\n  return 1 - (--n * n * n * n);\n};\n\nexports.inOutQuart = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n;\n  return -0.5 * ((n -= 2) * n * n * n - 2);\n};\n\nexports.inQuint = function(n){\n  return n * n * n * n * n;\n}\n\nexports.outQuint = function(n){\n  return --n * n * n * n * n + 1;\n}\n\nexports.inOutQuint = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n * n;\n  return 0.5 * ((n -= 2) * n * n * n * n + 2);\n};\n\nexports.inSine = function(n){\n  return 1 - Math.cos(n * Math.PI / 2 );\n};\n\nexports.outSine = function(n){\n  return Math.sin(n * Math.PI / 2);\n};\n\nexports.inOutSine = function(n){\n  return .5 * (1 - Math.cos(Math.PI * n));\n};\n\nexports.inExpo = function(n){\n  return 0 == n ? 0 : Math.pow(1024, n - 1);\n};\n\nexports.outExpo = function(n){\n  return 1 == n ? n : 1 - Math.pow(2, -10 * n);\n};\n\nexports.inOutExpo = function(n){\n  if (0 == n) return 0;\n  if (1 == n) return 1;\n  if ((n *= 2) < 1) return .5 * Math.pow(1024, n - 1);\n  return .5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n};\n\nexports.inCirc = function(n){\n  return 1 - Math.sqrt(1 - n * n);\n};\n\nexports.outCirc = function(n){\n  return Math.sqrt(1 - (--n * n));\n};\n\nexports.inOutCirc = function(n){\n  n *= 2\n  if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n  return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n};\n\nexports.inBack = function(n){\n  var s = 1.70158;\n  return n * n * (( s + 1 ) * n - s);\n};\n\nexports.outBack = function(n){\n  var s = 1.70158;\n  return --n * n * ((s + 1) * n + s) + 1;\n};\n\nexports.inOutBack = function(n){\n  var s = 1.70158 * 1.525;\n  if ( ( n *= 2 ) < 1 ) return 0.5 * ( n * n * ( ( s + 1 ) * n - s ) );\n  return 0.5 * ( ( n -= 2 ) * n * ( ( s + 1 ) * n + s ) + 2 );\n};\n\nexports.inBounce = function(n){\n  return 1 - exports.outBounce(1 - n);\n};\n\nexports.outBounce = function(n){\n  if ( n < ( 1 / 2.75 ) ) {\n    return 7.5625 * n * n;\n  } else if ( n < ( 2 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 1.5 / 2.75 ) ) * n + 0.75;\n  } else if ( n < ( 2.5 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 2.25 / 2.75 ) ) * n + 0.9375;\n  } else {\n    return 7.5625 * ( n -= ( 2.625 / 2.75 ) ) * n + 0.984375;\n  }\n};\n\nexports.inOutBounce = function(n){\n  if (n < .5) return exports.inBounce(n * 2) * .5;\n  return exports.outBounce(n * 2 - 1) * .5 + .5;\n};\n\n// aliases\n\nexports['in-quad'] = exports.inQuad;\nexports['out-quad'] = exports.outQuad;\nexports['in-out-quad'] = exports.inOutQuad;\nexports['in-cube'] = exports.inCube;\nexports['out-cube'] = exports.outCube;\nexports['in-out-cube'] = exports.inOutCube;\nexports['in-quart'] = exports.inQuart;\nexports['out-quart'] = exports.outQuart;\nexports['in-out-quart'] = exports.inOutQuart;\nexports['in-quint'] = exports.inQuint;\nexports['out-quint'] = exports.outQuint;\nexports['in-out-quint'] = exports.inOutQuint;\nexports['in-sine'] = exports.inSine;\nexports['out-sine'] = exports.outSine;\nexports['in-out-sine'] = exports.inOutSine;\nexports['in-expo'] = exports.inExpo;\nexports['out-expo'] = exports.outExpo;\nexports['in-out-expo'] = exports.inOutExpo;\nexports['in-circ'] = exports.inCirc;\nexports['out-circ'] = exports.outCirc;\nexports['in-out-circ'] = exports.inOutCirc;\nexports['in-back'] = exports.inBack;\nexports['out-back'] = exports.outBack;\nexports['in-out-back'] = exports.inOutBack;\nexports['in-bounce'] = exports.inBounce;\nexports['out-bounce'] = exports.outBounce;\nexports['in-out-bounce'] = exports.inOutBounce;\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { of, Subject, Subscription } from 'rxjs'\nimport { flatMap, switchMap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { IUser, Term } from '../api-interfaces'\nimport { TermService } from '../services/compliance/term.service'\nimport { SessionService } from '../services/session.service'\n\ntype TermsModalStep = 'terms' | 'privacy' | 'fees'\n\nconst ease = require('ease-component')\nconst scroll = require('scroll')\n\n@Component({\n    selector: 'terms-modal',\n    templateUrl: 'terms-modal.component.html',\n})\nexport class TermsModalComponent implements OnInit, OnDestroy {\n    @Input()\n    public step: TermsModalStep = 'terms'\n    @Input()\n    public viewOnly = false\n    public term: Term\n    public user?: IUser\n    public appName = environment.appName\n\n    public subheader: string\n\n    public isDown = false\n    private modalContainer: HTMLElement\n\n    private fetchEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(\n        public activeModal: NgbActiveModal,\n        public translate: TranslateService,\n        private session: SessionService,\n        private termsService: TermService,\n        private element: ElementRef\n    ) {}\n\n    public ngOnInit(): void {\n        this.subheader = this.translate.instant('common.you-must-accept-the-terms')\n        this.subscriptions.add(\n            this.fetchEvent\n                .pipe(\n                    switchMap(() => (this.session.isAuthenticated() ? this.session.userStream : of(undefined))),\n                    flatMap(user => this.termsService.getApplicableTerm(user?.id))\n                )\n                .subscribe(term => {\n                    this.term = term\n                    setTimeout(() => this.scrollHandler())\n                })\n        )\n        this.fetchEvent.next()\n\n        this.modalContainer = this.element.nativeElement.querySelector('.terms-container') as HTMLElement\n        this.modalContainer.addEventListener('scroll', this.scrollHandler)\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n        this.modalContainer.removeEventListener('scroll', this.scrollHandler)\n    }\n\n    public nextStep(): void {\n        this.modalContainer.scrollTop = 0\n\n        if (this.step === 'terms') {\n            this.step = 'privacy'\n        } else if (this.step === 'privacy') {\n            this.step = 'fees'\n        } else {\n            this.activeModal.close()\n        }\n        this.subheader = `${this.translate.instant('common.you-must-accept-the')} ${\n            this.step === 'privacy' ? this.translate.instant('common.privacy-policy') : this.step\n        } ${this.translate.instant('common.to-continue')}`\n    }\n\n    public scrollDown(): void {\n        scroll.top(this.modalContainer, this.modalContainer.scrollHeight - this.modalContainer.clientHeight, {\n            duration: 1000,\n            ease: ease.inOutExpo,\n        })\n    }\n\n    private scrollHandler = () => {\n        // 25px threshold\n        if (this.modalContainer.scrollTop >= this.modalContainer.scrollHeight - this.modalContainer.offsetHeight - 25) {\n            this.isDown = true\n        } else {\n            this.isDown = false\n        }\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { IonicModule } from '@ionic/angular'\nimport { CommonModule } from '../common.module'\nimport { SgpmxTermFeesComponent } from './sgpmx-term-fees/sgpmx-term-fees.component'\nimport { TermFeesComponent } from './term-fees/term-fees.component'\nimport { TermsModalComponent } from './terms-modal.component'\n\n@NgModule({\n    declarations: [TermsModalComponent, TermFeesComponent, SgpmxTermFeesComponent],\n    exports: [TermsModalComponent],\n    imports: [CommonModule, IonicModule],\n})\nexport class TermsModalModule {}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { find } from 'lodash'\nimport { of, Subject, Subscription } from 'rxjs'\nimport { flatMap, switchMap, tap } from 'rxjs/operators'\nimport { FeeType, ICurrency, IFee, IUser, Paginated, TransactionMethod } from '../../api-interfaces'\nimport { Currency } from '../../models/accounting/currency.model'\nimport { SessionService } from '../../services/session.service'\n\n@Component({\n    selector: 'term-fees',\n    templateUrl: 'term-fees.component.html',\n})\nexport class TermFeesComponent implements OnInit, OnDestroy {\n    public fees: IFee[]\n    public currency: ICurrency\n    public currencies: ICurrency[] = []\n    public fetchEvent = new Subject<void>()\n    @Input()\n    public user?: IUser\n    public isLoading = false\n\n    protected subscriptions = new Subscription()\n\n    constructor(protected http: HttpClient, public session: SessionService, private route: ActivatedRoute) {}\n\n    public ngOnInit(): void {\n        this.http\n            .get<Paginated<ICurrency>>('/currencies', {\n                params: {\n                    limit: 100 + '',\n                },\n            })\n            .subscribe(response => {\n                this.currencies = response.data\n                this.currency = find(this.currencies, {\n                    code: this.session.user ? this.session.user.preferredCurrency.code : 'USD',\n                })!\n                this.fetchEvent.next()\n            })\n        this.subscriptions.add(\n            this.fetchEvent\n                .pipe(\n                    tap(() => {\n                        this.isLoading = true\n                    }),\n                    switchMap(() => (this.session.isAuthenticated() ? this.session.userStream : of(undefined))),\n                    flatMap(sessionUser => {\n                        const params = {\n                            currencyCode: this.currency.code,\n                        }\n                        const referrerId = this.route.snapshot.queryParamMap.get('referrerId')\n                        const user = this.user || sessionUser\n                        const activationToken = this.route.snapshot.queryParamMap.get('activationToken')\n                        let headers = new HttpHeaders()\n                        if (activationToken) {\n                            headers = headers.set('X-Activation-Token', activationToken)\n                        }\n                        return user && user.id\n                            ? this.http.get<IFee[]>(`/users/${user.id}/fee-schedule`, {\n                                  params,\n                                  headers,\n                              })\n                            : this.http.get<IFee[]>(`/fee-schedule`, {\n                                  params: referrerId\n                                      ? {\n                                            ...params,\n                                            referrerId,\n                                        }\n                                      : params,\n                              })\n                    })\n                )\n                .subscribe(fees => {\n                    this.fees = fees\n                    this.isLoading = false\n                })\n        )\n    }\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public getFee(type: FeeType, method: TransactionMethod): IFee | null {\n        const found = find(this.fees, fee => fee.type === type && fee.method === method)\n        if (!found || (!found.relative && !found.fixed)) {\n            return null\n        }\n        return found\n    }\n\n    public convert(amount: string, baseCurrency: ICurrency): string {\n        const base = this.currencies.find(currency => currency.code === baseCurrency.code)\n        const counter = this.currencies.find(currency => currency.code === this.currency.code)\n        if (!base || !counter) {\n            return '0'\n        }\n        return Currency.convert(amount, base, counter)\n    }\n\n    public onCurrencyChange() {\n        this.fees = []\n        this.fetchEvent.next()\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { forkJoin, Observable } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { IFee } from '../../common/api-interfaces'\nimport { FeesStore } from './fees.store'\n\n@Injectable({ providedIn: 'root' })\nexport class FeesService {\n    constructor(protected store: FeesStore, private http: HttpClient, private session: SessionService) {}\n\n    public fetchAsObservable(): Observable<IFee[]> {\n        return forkJoin([\n            this.http.get<IFee[]>(`/users/${this.session.user.id}/fee-schedule`, {\n                params: {\n                    currencyCode: 'AU',\n                },\n            }),\n            this.http.get<IFee[]>(`/users/${this.session.user.id}/fee-schedule`, {\n                params: {\n                    currencyCode: 'AG',\n                },\n            }),\n            this.http.get<IFee[]>(`/users/${this.session.user.id}/fee-schedule`, {\n                params: {\n                    currencyCode: 'USD',\n                },\n            }),\n        ]).pipe(\n            map(([goldFees, silverFees, usdFees]) => [...goldFees, ...silverFees, ...usdFees]),\n            tap(fees => {\n                this.store.set(fees)\n            })\n        )\n    }\n\n    public fetch(): void {\n        this.fetchAsObservable().subscribe(() => undefined)\n    }\n}\n","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n    selector: 'email-verification-modal',\n    templateUrl: 'email-verification-modal.component.html',\n})\nexport class EmailVerificationModalComponent {\n    public email: string\n    constructor(public modal: NgbActiveModal) {}\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n        {{\\n            (step === 'terms' ? 'common.terms-and-conditions' : step === 'privacy' ? 'common.data-privacy-notice' : 'common.fee-schedule')\\n                | translate\\n                | titlecase\\n        }}\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div *ngIf=\\\"!viewOnly\\\" class=\\\"modal-subheader\\\">\\n    {{ subheader }}\\n</div>\\n<div class=\\\"modal-body terms-container text-body e2e-terms-modal\\\">\\n    <ng-container *ngIf=\\\"term; else loadingContent\\\">\\n        <div *ngIf=\\\"step === 'terms'\\\" [innerHtml]=\\\"term.terms | safeHtml\\\"></div>\\n        <div *ngIf=\\\"step === 'privacy'\\\" [innerHtml]=\\\"term.privacy | safeHtml\\\"></div>\\n        <div *ngIf=\\\"step === 'fees'\\\">\\n            <ng-container *ngIf=\\\"appName !== 'sgpmx'; else sgpmxFees\\\">\\n                <term-fees [user]=\\\"user\\\"></term-fees>\\n            </ng-container>\\n            <ng-template #sgpmxFees>\\n                <sgpmx-term-fees [user]=\\\"user\\\"></sgpmx-term-fees>\\n            </ng-template>\\n        </div>\\n    </ng-container>\\n    <ng-template #loadingContent>\\n        <svg class=\\\"spinner spinner-dark\\\" viewBox=\\\"0 0 50 50\\\">\\n            <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"5\\\"></circle>\\n        </svg>\\n        <p class=\\\"mb-0 mt-5 text-center\\\">{{ 'common.loading-terms' | translate }}</p>\\n    </ng-template>\\n</div>\\n<div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n    <ng-container *ngIf=\\\"!viewOnly; else closeButton\\\">\\n        <button class=\\\"btn btn-link mr-md-auto mb-2 mb-md-0 e2e-scroll-down-button\\\" (click)=\\\"scrollDown()\\\">\\n            {{ 'common.scroll-to-bottom' | translate }}\\n        </button>\\n        <div class=\\\"d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-default btn-w-sm ml-1\\\" (click)=\\\"activeModal.dismiss()\\\">{{ 'common.decline' | translate }}</button>\\n            <button class=\\\"btn btn-success btn-w-sm ml-1 e2e-accept-button\\\" (click)=\\\"nextStep()\\\" [disabled]=\\\"!isDown\\\">\\n                {{ 'common.accept' | translate }}\\n            </button>\\n        </div>\\n    </ng-container>\\n    <ng-template #closeButton>\\n        <div class=\\\"d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"activeModal.dismiss()\\\">{{ 'common.close' | translate }}</button>\\n        </div>\\n    </ng-template>\\n</div>\\n\";","import { Injectable } from '@angular/core'\nimport { CanActivate, Router, UrlTree } from '@angular/router'\nimport { SessionService } from '../common/services/session.service'\n\n@Injectable()\nexport class RegistrationAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(): boolean | UrlTree {\n        if (this.session.isAuthenticated()) {\n            return this.router.parseUrl('/dashboard')\n        }\n        return true\n    }\n}\n","var E_NOSCROLL = new Error('Element already at target scroll position')\nvar E_CANCELLED = new Error('Scroll cancelled')\nvar min = Math.min\nvar ms = Date.now\n\nmodule.exports = {\n  left: make('scrollLeft'),\n  top: make('scrollTop')\n}\n\nfunction make (prop) {\n  return function scroll (el, to, opts, cb) {\n    opts = opts || {}\n\n    if (typeof opts == 'function') cb = opts, opts = {}\n    if (typeof cb != 'function') cb = noop\n\n    var start = ms()\n    var from = el[prop]\n    var ease = opts.ease || inOutSine\n    var duration = !isNaN(opts.duration) ? +opts.duration : 350\n    var cancelled = false\n\n    return from === to ?\n      cb(E_NOSCROLL, el[prop]) :\n      requestAnimationFrame(animate), cancel\n\n    function cancel () {\n      cancelled = true\n    }\n\n    function animate (timestamp) {\n      if (cancelled) return cb(E_CANCELLED, el[prop])\n\n      var now = ms()\n      var time = min(1, ((now - start) / duration))\n      var eased = ease(time)\n\n      el[prop] = (eased * (to - from)) + from\n\n      time < 1 ?\n        requestAnimationFrame(animate) :\n        requestAnimationFrame(function () {\n          cb(null, el[prop])\n        })\n    }\n  }\n}\n\nfunction inOutSine (n) {\n  return 0.5 * (1 - Math.cos(Math.PI * n))\n}\n\nfunction noop () {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { RegistrationAuthGuard } from './registration.auth-guard'\nimport { RegistrationComponent } from './registration.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RegistrationComponent,\n        canActivate: [RegistrationAuthGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers: [RegistrationAuthGuard],\n})\nexport class RegistrationRoutingModule {}\n"]}